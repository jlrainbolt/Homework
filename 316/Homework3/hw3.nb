(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    265153,       5446]
NotebookOptionsPosition[    252190,       5210]
NotebookOutlinePosition[    252526,       5225]
CellTagsIndexPosition[    252483,       5222]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"xdd1", "+", " ", 
     RowBox[{
      FractionBox["m", "M"], "xdd2"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"\[Omega]", "^", "2"}], " ", "x1"}]}], " ", "==", "0"}], ",", 
   " ", "xdd2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7811094962999563`*^9, 3.781109568608512*^9}, {
   3.781109714240291*^9, 3.781109714453744*^9}, {3.781109767532117*^9, 
   3.781109774010188*^9}, 
   3.781122973587936*^9},ExpressionUUID->"92b2234b-49e4-4215-90b4-\
427d07351564"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"xdd2", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"M", " ", 
       RowBox[{"(", 
        RowBox[{"xdd1", "+", 
         RowBox[{"x1", " ", 
          SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "m"]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7811095492977533`*^9, 3.781109568991506*^9}, 
   3.7811097184731007`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"ed02c072-0142-49d2-8002-7eb34855ce53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"xdd2", " ", "+", " ", 
     RowBox[{
      FractionBox["m", "M"], "xdd1"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"\[Omega]", "^", "2"}], " ", "x2"}]}], " ", "\[Equal]", " ", 
    "0"}], ",", " ", "xdd1"}], "]"}]], "Input",
 CellChangeTimes->{{3.781109571176979*^9, 3.781109590688231*^9}, {
  3.781109715856255*^9, 3.781109716653754*^9}, {3.7811097693079777`*^9, 
  3.7811097726182327`*^9}},ExpressionUUID->"d854ae9e-d3a5-4adb-a828-\
b5e011a080ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"xdd1", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"M", " ", 
       RowBox[{"(", 
        RowBox[{"xdd2", "+", 
         RowBox[{"x2", " ", 
          SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "m"]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.781109591146015*^9, 3.781109717077766*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"1bb6a422-6e88-4ba2-abe4-7877633bb96d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FactorTerms", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"M", " ", 
       RowBox[{"(", 
        RowBox[{"xdd2", "+", 
         RowBox[{"x2", " ", 
          SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "m"]}], "+", " ", 
    RowBox[{
     FractionBox["m", "M"], "xdd2"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"\[Omega]", "^", "2"}], " ", "x1"}]}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"xdd1", ",", "x1", ",", "x2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.781109604161343*^9, 3.781109669313612*^9}, {
  3.781109733168486*^9, 3.781109756350552*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"4c41f4cc-240b-4750-b1e6-1fc1ac433553"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"m", " ", "xdd2"}], "M"], "-", 
  FractionBox[
   RowBox[{"M", " ", "xdd2"}], "m"], "+", 
  RowBox[{"x1", " ", 
   SuperscriptBox["\[Omega]", "2"]}], "-", 
  FractionBox[
   RowBox[{"M", " ", "x2", " ", 
    SuperscriptBox["\[Omega]", "2"]}], "m"]}]], "Output",
 CellChangeTimes->{{3.781109610164138*^9, 3.781109669794757*^9}, {
  3.781109733944018*^9, 3.781109756767239*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"c88acff2-a4f8-4a9d-8d09-e3627d27e5b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"m", " ", "xdd2"}], "M"], "-", 
     FractionBox[
      RowBox[{"M", " ", "xdd2"}], "m"], "+", 
     RowBox[{"x1", " ", 
      SuperscriptBox["\[Omega]", "2"]}], "-", 
     FractionBox[
      RowBox[{"M", " ", "x2", " ", 
       SuperscriptBox["\[Omega]", "2"]}], "m"]}], "\[Equal]", "0"}], ",", 
   "xdd2"}], "]"}]], "Input",
 CellChangeTimes->{{3.781109787803392*^9, 3.781109803974142*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"1d79d3b2-7bb0-4623-bc2d-fb139da84cd2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"xdd2", "\[Rule]", 
    FractionBox[
     RowBox[{"M", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "m"}], " ", "x1", " ", 
         SuperscriptBox["\[Omega]", "2"]}], "+", 
        RowBox[{"M", " ", "x2", " ", 
         SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["m", "2"], "-", 
      SuperscriptBox["M", "2"]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.781109792716641*^9, 3.781109804576144*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"a9780bc4-b90e-401a-b23e-7e66d84b9b85"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FactorTerms", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"M", " ", 
       RowBox[{"(", 
        RowBox[{"xdd1", "+", 
         RowBox[{"x1", " ", 
          SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "m"]}], " ", "+", " ", 
    RowBox[{
     FractionBox["m", "M"], "xdd1"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"\[Omega]", "^", "2"}], " ", "x2"}]}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"xdd1", ",", "x1", ",", "x2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.781109846665946*^9, 3.78110985888211*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"ada75109-0ca2-42b7-aecd-a7206de7738d"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"m", " ", "xdd1"}], "M"], "-", 
  FractionBox[
   RowBox[{"M", " ", "xdd1"}], "m"], "-", 
  FractionBox[
   RowBox[{"M", " ", "x1", " ", 
    SuperscriptBox["\[Omega]", "2"]}], "m"], "+", 
  RowBox[{"x2", " ", 
   SuperscriptBox["\[Omega]", "2"]}]}]], "Output",
 CellChangeTimes->{3.78110985955114*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"6afee624-7427-47bf-8367-c36c42bfa5f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"m", " ", "xdd1"}], "M"], "-", 
     FractionBox[
      RowBox[{"M", " ", "xdd1"}], "m"], "-", 
     FractionBox[
      RowBox[{"M", " ", "x1", " ", 
       SuperscriptBox["\[Omega]", "2"]}], "m"], "+", 
     RowBox[{"x2", " ", 
      SuperscriptBox["\[Omega]", "2"]}]}], "\[Equal]", "0"}], ",", "xdd1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.781109870145955*^9, 3.781109876704296*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"4226178c-c306-400e-8d1d-d18eb6b08387"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"xdd1", "\[Rule]", 
    FractionBox[
     RowBox[{"M", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"M", " ", "x1", " ", 
         SuperscriptBox["\[Omega]", "2"]}], "-", 
        RowBox[{"m", " ", "x2", " ", 
         SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["m", "2"], "-", 
      SuperscriptBox["M", "2"]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7811098770970592`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"a49e67fe-15c4-494d-982a-f374f49777c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"M", "^", "2"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "M"}], " ", "m"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "M"}], " ", "m"}], ",", " ", 
      RowBox[{"M", "^", "2"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7811098926535873`*^9, 3.781109920498405*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"acddc7f9-0555-4867-a2fc-94de5b36846f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["M", "2"], ",", 
     RowBox[{
      RowBox[{"-", "m"}], " ", "M"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "m"}], " ", "M"}], ",", 
     SuperscriptBox["M", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.781109924366239*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"4d514592-326a-42da-b6bf-47f228af6132"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "A", "]"}]], "Input",
 CellChangeTimes->{{3.7811099255312366`*^9, 3.781109927962723*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"fb7d11ff-e647-4541-b376-d9d407cb6540"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"M", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "m"}], "+", "M"}], ")"}]}], ",", 
   RowBox[{"M", " ", 
    RowBox[{"(", 
     RowBox[{"m", "+", "M"}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.781109928527341*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"61f92037-cd88-49c2-9095-5968c936d1fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]1", " ", "-", " ", "\[Theta]2"}], "]"}], ",", " ", 
   "\[Theta]1"}], "]"}]], "Input",
 CellChangeTimes->{{3.781118198158502*^9, 3.7811182126608467`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"301eef08-1ba0-4689-990f-13388ba0cc5d"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Sin", "[", 
   RowBox[{"\[Theta]1", "-", "\[Theta]2"}], "]"}]}]], "Output",
 CellChangeTimes->{3.781118213136442*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"f4ff88f4-0b2e-478a-a5b5-fc76fa4fb90b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]1", " ", "-", " ", "\[Theta]2"}], "]"}], ",", " ", 
   "\[Theta]2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7811185246633453`*^9, 3.781118524838645*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"9c72a75d-a6c8-4109-8d3e-5b0e8eab2ef8"],

Cell[BoxData[
 RowBox[{"Sin", "[", 
  RowBox[{"\[Theta]1", "-", "\[Theta]2"}], "]"}]], "Output",
 CellChangeTimes->{3.781118525258095*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"a9553645-28ff-4df3-a095-e6daa0a97b56"]
}, Open  ]],

Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.7811202163892612`*^9, 3.781120217019731*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"f0a0be2e-0ad5-4708-b547-9e9facdd070e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"L", " ", "=", " ", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{"m1", " ", "+", " ", "m2"}], ")"}], " ", 
    SuperscriptBox["l1", "2"], " ", 
    SuperscriptBox["\[Theta]d1", "2"]}], "+", 
   RowBox[{
    FractionBox["1", "2"], "m2", " ", 
    SuperscriptBox["l2", "2"], " ", 
    SuperscriptBox["\[Theta]d2", "2"]}], "+", " ", 
   RowBox[{"m2", " ", "l1", " ", "l2", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]1", " ", "-", " ", "\[Theta]2"}], "]"}], " ", 
    "\[Theta]d1", " ", "\[Theta]d2"}], " ", "+", " ", 
   RowBox[{"g", " ", 
    RowBox[{"(", 
     RowBox[{"m1", " ", "+", " ", "m2"}], ")"}], " ", "l1", " ", 
    RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", "+", " ", 
   RowBox[{"g", " ", "m2", " ", "l2", " ", 
    RowBox[{"Cos", "[", "\[Theta]2", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.781118788366571*^9, 3.781118915888426*^9}, {
  3.781118960691372*^9, 3.781118961025065*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"29fe6d9c-6682-4d63-b05b-f4dcfdc8e7e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["l1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"m1", "+", "m2"}], ")"}], " ", 
   SuperscriptBox["\[Theta]d1", "2"]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["l2", "2"], " ", "m2", " ", 
   SuperscriptBox["\[Theta]d2", "2"]}], "+", 
  RowBox[{"g", " ", "l1", " ", 
   RowBox[{"(", 
    RowBox[{"m1", "+", "m2"}], ")"}], " ", 
   RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
  RowBox[{
  "l1", " ", "l2", " ", "m2", " ", "\[Theta]d1", " ", "\[Theta]d2", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]1", "-", "\[Theta]2"}], "]"}]}], "+", 
  RowBox[{"g", " ", "l2", " ", "m2", " ", 
   RowBox[{"Cos", "[", "\[Theta]2", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7811189167643337`*^9, 3.7811189614168367`*^9, {3.781119991927821*^9, 
   3.7811200102725973`*^9}, 3.781120223136036*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"43fecfc6-50d7-4404-bef1-0dcb9e9bc424"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{"L", ",", " ", "\[Theta]1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7811189189448967`*^9, 3.78111892862405*^9}, 
   3.7811200373351917`*^9, 3.78112023033611*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"6fef863d-9e3c-48ba-8068-a39a8cf7ca90"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "g"}], " ", "l1", " ", 
   RowBox[{"(", 
    RowBox[{"m1", "+", "m2"}], ")"}], " ", 
   RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "-", 
  RowBox[{
  "l1", " ", "l2", " ", "m2", " ", "\[Theta]d1", " ", "\[Theta]d2", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]1", "-", "\[Theta]2"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.781118929053851*^9, 3.78111896367632*^9, {3.7811199995085983`*^9, 
   3.7811200379334087`*^9}, 3.781120231126112*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"f71b3e8f-f53e-4e28-8749-2a534f129956"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{"L", ",", " ", "\[Theta]2"}], "]"}]], "Input",
 CellChangeTimes->{{3.781118945984654*^9, 3.7811189461120567`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"b76b3ce0-24d5-4b2c-822c-3853d5953905"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "l1", " ", "l2", " ", "m2", " ", "\[Theta]d1", " ", "\[Theta]d2", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]1", "-", "\[Theta]2"}], "]"}]}], "-", 
  RowBox[{"g", " ", "l2", " ", "m2", " ", 
   RowBox[{"Sin", "[", "\[Theta]2", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.781118946573866*^9, 3.7811189653735723`*^9}, 
   3.781120233302327*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"a9106ef3-40e4-49fa-9e9f-6316c2a94a21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"L", ",", " ", "\[Theta]1"}], "]"}], ",", "\[Theta]1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.78111897582452*^9, 3.78111899004875*^9}, {
   3.78111992741371*^9, 3.781119943203432*^9}, 3.781120238925826*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"f03505c0-68d3-462b-afde-ec8256768f95"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "g"}], " ", "l1", " ", 
   RowBox[{"(", 
    RowBox[{"m1", "+", "m2"}], ")"}], " ", 
   RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
  RowBox[{
  "l1", " ", "l2", " ", "m2", " ", "\[Theta]d1", " ", "\[Theta]d2", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]1", "-", "\[Theta]2"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.781120239677429*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"e3abb582-4ab8-4e16-ac85-2ee8a19892aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"L", ",", " ", "\[Theta]2"}], "]"}], ",", "\[Theta]2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.781119133386232*^9, 3.781119134810381*^9}, {
   3.781119951063344*^9, 3.781119953387402*^9}, 3.781120245765513*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"67bf0f34-d698-485f-9826-0b16f2cf9704"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "l1"}], " ", "l2", " ", "m2", " ", "\[Theta]d1", " ", 
   "\[Theta]d2", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]1", "-", "\[Theta]2"}], "]"}]}], "-", 
  RowBox[{"g", " ", "l2", " ", "m2", " ", 
   RowBox[{"Cos", "[", "\[Theta]2", "]"}]}]}]], "Output",
 CellChangeTimes->{3.7811202462972107`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"0a3016c0-ad21-40be-82dc-c78d5004fc0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"L", ",", " ", "\[Theta]1"}], "]"}], ",", "\[Theta]2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.781120726878729*^9, 3.781120727078124*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"4cd2f8e1-b5c4-436d-b188-60aa0f41e7cb"],

Cell[BoxData[
 RowBox[{"l1", " ", "l2", " ", "m2", " ", "\[Theta]d1", " ", "\[Theta]d2", 
  " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"\[Theta]1", "-", "\[Theta]2"}], "]"}]}]], "Output",
 CellChangeTimes->{3.781120727522276*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"528f3d8a-7985-4dd5-a9aa-4fe473583a8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"L", ",", " ", "\[Theta]2"}], "]"}], ",", "\[Theta]1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7811207359987173`*^9, 3.7811207361501827`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"ede86bfd-cdaa-4981-921c-3a731d3f8bbb"],

Cell[BoxData[
 RowBox[{"l1", " ", "l2", " ", "m2", " ", "\[Theta]d1", " ", "\[Theta]d2", 
  " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"\[Theta]1", "-", "\[Theta]2"}], "]"}]}]], "Output",
 CellChangeTimes->{3.781120736532304*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"6838cf61-8b5e-4bb1-b44c-e4b874662073"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lf", "[", 
   RowBox[{"\[Theta]1_", ",", " ", "\[Theta]2_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{"m1", " ", "+", " ", "m2"}], ")"}], " ", 
    SuperscriptBox["l1", "2"], " ", 
    SuperscriptBox["\[Theta]d1", "2"]}], "+", 
   RowBox[{
    FractionBox["1", "2"], "m2", " ", 
    SuperscriptBox["l2", "2"], " ", 
    SuperscriptBox["\[Theta]d2", "2"]}], "+", " ", 
   RowBox[{"m2", " ", "l1", " ", "l2", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]1", " ", "-", " ", "\[Theta]2"}], "]"}], " ", 
    "\[Theta]d1", " ", "\[Theta]d2"}], " ", "+", " ", 
   RowBox[{"g", " ", 
    RowBox[{"(", 
     RowBox[{"m1", " ", "+", " ", "m2"}], ")"}], " ", "l1", " ", 
    RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", "+", " ", 
   RowBox[{"g", " ", "m2", " ", "l2", " ", 
    RowBox[{"Cos", "[", "\[Theta]2", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7811198606280727`*^9, 3.781119877843416*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"02584ab3-df56-4288-9daf-d10bb0eb8809"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Lf", "[", 
   RowBox[{"0", ",", "0"}], "]"}], "+", 
  RowBox[{"D1f", "[", 
   RowBox[{"0", ",", "0"}], "]"}], " ", "+", " ", 
  RowBox[{"D2f", "[", 
   RowBox[{"0", ",", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.781119918020187*^9, {3.78111996670785*^9, 3.781119978427281*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"5ddad58a-c485-47df-8e54-596e9b1b3779"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", " ", "l2", " ", "m2"}], "+", 
  RowBox[{"g", " ", "l1", " ", 
   RowBox[{"(", 
    RowBox[{"m1", "+", "m2"}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["l1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"m1", "+", "m2"}], ")"}], " ", 
   SuperscriptBox["\[Theta]d1", "2"]}], "+", 
  RowBox[{"l1", " ", "l2", " ", "m2", " ", "\[Theta]d1", " ", "\[Theta]d2"}], 
  "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["l2", "2"], " ", "m2", " ", 
   SuperscriptBox["\[Theta]d2", "2"]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{
    SubscriptBox["\[PartialD]", "0"], 
    RowBox[{
     SubscriptBox["\[PartialD]", "0"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"g", " ", "l2", " ", "m2"}], "+", 
       RowBox[{"g", " ", "l1", " ", 
        RowBox[{"(", 
         RowBox[{"m1", "+", "m2"}], ")"}]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["l1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"m1", "+", "m2"}], ")"}], " ", 
        SuperscriptBox["\[Theta]d1", "2"]}], "+", 
       RowBox[{
       "l1", " ", "l2", " ", "m2", " ", "\[Theta]d1", " ", "\[Theta]d2"}], 
       "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["l2", "2"], " ", "m2", " ", 
        SuperscriptBox["\[Theta]d2", "2"]}]}], ")"}]}]}]}]}]], "Output",
 CellChangeTimes->{3.781119978807675*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"5a3874e8-bf29-42b3-890f-3a88e063d691"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{"L", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]1", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]2", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.781121059714575*^9, 3.781121085409306*^9}, {
  3.781121200367424*^9, 3.781121220756877*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"f8e88569-9356-4b95-90f7-30c8c2ff2c64"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"(", 
    InterpretationBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"g", " ", "l2", " ", "m2"}], "+", 
        RowBox[{"g", " ", "l1", " ", 
         RowBox[{"(", 
          RowBox[{"m1", "+", "m2"}], ")"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox["l1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"m1", "+", "m2"}], ")"}], " ", 
         SuperscriptBox["\[Theta]d1", "2"]}], "+", 
        RowBox[{
        "l1", " ", "l2", " ", "m2", " ", "\[Theta]d1", " ", "\[Theta]d2"}], 
        "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox["l2", "2"], " ", "m2", " ", 
         SuperscriptBox["\[Theta]d2", "2"]}]}], ")"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", "g", " ", "l2", " ", "m2"}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "l1", " ", "l2", " ", "m2", " ", 
          "\[Theta]d1", " ", "\[Theta]d2"}]}], ")"}], " ", 
       SuperscriptBox["\[Theta]2", "2"]}], "+", 
      InterpretationBox[
       SuperscriptBox[
        RowBox[{"O", "[", "\[Theta]2", "]"}], "3"],
       SeriesData[$CellContext`\[Theta]2, 0, {}, 0, 3, 1],
       Editable->False]}],
     SeriesData[$CellContext`\[Theta]2, 
      0, {$CellContext`g $CellContext`l2 $CellContext`m2 + $CellContext`g \
$CellContext`l1 ($CellContext`m1 + $CellContext`m2) + 
       Rational[
         1, 2] $CellContext`l1^2 ($CellContext`m1 + $CellContext`m2) \
$CellContext`\[Theta]d1^2 + $CellContext`l1 $CellContext`l2 $CellContext`m2 \
$CellContext`\[Theta]d1 $CellContext`\[Theta]d2 + 
       Rational[
         1, 2] $CellContext`l2^2 $CellContext`m2 $CellContext`\[Theta]d2^2, 0,
        Rational[-1, 2] $CellContext`g $CellContext`l2 $CellContext`m2 + 
       Rational[-1, 
          2] $CellContext`l1 $CellContext`l2 $CellContext`m2 $CellContext`\
\[Theta]d1 $CellContext`\[Theta]d2}, 0, 3, 1],
     Editable->False], ")"}], "+", 
   RowBox[{
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{
       RowBox[{
       "l1", " ", "l2", " ", "m2", " ", "\[Theta]d1", " ", "\[Theta]d2", " ", 
        "\[Theta]2"}], "+", 
       InterpretationBox[
        SuperscriptBox[
         RowBox[{"O", "[", "\[Theta]2", "]"}], "3"],
        SeriesData[$CellContext`\[Theta]2, 0, {}, 1, 3, 1],
        Editable->False]}],
      SeriesData[$CellContext`\[Theta]2, 
       0, {$CellContext`l1 $CellContext`l2 $CellContext`m2 $CellContext`\
\[Theta]d1 $CellContext`\[Theta]d2}, 1, 3, 1],
      Editable->False], ")"}], " ", "\[Theta]1"}], "+", 
   RowBox[{
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", "g", " ", "l1", " ", 
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "l1", " ", "l2", " ", "m2", " ", 
          "\[Theta]d1", " ", "\[Theta]d2"}]}], ")"}], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", "l1", " ", "l2", " ", "m2", " ", 
        "\[Theta]d1", " ", "\[Theta]d2", " ", 
        SuperscriptBox["\[Theta]2", "2"]}], "+", 
       InterpretationBox[
        SuperscriptBox[
         RowBox[{"O", "[", "\[Theta]2", "]"}], "3"],
        SeriesData[$CellContext`\[Theta]2, 0, {}, 0, 3, 1],
        Editable->False]}],
      SeriesData[$CellContext`\[Theta]2, 0, {
       Rational[-1, 
           2] $CellContext`g $CellContext`l1 ($CellContext`m1 + \
$CellContext`m2) + 
        Rational[-1, 
           2] $CellContext`l1 $CellContext`l2 $CellContext`m2 $CellContext`\
\[Theta]d1 $CellContext`\[Theta]d2, 0, 
        Rational[
         1, 4] $CellContext`l1 $CellContext`l2 $CellContext`m2 $CellContext`\
\[Theta]d1 $CellContext`\[Theta]d2}, 0, 3, 1],
      Editable->False], ")"}], " ", 
    SuperscriptBox["\[Theta]1", "2"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Theta]1", "]"}], "3"],
    SeriesData[$CellContext`\[Theta]1, 0, {}, 0, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Theta]1, 0, {
    SeriesData[$CellContext`\[Theta]2, 
     0, {$CellContext`g $CellContext`l2 $CellContext`m2 + $CellContext`g \
$CellContext`l1 ($CellContext`m1 + $CellContext`m2) + 
      Rational[1, 
         2] $CellContext`l1^2 ($CellContext`m1 + $CellContext`m2) \
$CellContext`\[Theta]d1^2 + $CellContext`l1 $CellContext`l2 $CellContext`m2 \
$CellContext`\[Theta]d1 $CellContext`\[Theta]d2 + 
      Rational[1, 
         2] $CellContext`l2^2 $CellContext`m2 $CellContext`\[Theta]d2^2, 0, 
      Rational[-1, 2] $CellContext`g $CellContext`l2 $CellContext`m2 + 
      Rational[-1, 
         2] $CellContext`l1 $CellContext`l2 $CellContext`m2 $CellContext`\
\[Theta]d1 $CellContext`\[Theta]d2}, 0, 3, 1], 
    SeriesData[$CellContext`\[Theta]2, 
     0, {$CellContext`l1 $CellContext`l2 $CellContext`m2 \
$CellContext`\[Theta]d1 $CellContext`\[Theta]d2}, 1, 3, 1], 
    SeriesData[$CellContext`\[Theta]2, 0, {
     Rational[-1, 
         2] $CellContext`g $CellContext`l1 ($CellContext`m1 + \
$CellContext`m2) + 
      Rational[-1, 
         2] $CellContext`l1 $CellContext`l2 $CellContext`m2 $CellContext`\
\[Theta]d1 $CellContext`\[Theta]d2, 0, 
      Rational[1, 
        4] $CellContext`l1 $CellContext`l2 $CellContext`m2 $CellContext`\
\[Theta]d1 $CellContext`\[Theta]d2}, 0, 3, 1]}, 0, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.781121085817313*^9, 3.781121221315508*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"85b1b68a-af04-4108-9087-974322a5dfe5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"g", " ", "l2", " ", "m2"}], "+", 
   RowBox[{"g", " ", "l1", " ", 
    RowBox[{"(", 
     RowBox[{"m1", "+", "m2"}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["l1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"m1", "+", "m2"}], ")"}], " ", 
    SuperscriptBox["\[Theta]d1", "2"]}], "+", 
   RowBox[{"l1", " ", "l2", " ", "m2", " ", "\[Theta]d1", " ", "\[Theta]d2"}],
    "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["l2", "2"], " ", "m2", " ", 
    SuperscriptBox["\[Theta]d2", "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "g", " ", "l2", " ", "m2"}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "l1", " ", "l2", " ", "m2", " ", 
       "\[Theta]d1", " ", "\[Theta]d2"}]}], ")"}], " ", 
    SuperscriptBox["\[Theta]2", "2"]}], "+", 
   RowBox[{
   "l1", " ", "l2", " ", "m2", " ", "\[Theta]d1", " ", "\[Theta]d2", " ", 
    "\[Theta]2", " ", "\[Theta]1"}], " ", "+", " ", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", "g", " ", "l1", " ", 
    RowBox[{"(", 
     RowBox[{"m1", "+", "m2"}], ")"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", "l1", " ", "l2", " ", "m2", " ", "\[Theta]d1",
     " ", "\[Theta]d2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.781121394501419*^9, 3.781121467084594*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"d1b6cf52-2f1c-4c73-8c6a-521631f48e0d"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"g", " ", "l1", " ", 
     RowBox[{"(", 
      RowBox[{"m1", "+", "m2"}], ")"}]}], "-", 
    RowBox[{"g", " ", "l2", " ", "m2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       SuperscriptBox["\[Theta]2", "2"]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["l1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"m1", "+", "m2"}], ")"}], " ", 
     SuperscriptBox["\[Theta]d1", "2"]}], "+", 
    RowBox[{"l1", " ", "l2", " ", "m2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[Theta]1", " ", "\[Theta]2"}], "-", 
       SuperscriptBox["\[Theta]2", "2"]}], ")"}], " ", "\[Theta]d1", " ", 
     "\[Theta]d2"}], "+", 
    RowBox[{
     SuperscriptBox["l2", "2"], " ", "m2", " ", 
     SuperscriptBox["\[Theta]d2", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.781121457476737*^9, 3.7811214774576263`*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"674bf7ef-a94d-4ed2-a360-7c84fd3a9139"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m1", " ", "+", " ", "m2"}], ")"}], 
      SuperscriptBox["l1", "2"], " ", "\[Theta]dd1"}], " ", "+", " ", 
     RowBox[{"m2", " ", "l1", " ", "l2", " ", "\[Theta]dd2"}], " ", "+", " ", 
     
     RowBox[{"g", 
      RowBox[{"(", 
       RowBox[{"m1", " ", "+", " ", "m2"}], ")"}], " ", "l1", " ", 
      "\[Theta]1"}]}], " ", "\[Equal]", " ", "0"}], ",", " ", "\[Theta]dd2"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.781124282514751*^9, 3.7811243651220512`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"0d699512-0702-4d3a-b02a-6b6ebfd8fd32"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Theta]dd2", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "g"}], " ", "m1", " ", "\[Theta]1"}], "-", 
      RowBox[{"g", " ", "m2", " ", "\[Theta]1"}], "-", 
      RowBox[{"l1", " ", "m1", " ", "\[Theta]dd1"}], "-", 
      RowBox[{"l1", " ", "m2", " ", "\[Theta]dd1"}]}], 
     RowBox[{"l2", " ", "m2"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7811243342733297`*^9, 3.781124365508375*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"ba5b3eaa-0860-41e4-93c8-ff91558785d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"m2", " ", "l1", " ", "l2", " ", "\[Theta]dd1"}], " ", "+", " ", 
     
     RowBox[{"m2", " ", 
      SuperscriptBox["l2", "2"], " ", "\[Theta]dd2"}], " ", "+", " ", 
     RowBox[{"g", " ", "m2", " ", "l2", " ", "\[Theta]2"}]}], " ", "\[Equal]",
     " ", "0"}], ",", " ", "\[Theta]dd1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7811243700828*^9, 3.781124404635057*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"4337ec0e-4710-4e5c-b593-e1ffb36db0b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Theta]dd1", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "g"}], " ", "\[Theta]2"}], "-", 
      RowBox[{"l2", " ", "\[Theta]dd2"}]}], "l1"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.781124405007002*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"0de6aa58-2048-44f4-99e2-2ce8c2ebcba5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FactorTerms", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m1", " ", "+", " ", "m2"}], ")"}], 
     SuperscriptBox["l1", "2"], " ", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "g"}], " ", "\[Theta]2"}], "-", 
        RowBox[{"l2", " ", "\[Theta]dd2"}]}], "l1"], ")"}]}], " ", "+", " ", 
    RowBox[{"m2", " ", "l1", " ", "l2", " ", "\[Theta]dd2"}], " ", "+", " ", 
    RowBox[{"g", 
     RowBox[{"(", 
      RowBox[{"m1", " ", "+", " ", "m2"}], ")"}], " ", "l1", " ", 
     "\[Theta]1"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]dd2", ",", " ", "\[Theta]1", ",", " ", "\[Theta]2"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.781124406522806*^9, 3.781124452795356*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"7f8e6d09-dc6d-42fc-a2b7-7f2d1f8c0b32"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "l1"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "g"}], " ", "m1", " ", "\[Theta]1"}], "-", 
    RowBox[{"g", " ", "m2", " ", "\[Theta]1"}], "+", 
    RowBox[{"g", " ", "m1", " ", "\[Theta]2"}], "+", 
    RowBox[{"g", " ", "m2", " ", "\[Theta]2"}], "+", 
    RowBox[{"l2", " ", "m1", " ", "\[Theta]dd2"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7811244423784037`*^9, 3.781124453509058*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"be44b1ce-0f44-46be-9b2c-95e11bbbbfd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "l1"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "g"}], " ", "m1", " ", "\[Theta]1"}], "-", 
      RowBox[{"g", " ", "m2", " ", "\[Theta]1"}], "+", 
      RowBox[{"g", " ", "m1", " ", "\[Theta]2"}], "+", 
      RowBox[{"g", " ", "m2", " ", "\[Theta]2"}], "+", 
      RowBox[{"l2", " ", "m1", " ", "\[Theta]dd2"}]}], ")"}]}], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "l1"}], " ", "l2", " ", "m1", " ", "\[Theta]dd2"}], " ", 
    "+", " ", 
    RowBox[{"g", 
     RowBox[{"(", 
      RowBox[{"m1", " ", "+", " ", "m2"}], ")"}], " ", "l1", " ", 
     "\[Theta]1"}], " ", "-", " ", 
    RowBox[{"g", 
     RowBox[{"(", 
      RowBox[{"m1", " ", "+", " ", "m2"}], ")"}], "l1", "  ", 
     "\[Theta]2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.78112451033419*^9, 3.781124569694417*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"96a5eaf0-c1d1-4f1c-951d-ac35968a5179"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.781124558665947*^9, 3.781124570097343*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"1cb00701-18a5-408c-81db-73a09a48c256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FactorTerms", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"m2", " ", "l1", " ", "l2", " ", "\[Theta]dd1"}], " ", "+", " ", 
    RowBox[{"m2", " ", 
     SuperscriptBox["l2", "2"], 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "g"}], " ", "m1", " ", "\[Theta]1"}], "-", 
        RowBox[{"g", " ", "m2", " ", "\[Theta]1"}], "-", 
        RowBox[{"l1", " ", "m1", " ", "\[Theta]dd1"}], "-", 
        RowBox[{"l1", " ", "m2", " ", "\[Theta]dd1"}]}], 
       RowBox[{"l2", " ", "m2"}]], ")"}]}], " ", "+", " ", 
    RowBox[{"g", " ", "m2", " ", "l2", " ", "\[Theta]2"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]dd2", ",", " ", "\[Theta]1", ",", " ", "\[Theta]2"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7811245941810427`*^9, 3.781124644101191*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"93b2bc2b-f580-4260-903f-98566fbd5a44"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "l2"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"g", " ", "m1", " ", "\[Theta]1"}], "+", 
    RowBox[{"g", " ", "m2", " ", "\[Theta]1"}], "-", 
    RowBox[{"g", " ", "m2", " ", "\[Theta]2"}], "+", 
    RowBox[{"l1", " ", "m1", " ", "\[Theta]dd1"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.781124618905981*^9, 3.7811246446611834`*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"13a0d494-fade-487e-ac51-44f1a728333b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "l2"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"g", " ", "m1", " ", "\[Theta]1"}], "+", 
      RowBox[{"g", " ", "m2", " ", "\[Theta]1"}], "-", 
      RowBox[{"g", " ", "m2", " ", "\[Theta]2"}], "+", 
      RowBox[{"l1", " ", "m1", " ", "\[Theta]dd1"}]}], ")"}]}], " ", 
   "\[Equal]", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "m1"}], " ", "l1", " ", "l2", " ", "\[Theta]dd1"}], " ", 
    "-", " ", 
    RowBox[{"g", " ", "l2", 
     RowBox[{"(", 
      RowBox[{"m1", " ", "+", " ", "m2"}], ")"}], " ", "\[Theta]1"}], " ", 
    "+", " ", 
    RowBox[{"g", " ", "m2", " ", "l2", " ", "\[Theta]2"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.7811246492044973`*^9, 3.781124725517964*^9}, {
  3.781124787592238*^9, 3.781124787909567*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"b79b78e6-7155-4992-929a-d772f964ab9e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.781124726065756*^9, 3.781124788545207*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"fa0552db-6525-47e7-bde6-66b03ce806f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"m1", " ", "+", " ", "m2"}], ")"}], 
        SuperscriptBox["l1", "2"], " ", "\[Theta]dd1"}], " ", "+", " ", 
       RowBox[{"m2", " ", "l1", " ", "l2", " ", "\[Theta]dd2"}], " ", "+", 
       " ", 
       RowBox[{"g", 
        RowBox[{"(", 
         RowBox[{"m1", " ", "+", " ", "m2"}], ")"}], " ", "l1", " ", 
        "\[Theta]1"}]}], " ", "\[Equal]", " ", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"m2", " ", "l1", " ", "l2", " ", "\[Theta]dd1"}], " ", "+", 
       " ", 
       RowBox[{"m2", " ", 
        SuperscriptBox["l2", "2"], " ", "\[Theta]dd2"}], " ", "+", " ", 
       RowBox[{"g", " ", "m2", " ", "l2", " ", "\[Theta]2"}]}], " ", 
      "\[Equal]", " ", "0"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]dd1", ",", " ", "\[Theta]dd2"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.7811842870922213`*^9, 3.7811843254674*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"e188f398-1b28-41e0-86ce-43abd2ac7eec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Theta]dd1", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"g", " ", "m1", " ", "\[Theta]1"}], "+", 
        RowBox[{"g", " ", "m2", " ", "\[Theta]1"}], "-", 
        RowBox[{"g", " ", "m2", " ", "\[Theta]2"}]}], 
       RowBox[{"l1", " ", "m1"}]]}]}], ",", 
    RowBox[{"\[Theta]dd2", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "g"}], " ", "m1", " ", "\[Theta]1"}], "-", 
        RowBox[{"g", " ", "m2", " ", "\[Theta]1"}], "+", 
        RowBox[{"g", " ", "m1", " ", "\[Theta]2"}], "+", 
        RowBox[{"g", " ", "m2", " ", "\[Theta]2"}]}], 
       RowBox[{"l2", " ", "m1"}]]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.781184325940751*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"8dea8af7-d1dd-47cf-adbc-8c73f5f3e5f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gA", "=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"g", " ", "m1"}], " ", "+", 
         RowBox[{"g", " ", "m2"}]}], 
        RowBox[{"l1", " ", "m1"}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "g"}], " ", "m2"}], 
        RowBox[{"l1", " ", "m1"}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "g"}], " ", "m1"}], " ", "-", 
         RowBox[{"g", " ", "m2"}]}], 
        RowBox[{"l2", " ", "m1"}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"g", " ", "m1"}], " ", "+", 
         RowBox[{"g", " ", "m2", " "}]}], 
        RowBox[{"l2", " ", "m1"}]]}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.781184343767853*^9, 3.781184430829762*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"59658ed8-304e-45cf-98b5-b9be0ce0faf9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"g", " ", "m1"}], "+", 
        RowBox[{"g", " ", "m2"}]}], 
       RowBox[{"l1", " ", "m1"}]]}], ",", 
     FractionBox[
      RowBox[{"g", " ", "m2"}], 
      RowBox[{"l1", " ", "m1"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "g"}], " ", "m1"}], "-", 
        RowBox[{"g", " ", "m2"}]}], 
       RowBox[{"l2", " ", "m1"}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"g", " ", "m1"}], "+", 
        RowBox[{"g", " ", "m2"}]}], 
       RowBox[{"l2", " ", "m1"}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.781184431179098*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"05394023-46db-4415-acfd-bafa3154f043"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "gA", "]"}]], "Input",
 CellChangeTimes->{{3.781184431978691*^9, 3.781184435047491*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"08bda8f1-0f53-4c59-bf5d-4d80d54e415a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SuperscriptBox["l1", "2"], " ", 
      SuperscriptBox["l2", "2"], " ", 
      SuperscriptBox["m1", "4"]}]], 
    RowBox[{"g", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["l1", "2"]}], " ", "l2", " ", 
        SuperscriptBox["m1", "4"]}], "-", 
       RowBox[{"l1", " ", 
        SuperscriptBox["l2", "2"], " ", 
        SuperscriptBox["m1", "4"]}], "-", 
       RowBox[{
        SuperscriptBox["l1", "2"], " ", "l2", " ", 
        SuperscriptBox["m1", "3"], " ", "m2"}], "-", 
       RowBox[{"l1", " ", 
        SuperscriptBox["l2", "2"], " ", 
        SuperscriptBox["m1", "3"], " ", "m2"}], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["l1", "2"], " ", "l2", " ", 
             SuperscriptBox["m1", "4"]}], "+", 
            RowBox[{"l1", " ", 
             SuperscriptBox["l2", "2"], " ", 
             SuperscriptBox["m1", "4"]}], "+", 
            RowBox[{
             SuperscriptBox["l1", "2"], " ", "l2", " ", 
             SuperscriptBox["m1", "3"], " ", "m2"}], "+", 
            RowBox[{"l1", " ", 
             SuperscriptBox["l2", "2"], " ", 
             SuperscriptBox["m1", "3"], " ", "m2"}]}], ")"}], "2"], "-", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["l1", "3"], " ", 
             SuperscriptBox["l2", "3"], " ", 
             SuperscriptBox["m1", "8"]}], "+", 
            RowBox[{
             SuperscriptBox["l1", "3"], " ", 
             SuperscriptBox["l2", "3"], " ", 
             SuperscriptBox["m1", "7"], " ", "m2"}]}], ")"}]}]}]]}], 
      ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SuperscriptBox["l1", "2"], " ", 
      SuperscriptBox["l2", "2"], " ", 
      SuperscriptBox["m1", "4"]}]], 
    RowBox[{"g", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["l1", "2"]}], " ", "l2", " ", 
        SuperscriptBox["m1", "4"]}], "-", 
       RowBox[{"l1", " ", 
        SuperscriptBox["l2", "2"], " ", 
        SuperscriptBox["m1", "4"]}], "-", 
       RowBox[{
        SuperscriptBox["l1", "2"], " ", "l2", " ", 
        SuperscriptBox["m1", "3"], " ", "m2"}], "-", 
       RowBox[{"l1", " ", 
        SuperscriptBox["l2", "2"], " ", 
        SuperscriptBox["m1", "3"], " ", "m2"}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["l1", "2"], " ", "l2", " ", 
             SuperscriptBox["m1", "4"]}], "+", 
            RowBox[{"l1", " ", 
             SuperscriptBox["l2", "2"], " ", 
             SuperscriptBox["m1", "4"]}], "+", 
            RowBox[{
             SuperscriptBox["l1", "2"], " ", "l2", " ", 
             SuperscriptBox["m1", "3"], " ", "m2"}], "+", 
            RowBox[{"l1", " ", 
             SuperscriptBox["l2", "2"], " ", 
             SuperscriptBox["m1", "3"], " ", "m2"}]}], ")"}], "2"], "-", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["l1", "3"], " ", 
             SuperscriptBox["l2", "3"], " ", 
             SuperscriptBox["m1", "8"]}], "+", 
            RowBox[{
             SuperscriptBox["l1", "3"], " ", 
             SuperscriptBox["l2", "3"], " ", 
             SuperscriptBox["m1", "7"], " ", "m2"}]}], ")"}]}]}]]}], 
      ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.781184435469644*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"46080149-259b-4b1c-b55e-143d75e97824"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"(", GridBox[{
     {"l2", 
      RowBox[{
       RowBox[{"-", "m2"}], " ", 
       RowBox[{"l2", " ", "/", 
        RowBox[{"(", 
         RowBox[{"m1", " ", "+", " ", "m2"}], ")"}]}]}]},
     {
      RowBox[{"-", "l1"}], "l1"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.781184458888351*^9, 3.781184493023251*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"8e687685-f823-4094-84e4-eda7d317f06c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"l2", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"l2", " ", "m2"}], 
       RowBox[{"m1", "+", "m2"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "l1"}], ",", "l1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.78118449362719*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"5b57f107-22c8-47a5-b2c4-e4095cc3a8e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Eigenvalues", "[", "A", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.78118449455192*^9, 3.781184496895432*^9}, {
  3.781185249538313*^9, 3.78118525716855*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"8ce75880-1f32-4fe2-9354-55a356162cc5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"l1", "+", "l2", "-", 
      FractionBox[
       SqrtBox[
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"l1", "-", "l2"}], ")"}], "2"], " ", "m1"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"l1", "+", "l2"}], ")"}], "2"], " ", "m2"}]}]], 
       SqrtBox[
        RowBox[{"m1", "+", "m2"}]]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"l1", "+", "l2", "+", 
      FractionBox[
       SqrtBox[
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"l1", "-", "l2"}], ")"}], "2"], " ", "m1"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"l1", "+", "l2"}], ")"}], "2"], " ", "m2"}]}]], 
       SqrtBox[
        RowBox[{"m1", "+", "m2"}]]]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.781185258253613*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"2f518801-def7-4d19-bf2a-3a460f8ceb7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"l1", "+", "l2", "-", 
      FractionBox[
       SqrtBox[
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"l1", "-", "l2"}], ")"}], "2"], " ", "m1"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"l1", "+", "l2"}], ")"}], "2"], " ", "m2"}]}]], 
       SqrtBox[
        RowBox[{"m1", "+", "m2"}]]]}], ")"}]}], "\[Equal]", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{"l1", " ", "+", " ", "l2", " ", "-", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l1", " ", "+", " ", "l2"}], ")"}], "^", "2"}], " ", "-", 
        " ", 
        FractionBox[
         RowBox[{"4", " ", "m1", " ", "l1", " ", "l2", " "}], 
         RowBox[{"m1", " ", "+", " ", "m2"}]]}], "]"}]}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.781185307286202*^9, 3.781185390968996*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"d911b27b-d6a7-49e9-bcde-e45a395e6e5b"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"-", 
     SqrtBox[
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"l1", "-", "l2"}], ")"}], "2"], " ", "m1"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"l1", "+", "l2"}], ")"}], "2"], " ", "m2"}]}]]}], "+", 
    RowBox[{
     SqrtBox[
      RowBox[{"m1", "+", "m2"}]], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"l1", "+", "l2"}], ")"}], "2"], "-", 
       FractionBox[
        RowBox[{"4", " ", "l1", " ", "l2", " ", "m1"}], 
        RowBox[{"m1", "+", "m2"}]]}]]}]}], 
   SqrtBox[
    RowBox[{"m1", "+", "m2"}]]], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.781185391535048*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"b38029be-6207-4e75-abdc-3cfef094e122"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", 
  RowBox[{"A", " ", "-", " ", 
   RowBox[{"\[Lambda]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7811854169998903`*^9, 3.7811854446221037`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"b2b57400-dc93-4bbd-a9f1-1a3df2b2ef4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"l1", " ", "l2"}], "-", 
  FractionBox[
   RowBox[{"l1", " ", "l2", " ", "m2"}], 
   RowBox[{"m1", "+", "m2"}]], "-", 
  RowBox[{"l1", " ", "\[Lambda]"}], "-", 
  RowBox[{"l2", " ", "\[Lambda]"}], "+", 
  SuperscriptBox["\[Lambda]", "2"]}]], "Output",
 CellChangeTimes->{3.7811854452158012`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"ade0b790-ee1c-4487-9b53-e8c5de41e53d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"l1", " ", "l2"}], "-", 
      FractionBox[
       RowBox[{"l1", " ", "l2", " ", "m2"}], 
       RowBox[{"m1", "+", "m2"}]], "-", 
      RowBox[{"l1", " ", "\[Lambda]"}], "-", 
      RowBox[{"l2", " ", "\[Lambda]"}], "+", 
      SuperscriptBox["\[Lambda]", "2"]}], "\[Equal]", "0"}], ",", " ", 
    "\[Lambda]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.781185450231125*^9, 3.7811854596386547`*^9}, {
  3.7811855730186977`*^9, 3.781185581096566*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"7dddf4d9-5713-4f6b-aade-8b201390c911"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"l1", "+", "l2", "-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"l1", "+", "l2"}], ")"}], "2"], "-", 
          FractionBox[
           RowBox[{"4", " ", "l1", " ", "l2", " ", "m1"}], 
           RowBox[{"m1", "+", "m2"}]]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"l1", "+", "l2", "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"l1", "+", "l2"}], ")"}], "2"], "-", 
          FractionBox[
           RowBox[{"4", " ", "l1", " ", "l2", " ", "m1"}], 
           RowBox[{"m1", "+", "m2"}]]}]]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.781185460072847*^9, 3.781185581907811*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"8b30b828-d19d-40a9-94a4-b578eff069e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "g"}], 
    FractionBox[
     RowBox[{"(", 
      RowBox[{"m1", " ", "+", " ", "m2"}], ")"}], 
     RowBox[{"m1", " ", "l1", " ", "l2"}]], 
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"l1", "+", "l2", "-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"l1", "+", "l2"}], ")"}], "2"], "-", 
        FractionBox[
         RowBox[{"4", " ", "l1", " ", "l2", " ", "m1"}], 
         RowBox[{"m1", "+", "m2"}]]}]]}], ")"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m1", " ", "\[Equal]", " ", "m2"}], ",", " ", 
      RowBox[{"l1", " ", "\[Equal]", " ", "l2"}]}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.781185307007288*^9, 3.781185310189324*^9}, {
  3.781187545946046*^9, 3.781187581194789*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"9f55ef89-2134-4f21-ab03-5102e1655ceb"],

Cell[BoxData[
 FractionBox[
  RowBox[{"g", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "l2"}], "+", 
     RowBox[{
      SqrtBox["2"], " ", 
      SqrtBox[
       SuperscriptBox["l2", "2"]]}]}], ")"}]}], 
  SuperscriptBox["l2", "2"]]], "Output",
 CellChangeTimes->{{3.7811875572784967`*^9, 3.781187581877574*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"5387eae1-35dd-4845-a9cb-e59381be15c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"-", "g"}], 
   FractionBox[
    RowBox[{"(", 
     RowBox[{"m1", " ", "+", " ", "m2"}], ")"}], 
    RowBox[{"m1", " ", "l1", " ", "l2"}]], 
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"l1", "+", "l2", "-", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"l1", "+", "l2"}], ")"}], "2"], "-", 
       FractionBox[
        RowBox[{"4", " ", "l1", " ", "l2", " ", "m1"}], 
        RowBox[{"m1", "+", "m2"}]]}]]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{3.781187699512838*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"7b8e3a6d-6fad-4f4e-abe8-6723bddf2a97"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"g", " ", 
    RowBox[{"(", 
     RowBox[{"m1", "+", "m2"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"l1", "+", "l2", "-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"l1", "+", "l2"}], ")"}], "2"], "-", 
        FractionBox[
         RowBox[{"4", " ", "l1", " ", "l2", " ", "m1"}], 
         RowBox[{"m1", "+", "m2"}]]}]]}], ")"}]}], 
   RowBox[{"2", " ", "l1", " ", "l2", " ", "m1"}]]}]], "Output",
 CellChangeTimes->{3.781187700011909*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"ba825412-412a-4bc6-8b12-bfc565ca3ce0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"l1", "+", "l2", "-", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"l1", "+", "l2"}], ")"}], "2"], "-", 
       FractionBox[
        RowBox[{"4", " ", "l1", " ", "l2", " ", "m1"}], 
        RowBox[{"m1", "+", "m2"}]]}]]}], ")"}], "\[Equal]", 
   RowBox[{"4", 
    RowBox[{"(", 
     RowBox[{"l1", "+", "l2", "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"l1", "+", "l2"}], ")"}], "2"], "-", 
        FractionBox[
         RowBox[{"4", " ", "l1", " ", "l2", " ", "m1"}], 
         RowBox[{"m1", "+", "m2"}]]}]]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.78118875157196*^9, 3.781188762251156*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"fef5e48c-14c1-4222-b300-d1df0dd6f52b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{"l1", "+", "l2"}], ")"}]}], "+", 
   RowBox[{"5", " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"l1", "+", "l2"}], ")"}], "2"], "-", 
      FractionBox[
       RowBox[{"4", " ", "l1", " ", "l2", " ", "m1"}], 
       RowBox[{"m1", "+", "m2"}]]}]]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.781188763172477*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"d28fd2af-b038-4b9f-8e51-b470993ba72a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{"l1", "+", "l2"}], ")"}]}], "+", 
     RowBox[{"5", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"l1", "+", "l2"}], ")"}], "2"], "-", 
        FractionBox[
         RowBox[{"4", " ", "l1", " ", "l2", " ", "m1"}], 
         RowBox[{"m1", "+", "m2"}]]}]]}]}], "\[Equal]", "0"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"m1", " ", "\[Equal]", " ", "m2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7811889255059443`*^9, 3.781188936408743*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"d5c43e76-efa2-4856-a2e0-bc367f69b540"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{"l1", "+", "l2"}], ")"}]}], "+", 
   RowBox[{"5", " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["l1", "2"], "+", 
      SuperscriptBox["l2", "2"]}]]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.781188936952322*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"d7b0e9c1-03fc-4482-8ae2-eb4b1d90be92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"%", ",", " ", "l1"}], "]"}]], "Input",
 CellChangeTimes->{{3.781188944737715*^9, 3.7811889490323772`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"85326e1f-d26d-47d6-bb31-ac5a66d4d33a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"l1", "\[Rule]", 
     RowBox[{
      FractionBox["1", "16"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"9", " ", "l2"}], "-", 
        RowBox[{"5", " ", "\[ImaginaryI]", " ", 
         SqrtBox["7"], " ", "l2"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"l1", "\[Rule]", 
     RowBox[{
      FractionBox["1", "16"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"9", " ", "l2"}], "+", 
        RowBox[{"5", " ", "\[ImaginaryI]", " ", 
         SqrtBox["7"], " ", "l2"}]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.781188949535324*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"b9fd908c-178a-44b1-a291-29603c118db7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "+", "y"}], ")"}], "^", "2"}], " ", "=", " ", 
     RowBox[{"0.32", " ", "x", " ", "y"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7811890148105288`*^9, 3.781189069032881*^9}, {
  3.781189243237502*^9, 3.781189250051161*^9}, {3.781189307326984*^9, 
  3.781189334723584*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"06069d0f-5b29-46cd-aaad-7e820307d705"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyNnHu0XVV1xlORR6tS1Aoo4ChqBQI+GILWenWBYhG0vNRSa4eIgqUdvNSA
SJWRCsgr4CUKGEnpBYzmKtFrQoCQhB0CN0Cel8dB5HkhXF4FvDxUUFrrOPv7
fXusL2a0/HPG/VhZZ+7fnnvuueaa6+z4ueMOOfJlU6ZM2XnTKVM2+cPng1e/
fdN3veu5hs/jdn7T4uu+fl/5s69ussvmJ0xaf+bKF27cc99flC9MG5l11TH/
Zf3Le69be8VWvXLNrz/14GeembD+6zVz7nrz3WOaZzzmuUXjezF+mfTR0EfK
FP2Hzt8aX2J8o/lDX9bInhL2aPxEjB9rdL0lrlfzTMY8v8DuEjx9PXCFJ3/z
ue3FI4ct+1HPnNE/8O9H/Xb/LW8zZ/RVa/ea+uP1q825nmfUnOvxS8y51q8w
Z/TkHOPNOeY357DHnMN+c47rNefgY87B05zhN03+yTh0ePI3n6/5xiYfu22b
teaMPvwn7758y9febM71PMvNuR5/jTnX+lxzRk/OMd6cY35zDnvMOew357he
cw4+5hw8zRlO9fM+aX2l/JN/jz5XPPmbzzP22HX7L33wBnOu51lizvX4BeZc
65eXmuvEBpxjvDnH/OYc9phz2G/Ocb3mHHzMOXhG3Bh3/Kzjxrif9zpujId/
TlgnDtRxg3kWRtwYd3yo4wb67Igb4xuJGx4fccPzR9ywPRE3bH/EDV9vxA3z
ibhhnuHPPb+Pan/u2Q9rf+7p/l4T/tyzf9b+zDxXhD/37Le1P6N/O/y5txF/
9vjwZ88f/mx7wp9tf/izrzf82XzCn80zOI/6/V5zHjWfmvOovnducB41t5oz
88wOzqPmWXNGPzU4j26Es8cHZ88fnG1PcLb9wdnXG5zNJzibZ5N50sbe6xt7
D20sbm7sOd+YX26M4//1H5w3Mv8GOpw3Yv8GOpz/+DyTG+hw3oiO/xT4hz8X
7lf4c5lbvd/tzyWe05jH8TPGf7sJfy7458a4hj8zvoQ/M38Jfy718zUR4y8v
4c9cbwl/hk8Jf4Znifhc6nze8bmsrN8L1olXEZ9LvN9jniuCc6/UecJo6N8O
zr2NcPb44Oz5g7PtCc62Pzj7eoOz+QRn8yyRbxTej5FvFN6nkW+UyD+tx7og
5llozvX4K8y51mebcz73kW8w3tcZ8/vvsMecw/4S+QbXa87Bp0S+Ac/w54lC
vhf5cyE/jPy5kE9G/lzIPyN/LnW+2ovxC8KfJ+znG4ujkT+XOm/phb4g/Nn2
hD/b/vBnX2/4s/mEP5tnifVgmVav362z3on1YGF9BGf04SqfH495lptzPf4a
c671ueac7yU4x3hzjvnNOewxl7Dff8f1mnPwKbEehGfEjcnCejzqG4X1e9Q3
zL+OG5OF+kDUN0pdT+jF+CURNyYdTzb2nq/jhsdH3PD8ETdsT8QN2x9xw9cb
ccN8Im6Ypznz/6kvRb3O/KNeV6hfwRm9jj/jMc8t5lyPX2bOtT5izpk3wTnG
m3PMb85hjzmH/eYc12uOwcd/B89y4rav32aHO55p+Pz0K3YfvvaYjj/6z459
1V4nf+4expcYby4xvon5S4y3HuNLjPfffM9IbY/nC72E3sR45kn7safs9tib
t5x76rMNnx87bbuvbne09RJ6E+NL6CV028e/G1x10de3P/5ej+P/S/c47EXn
b/5dzNPEPCXGNzFPE/M0YY/nnxg/8/urV3d13Y9f8qlXHvjGO8ttr11xxurV
T3q+1Bm/8IxrP37Ur24rdx958orf//5Rj//wp361x0XHdjrj3/7Qu9+9yax1
5aH+uPUef3zfn9dYZ/xzeo7u6H9vd32f7Nuzwjrjr+7bs7w83B93e1f/78+/
1Drjf92ff1F5tK/f4PEn9cfPUzyYu6Rep84cYDzz/LY/z7DH1+vXwYF72vH2
hyPb+Rt0xj/eztPc39rp8f/a2m+d8U+39jdrWw4ef1DLxzrjF7R8mgdazh5/
dMvfOuN/qbj68/Y+evyH2vtrnfFT2/vbrGv9xOMPbv3Hem3Pbc3DrR96/GHr
l67fbO0vrDP+EM2D3/LewN/wT/S3yd/wQ/RbX33qy+76xEr7G/oJ/Tg8ar9C
f2d/nsb+g/6V/viF9h/0k/v6HPtDXbeYYX9AP6Yd7/uLfnw7v+8j+i6tPb5f
6F9s7fd9QV/bXq/5o3O/4Iy+j+4vnHkPH6vnFM7ovO/gjD5NPOGM/hu9N+GM
/pyeRzijv6j3L5zRf9fXh8y5rgOdZs62sx1vzujPKx+AMzrPF5zr8cvMGR3+
cK7nucWc0Y/Rc1fH4XHF2xURb8cVb5dHXB1XXG0ifo6bZx0nxxUn50c8HFc8
HC51fBtXfJsV8Y262vSBOo6NK47Ning1Lg7DEZfGFQfmR/wZV/xZFHFmXH7b
RDwZd3yr48a44saK8Oee/Hlp+HNP/rwo/Lknf14Y/tyTP4+EP/fEfzj8uSd/
Hgp/7smfB8OfqVNOC3/uyZ8Hw5978s+h8Oee+df+3LP/1/7ckz8vDH/u+bmo
/bknf14anEfFeV5wHhXn4eA8Ks5zgvOoOA8F51FxnhWcR8V5MDiPivP04Ezd
94jgPCrO04PzqLgNBudR8ZkVnEd9X2rOo+I8JziP+n7VnEfFeZ45T4n/4Jw6
nFOHc+pwTh3OqcM5dTinAufU4Zw6nFOHc+pwTh3OqcM59fDnIn9uwp+1Xhtu
wp9Vf5jThD8X+XMT/lzkz034c5E/N+HPRf7cwBm9/fuIJeHPRf5cwp+L/LmE
Pxf5cwl/1vihEv5c5M8l/Fnz/CEe1v5c5M8l4rM4Lw3OPXFeFJx74rwwOPfE
eSQ498R5ODj3xHkoOPfEeTA4Uz+fFpx74jwYnHvmFvHZfCI+a/xIcO6J88Lg
zDyLgnNPnJfGum+8KN9oIt8oyjeayDeK8o0m8g3xXNREvlGUbzSRbxTlG03k
G0X5hjnX9fPpSyLfKMo3SuQb5hn5RlG+USLfKMo3SuQbRflGiXxD8ywvkW8U
5RvhzxPy5zXhzxOuX0X+LH8eDX+ekD8vC3+eMP/In+XPI+HPE/LnofBn6uen
hT9PyJ+Hwp8n7J+RP9sPI3/W+GXhzxPy59HwZ+a5Jfx5Qv68psR6sGg92MR6
sGg92MR6sGg92MR6sGg92MR6sGg92MR6sGg92MR6sGg9aM51/XzGklgPFq0H
S6wHi9aDJdaDRevBEutB84z1YNF6sMR6UH6+rsR6sGg9mPUixY07I25MKm7c
FnFjUnFjXcSNSfntLRE3JhU3lkfcmFTcWBRxY1JxYzjiBu/zwYgbk4obwxE3
Ju23UT/x8x51EsWNWyJuTJpn1D00z20RNyYVN+40Z+p1h6seEnU584/6m/0/
6mxFdbYm6mlF9bQm6mZFdbMm6mNF9TFzruvnM5dEvauo3lWirlVU1ypRvyqq
X5WoUxXVqUrUo4rqUSXqTuXg4MnnLldv9ewpF3f1zGUf2fIvZ77lmWa38145
7/R7b/d65OKRb1986Nf+oL94/f5feGrM6xHq0Kdtd8oWp/10ldcjB0+/ZOZD
uz7bPHDR5gt2f8+o1yPUace0LwPPzQ8aPuuYe57doN74iqp+ONPrkUdkf9YJ
sX/mlnd/cr8Hu3rgbNk/tX9dN3g9gv33XT/7K8e/bpXXI4fI/t1vPeD0+X93
q9cj2H9v/7p65rj9PosH997hyeZK+TM8+Tz3K8c8f8mCMfM8c/3YKYd+7anm
tzuOHX7phavN8wML7jnhoV2fbjab+4nX/O6km8zz+W88cvQx9zzd7K39QXj+
6JBnPv/C2b9sDvn0Nnu8ad415vnOV58yb+8dNqzHHlXV37p67A6yP+tvt8v+
rbXvD8+zZP+M/nUtM88i+z97wJf//dH7V5jnr2T/prc9fud7D11jnj+W/ewn
Egew/+HjvvPU1y/qOB+74oi7Hh96pDng9Cte+Ow5a835LRcet27aQY8297f3
0Zz5nH3w9m8/8ZCbzHlwz9OXnv3Tx5qztH8N57/ddPDK1x32eLNPb+apN6/s
6uQv3fG9Hw9t+URzx6NPvX/WiVea8/zvz7ls1+ue2KDOeW1Vf+vqnMfJ/qy/
/ZXs/+5OZ/zLe6b9zJzvkf339q9rsTmfL/sfunu/cz4zd7k57yv72e+G83/L
/r3717XGnLG/N/WdW6949FZzbp+jB5t3/W79fs/sepM5t8/Lg81l3/nMZpff
cKM5t8/FQ81e8k8487l1f5/6OnP+7hnvfWnpQ+ubLfp+frU5H3DoPs99ZObD
zSen3bjvVnt1dc6X73TgE7fvvWGd85VV/a2rc14v+7P+9hXZ/56jFj/yT//2
I3N+m+y/tH9dV5rzetlPPwacZ8n+j+3+jePWr11uzgfK/k3b59ecsb/db1pt
zq3f/tx1Szi3/nlXs1pxEs6tH97djB7+L+eW7ywy5/a5vqfZTv0wcOZz1clb
X/q2nX5mznv1n9P7m5+oPwHOV/Sfxwc2qHMurupvXZ3zrbI/628zZf/7+/5w
mTn/j+ynXwvO/yr7x9rny5zvlP3j8n84f1D239K/ruvNGfvJV+Hc8rzZ/atw
brmtaj4uf4Nzy2et/PYn5tz621jzgdZ/zPmkvl/d2mzf5z/HnPk8Ys8Vx7z4
0f8054P6fnLHBnXO66r6W1fnvED2Z/3taNlPPxuc95H97XUNmfOWsv8K9bHA
+WTZv9OOe271hnNHzPkR2b+94j+csX9Bf395cRc3+vZf0Lykuorzir4+p7mj
f99nmPOf9+0Zafbp+8lMc27HL2zOU98dnI/vX+/i5sMaD9+t+vMsa3qaH858
Zp2z/uzqnI/JfupdcB6T/bP79nzenLeV/Q/1v/dr5nyz7H+gtcecT5L91/T5
f9ec/0L276fnBc6PyX7yeTiPy95J6XDeop2nDGgeOB/efm/5vr4XziOtnaWR
na5zttdVrtF1wXmo5VC+JA7wPbPlFvXCuUvmV/W3rs7JZ9bfXi77l+k+wvkf
ZP+euu9wniv7vyo/gfMLJ7X2T9V4OA/K/gs1P5yny/5VsgfOH2v9vPxUfg7n
cdlLXgTnae1zVN6s5wjO7X0ZKz/Ucwfnv26f03KwnlM4f7Z9rt2nCuez2jiw
QZ1zYVV/6+qc+8v+rL/xeYjiEpy/JPtfrTgG581k/+6Ke3DeQ/ZvpjgJ53+S
/fsrrsL5TNk/qTgM57lt3HadB84DbZwvNynOw3lM9t6n9wKcj2jfI2Wd3iNw
fqF977hPGM4z2vdU2UvPC5z/sn2vbVDn3KKqv3V1zh/I/qy//Y3s/77es3Dm
80a9l+H8Odn/Wr3H4fxr2b9E7304ny37r1eeAGfsf6vyCji/rM1DyreUh8C5
9fOHy8uVt8D5wjbPKR9VngPncdlL/x6cp7Z5VLlMeRSc2+fiwfJ+5V1wvq7N
0zaoc15V1d+6OuefyP6sv31U9h8gf4PvBbJ/ivJMOPP5KuWlcN5F9v+N8lg4
f1n2z1beC2fsf4fyZDiPtHl1Ia+G82/bPLzspTwczvu0ebv7VOF8Xpvnl/XK
8+F8l+x9QP4P5ze164gyW+sIOB/drjs2qHMeUdXfujrnT2V/1t9elP2rtQ6C
84dk//u0boLvubL/NK2z4MznRVqXwXlH2X+X1nFwxv79te6D8zvadWJZr3Ui
nNt48kv3qcL52XYdWjbTOhTObZx5uhyudSucv9muc8t5WufCeUz2Kt825ze0
6+gN6px/WtXfujrn22V/1t9+KPs/onU9nJ+R/QPyTzi/T/ZPUd0AvqfL/udU
Z4Cz44fqEnDG/vmqY8B5s7Y+U2as3Ox/7jyoq7/tqn466iFwPqitnxTqJ3A+
QX2JD6jeAufvtfWZspvqM3Bu2npOmaV6DpyxN+uc41X9ratzbir7s/42Vfbf
qPgJZ+z/hepXcJ4m+09RvQvO2L+z6mPwvU7276x6WvBsxNP8qYOdI87o+mze
2tbrmqjjFdXxcnzR+Jy/nBPfS51Q/WZZd21Ud3X/Gf+ffkjGoTOePip0+tPo
+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
n/NgvH+fUH5CP3fWt4lLPq+gPJDzTuh/obyR/m/07+m+b6J4ha4+ap83433E
uTPOTaGfozyWcz7onPd5neKYdT1ff684hr6Hnkf6d9Ffo7yaOMZ76l7l4ZzX
Qj9MeTvni9A5Z8R5GHT6P0fpd5d+n+LYDxXf0E9S3KOfGP2dWnfQ/4pOHyzn
8Xg/sq7hXBk66yDOQaGzbuLcDjrndzhngs55kxMU99Cv0vviN4p7roOJP/3Q
6Fto3Uf/Ljp9vPSbopPPEPd477MO5bwcOutWznehc86L80joek81nJ9BX6l1
NOc90HeQ/79W8RD9I4pj31E8RL9Y/k//Nzp94PQroy9XPKe/Fp0+W/pB0ekL
9flA+t1UryDuoVPfIO6hn696CHEPnXNDxD30K1VvOVVxD32N8hziHvozqucQ
99yPp/oPcQ+d/mHiHvp+qi8R99Dj3LTtpD+Q/Mn52Nmfn/Kbo7rzvOhv3G9u
b81uXZ6BflE/Hna/N4j+bH+eG/x+Qv9eGz8dl9Ev6evDXheh57ldnx9qnwvH
O/TT9TvJxAX0qddc+sUbr+1+lw/90R1mfP6c14/ZX9GvPWzf86785O3OC+H0
5BevenKLO1eZA/p1z58/efs+3e8ron+rjdvm4HNO/fFXmQP6DX39B35PoOe5
WvRFK1/a9YIvdOdq0R/bd8edV/6m2ydA32b0w2/5/ZmrfL3ob+rnsWP2D/TF
4sD1wuPhNs77etEPvfnpsXNfWuzrRX+kP36+rxf9sb5+md9D6PfEOVb0H/x8
6P51e3TnWNF5H3Fd6Fwv1+Xv1X3Hfq7v/Etftui+86+y/eivV3zGfvTt+/ol
fg+h3xLnQJ2fy37sRH9c9ws70XeT32IP9h7Zv94f2B70o/r6hX5PoN8f5yLR
r5X/8L3oZ+o5ch+1vr89n/gtx9msmznOSl+h57Tur+3qZnWfaFc3q/sau7pZ
3YfX1c3qvrGublb3OXV1szof3fB8X9bT6v34rp5W7x939bR6v7Orp9X7c109
rd5P+r/rafV+SVdPgyfXsVWb1/l5Q/9rvZfh6fPQ+h1+eKK3+eEF9gP0Fcrf
sA99pfJPuKEfLP/xuXXp/yC/hRv65nq+4OZzgYobcEOfr/gJH/QZer/AAbva
8xHzzQH9Jq03/fxI31o84eD6mLjBAX2d+HC96P+o55frRX+F4gzX63N4ip9c
L/pVeo9wveiDes9yXXw/7xGuC71dd4/4utBfr+vlutB3kD9gP/rZip/Yj36A
3gvY79+H4P0o+9GfUv7gOoW+ZxvijOxEX6P7hZ1+H+q+YI956/2FPehX6z2O
Pf4dBeU5fC/z7SX/4XvRP6Tni/mddyh/YH707ZRfMQ//7o34m8ajP6U8jee/
jq8zB/ibePDLGF/H3e73PdCJG8zDc0MeyDh08iLmr+N397sW6O8VH/wVneeR
78V/LxR/vhd9qe4X/x6d/AR76vdG9/sP6MvlJ9iDfrP8Cr/071TID7ETPyXv
xU508kDsRCdfYl70mXqOsL9+v3W/q4BOfMZ+dOIV9td1thE/J+jbxHXh7zpX
5evyuSvFH+eF0sn3fD+kk0fxfejkM1xv/d7uft/AeYXiKteLThzmetG3FQeu
F3217i/PYV1/6/yQ5/I/9B6BAzp5OxzQyW/hgE7eCAf0f9Z7EDv8u2h6b8Kn
zl+6vAV9Vbx/0W+N95HtiXhej+/iJ3rGN/QdIm5knQ37s87GeNfHlDfCOets
zFPnZd15dvSDxI35uW7Wiczv3+FTPsx9dJ6i/JnvrfO+7ny3f4dA9xE70D8t
P8ceeLM+dZ+EdNZx2IPOOgi/Qmf/HTvrPLQ7H42+hfwQO9HJQ7Ab/SzFJey3
X2g9hf3oW2v9hf3orNewH531Ec+F86DgX+fR3Xlk9Hv13HFdfv8rLnFd6OQn
XGc9frmvF3+nPsD1orOO5nrRtxUH78dIf0L3l+tFX8y6THEAfbvw/3rd0J0X
dj9Y1BPQyRvhUJ/zXWYO6ORFcPHvvui97/eF8pSdo76EvjjqKv79EvmP3xfS
36bnwu8L6axP/fs50m9S3PB7pFonded80VkX+D0infzZ7xHp5KV+j0ifqfzE
7xHp5HVeL0t/WvkYf8NvJ3H7X2wAKuQ=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
Bt8muG/8Hf6c4LOG9fj62p8577smwT3edfjGwX3+tfjnMj2h61+O7h1rnT8d
rSd0/fPR/QJ915xobaH51/mUfl8Ffu+86DMDPcPsaM2h+z8brTn07uZGaw79
lrHB/SvFnzHBelua573oGlv6fH70+YTm5HrFi5zjxovR5yia/0bB5xeKSy9E
n7XoHS2OPkvQe1kS3VvfBDcMPtfQWn0pus+u9TYkWHdJcy6IPgvR/HcL7s/r
s4uiz3W0rpZF9/G1bqdG96gV/++M7n8q10+P7m8rX0yL7o0r5pdKfYYn/VM4
9bmUtEqSui+pvFYo9ZmZ9IwOntSzkzY7MvVZoDRY+dS9Fem0EqnP86SjaqTu
L0jP3xvdh1eeKpL6XFC5r2Tq80LpqKNT92ukPyulrs+luyqnrrel5aqmru1V
C5RN3aORHjshde9G9cLxqet8af5qqfsCqhdKp9a+0oGHo3uO0vAFUp/nKXcf
lVoTS0+G1OcQ0gNp6jNL5fGY+txR2qBg6nM+5fTiqc8vpfmLpT4TVb1QPXUP
QnXKZ9H9WdX1a6J7cKr3y6XuQ0lzfhrda1MNXjT1uam0wTGp+1zS4f8Dxmbb
Aw==
            "]], Polygon3DBox[CompressedData["
1:eJwtmgf8T9Ufxu855xoJSTQkIdmUpnaiRWZDw4iWhighDRlFe0jKqsiWSiGp
ZGSU6h+lQqVSGe3pX/74P2/Pfb0c5zzn3Hu/d5zzfJ7Pc341uvfqcGPMsuwa
/ZerHpiy7D+qnxQ+qESWHSE8SPgc4d91wJqQZatVJghPVFmv0kDjSXU/jQ/Q
8a8LjxBeKHyJ6vt0/KPqO01jd6l8qPZT6q9Swn2MXSz8t44/Xvg+4XbCfwhv
UN1QOFfdX3ib6pOE91M9ULiXjl8kfK9weV3vU9V1hTPVfTTeVeMvCd7K82n8
WtWjdT/Pqq+txhrqmEc4X3071F6n8fqcrrov969jZgjfxEvS+Z+prqdmUH2L
xhvlvn+e8X9qT1f/N8LbVF5Su07u9zcg+PleUN8W4a0qL6p9nvqWqf2mxqvq
+nWF7xUeJLxd7ckq96j9kPpO1r2cmny/HXXuXxo7Qfh+4fbCfwr3E14h/LDw
vrrercLvCD8qvJ9wf+GVwo8IVxSeqHOGBF+Da92mskrtxzVeWeO9hV8Wvl/4
DR17u/B7wiOF99d4n+T7f1B4H+H5qg8Q/krXXKTj+2p8ufBD6q+g8TuE3xd+
guOEhwqvFR4X/fw3Cb8i/IDwmzy78KfCTwtX0/gs9T2ua49VX0uNTRK+W/hB
4ZOE/6vjzlW7huohGvtHdUvhmqqHCt+pYz4QHiV8oK43XX0P6vzH1XeGxqYJ
PyA8QriZ8HPCQ4UfED6RtaCyRO0xOv8tflv4E+HxwofoelPVd7+Of0x9p2vs
YpXpavfW+O5ifbwr/JhwJR3/tPru0PFD1XeUxurn/hZ8k3/UPkTlCuFOwj+q
XVWlu/Blwj+ofZzKFN6PcAldb7uue45wddWDubZKs+C+LcWaOFL4+MxrZabw
w8JPCLfQ7x8vPFXtZ9RXUtdrKjxN+FnhUsIn5l4PE4X3Em4iPIb1Hrw+Ggs/
yfwS3qn2ESpPMf+Ed/HbKqN5/uD3cYzKM/CBcCrhNXeU2idkXosn5H5/E9RX
WuPH5l67rGHW89HCT8NXwlH4bz3DocIHCL+de402Ubtp5rW7U+NHql1Xfas0
drDOeV7936vvF439lTx/y2h8aW6OaR48h+Ceu4TPFW4v/Jtwb+H6wkcJr2FO
8f6F2wn/qva/ul4dvof6VurYuuq7WO3L4ajkOdpe+OLMcxeOOyaY4zYUnHq0
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
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt13n8TWUaAPDr3ossJUtMIck21iZrEUa2smatsTXWTNn3sbVYUlGJ0AjN
EJq2aUoIZbJEWWYKKaEF7TRKZe/7fM7vj+fzPs/3POf87u+e97zvuWX7DO04
JJ1KpXaK3GJNJpX6A+iQK5X6k/oSdQGRX5TIplK1HJthLKS+TPxOXps9ZFyr
vl7e0bndnJtPnZeXYm1YJ/aj/Fd+Xl1dVBMj9Kxm1zrWVN1a3xn5paygKO54
TfWDxmtFE/lwfX/VV9nxKqw3m82eYrewjaI++9axq+QlxSpxDWui71Z9v8pf
Z2WNN7NW7LT8NXalsT5ryk6mk/PjOqVdr4H6MeOV8f+LUtnkbz1qPK2+4Lwa
oo5z9/LC7PK4puN11A8bS8d54mr5TexxY2Xx58idu8C5LRz/Pbsz/h6bz1qy
M+Ki+jpRl+1zvCgrEp9Rf131I8Yr1MXif5fXYzONxUQNeS/n9o977ng5dgsb
x8aKhXGuuI7dqR6gL4++QqwSu53dyS7KL4n/xdiWdWY/yeuyScYX2SrW37m1
2Bi2nL3IerBt4mbWlw1iVdS7RRs2mI1mtdTbRVPWjw1mVdUVXe/2mBNsuliu
3sVbs0HqUfpqqveITmwUm8QaqC/VW4F1YT3Zefm7vJmxPxvCqqnfE83ZADaU
VY8579yKrCvrxS7I/8vbGoewMay2uo6+cWwle5n1YjtEC3YXG8ZqqN8X7dkw
No7VVe8Urdg9bCS7Xl3N9e5i89li1pZtFX9kvdlfWEX1/0Q7NjTuJauj3iIa
sx9co7y8gqgkvyOeZX2P6WvE9okubAy7lzVUfyA6spFsIquvLu/c29h9bAa7
gdVmY9kK9hLryWqy0exZtky8rj7I+7Kp6ln6WqsPiX5sGnuUtVFfp3coW8JW
sC5sv+jOJrKp7Gb1R6IHm8SmsabqGs6NRW1xzAvWNdYlNpz9nT3H7oh1jg1j
z7CV7HZWj01mL8XnZf1YHlaStY41QtynzsQzwpqr2+r7Tr5ZbyPjiVin4rkS
B0Qvdq++B/U1V38serLJMXdZM/Um0ZAdd+41sSaJD0U3NkHfFH1N1HtFZzaa
TWY3qQ+Lu+OZZ3NYB/Unog+bwmayVuqqrj2AzWNPxrxUF4w5wTqre+g7Ky/A
yhk7se7snLwC62C8nz3E6rledTaQLWBLWDuWm5VgLVl7dkKeZcWNLVg7dlye
j11tbMe6sFPydKxPxmasDftenp+VMbZnXdnP8jKxbooy2eQ7m228GM+1vKG+
ZvqOyM/G5zHWYQ3ZobiHehcYt7HdbLKez8XgWL/ZPNY57qO+B9lq9iYbzL4W
D7Pn2atseDxX+mawNewtNoTNEQfVuUQe9nqs6XHf1WfV0tSr7BfJL6xSrOVs
F/uGPWJ8gb3GRqjnxjOizoi8bLXjT8Q9Vl/M2bdXxf/us0yPPY1vYINiHWHz
2TtsF5vEvhV/Y+vYJnZ/rEv65rBN7O34n9XNxWz2H/V2feNijWSPs41sGxvL
WrK5Mf/Ze2x8rOvsUfYm28pGs1vZPLY1V/K+MZHdwp5kW9gONoE1YFNjH47v
WaxTPxBrueML47uJPSj2TTFNvkrPesfu0dOEzWIb2BY2MtZINpOtZ5vZqJxn
+irWgN0k9qh/5j/LK8b+rW+340+yz9T5IthaVkRvNWMP1jfuZ6yRbBnbww6w
h2LfYc+yvewT9nC8B7AqrFu8X8U6lk3235ZsYKzj4qT6R71fykuIMs7dmE6+
lynpZC2NNTV/7uS+PZFOvqf4vq5gt7FnYl9S73fudNc6GeuEOnfMSbExm+yh
XdPJnh97/6lssmaPSifrQ6wTuVyvKXuMvaV+x/XGuFYHtpR9wD5mM2LvYCvY
h+wQm8mKsuqsJ+vHsmxePHPqAvE/sDdiX2NfqC8NZ+vSyXdVOZ2subH2HorP
K1ay/erD+mY5rzCryrqzPizNfhLH1VeL0mKgnjbiaX07ciVzKeZUe7aE7WYf
smmxl7NFbCfby6bEmsuWs33sIHsk9lm2mO1i+9jUnDW2fzp5J4l3kzOx3vAj
8kKioL716eTzfR/Ps7gknrn4bLHGyC/oKSre1reIfcNSophhU+xh7P/qy8RV
bDt7I5O8Ix/JJu/q8c5+LuY5q6uvkb6D8TxmkvfDr7LJu2G8Iy6ONUFPOuaP
vs2On2d5jfVYY3ZY/o+YR+rLRUn2bjxnmeSd9sts8v4Z76HrMsnvhKPZ5DdC
/FZYn0l+JxzLJu/C8U78mRjEZsV+5Hqd1EvFj+oiohR7z/GV7GzUogLbE2tS
JnkP/y6bvEeXztlvY98tm03ed+Zkk3009tNrssne/ITx7Uzyzv19NmcfETfI
72Uv+xur/Y0B7EZ2H/sXW8PuYvXZ/ewVtpYNZMtivsX9ibnGdsR7EDsT35Mo
zz5gy9npuGeiHHs/3o3YKXXxmKtsJ/uU3WOcyeayjuq3Msk7/Nexl8pLiFzy
Qqyxvhb6jsmX8O/U2bgm28JeZNnYw1l19kncBzbB+DRbxvqo/xnXZNeyKuyj
mCfsAeNS9gK7W31UjGcL2VLWO/YTcUxdNOYle9PxCzEP08lvvPitt8PnfSrO
lxeOZ13fhthPWdpYjlVlH6eT34jncp7deIa3OvcLNiLuq/ppfd3iuRIj2Vy2
iHWPzTXmHWvEmiuPxp7BM8byrBo7EPea5TdWZbXZF/Ln4nxjWVZZuj+drJ2f
5jyn8bz2jPWV/RDPs7hS37aYJ7G+G69nN7Kvcr6Dgulkj4m9ZrxzX4n5z2qq
6+v7Wv5vVsRYK/rYN/JT7ESs/7Ensa3sJZbPWIXVYp/Hs8cmxloR+wLrq16Y
SeZTzKvnY66rX43nU1479jzHvpXPZgfU55OvLfUa+w0cYd2d
            "]]},
          Annotation[#, "Charting`Private`Tag$47403#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsvpFEYwOGPcRsMK6Jd0RAFpSgoN4pViSjoiGK3WIlsQakQOh1/AS0R
+k3o3MfMuM2ystkIu2Tjfg3PSRS/eU7mO5nznsxX0zvQ8S0niqJR3SqsL/Vb
87lR9IE/WM0NNvKQrTxnO5/Zw9JYFCX01bqew2zmONs4xS7OsJ+L/M5l/ucJ
77Wta/3TioFSXGWaa8xwnTthJu5yk3vcYlL74Xd4wBSzTPMnMzzkDo+4y1+c
dY9TPuhYN+GOmjBbkiNc4iAX2MdpdnKSnzjGJg6xjrX6Yh1nNx+d8Zl/2cIs
G8K9+JEX9v3hncp1FfaqyoxlrGSCFSwNe1jCBItZwng4j0UsYL4KrWMsCP9x
+I6vytNLeKYnGSOa83H2/j68Acy/Svc=
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{690, 1004, 473, 689, 1112, 912, 691, 1113, 913, 692, 1114, 
        914, 693, 1115, 915, 694, 1116, 916, 695, 1117, 1010, 1216, 696, 1118,
         917, 697, 1119, 918, 698, 1120, 919, 699, 1121, 920, 700, 1122, 921, 
        701, 1123, 922, 702, 1320, 1005, 923, 1006}], 
       Line3DBox[{704, 1011, 1217, 703, 488, 705, 1124, 924, 706, 1125, 925, 
        707, 1126, 926, 708, 1127, 927, 709, 1128, 1012, 1218, 710, 1013, 
        1219, 711, 1129, 928, 712, 1130, 929, 713, 1131, 930, 714, 1132, 931, 
        715, 1133, 932, 716, 1134, 933, 717}], 
       Line3DBox[{719, 1014, 1220, 718, 1015, 1221, 720, 504, 721, 1135, 934, 
        722, 1136, 935, 723, 1137, 936, 724, 1138, 1016, 1222, 725, 1017, 
        1223, 726, 1018, 1224, 727, 1139, 937, 728, 1140, 938, 729, 1141, 939,
         730, 1142, 940, 731, 1143, 941, 732}], 
       Line3DBox[{734, 1019, 1225, 733, 1020, 1226, 735, 1021, 1227, 736, 520,
         737, 1144, 942, 738, 1145, 943, 739, 1146, 1022, 1228, 740, 1023, 
        1229, 741, 1024, 1230, 742, 1025, 1231, 743, 1147, 944, 744, 1148, 
        945, 745, 1149, 946, 746, 1150, 947, 747}], 
       Line3DBox[{749, 1026, 1232, 748, 1027, 1233, 750, 1028, 1234, 751, 
        1029, 1235, 752, 536, 753, 1151, 948, 754, 1152, 1030, 1236, 755, 
        1031, 1237, 756, 1032, 1238, 757, 1033, 1239, 758, 1034, 1240, 759, 
        1153, 949, 760, 1154, 950, 761, 1155, 951, 762}], 
       Line3DBox[{764, 1035, 1241, 763, 1036, 1242, 765, 1037, 1243, 766, 
        1038, 1244, 767, 1039, 1245, 768, 552, 769, 1156, 1040, 1246, 770, 
        1041, 1247, 771, 1042, 1248, 772, 1043, 1249, 773, 1044, 1250, 774, 
        1045, 1251, 775, 1157, 952, 776, 1158, 953, 777}], 
       Line3DBox[{781, 1159, 954, 779, 1160, 955, 783, 1161, 956, 785, 1162, 
        957, 787, 1163, 958, 789, 1164, 959, 791, 1165, 569, 793, 1166, 960, 
        795, 1167, 961, 797, 1168, 962, 799, 1169, 963, 801, 1170, 964, 803, 
        1171, 965, 805, 1173, 967, 807}], 
       Line3DBox[{806, 966, 1172, 804, 1264, 1057, 802, 1263, 1056, 800, 1262,
         1055, 798, 1261, 1054, 796, 1260, 1053, 794, 1259, 1052, 792, 1258, 
        568, 790, 1257, 1051, 788, 1256, 1050, 786, 1255, 1049, 784, 1254, 
        1048, 782, 1253, 1047, 778, 1252, 1046, 780}], 
       Line3DBox[{809, 1058, 1265, 808, 1174, 968, 810, 1175, 969, 811, 1176, 
        970, 812, 1177, 971, 813, 1178, 972, 814, 1179, 1059, 1266, 815, 585, 
        816, 1180, 973, 817, 1181, 974, 818, 1182, 975, 819, 1183, 976, 820, 
        1184, 977, 821, 1185, 978, 822}], 
       Line3DBox[{824, 1060, 1267, 823, 1061, 1268, 825, 1186, 979, 826, 1187,
         980, 827, 1188, 981, 828, 1189, 982, 829, 1190, 1062, 1269, 830, 
        1063, 1270, 831, 601, 832, 1191, 983, 833, 1192, 984, 834, 1193, 985, 
        835, 1194, 986, 836, 1195, 987, 837}], 
       Line3DBox[{839, 1064, 1271, 838, 1065, 1272, 840, 1066, 1273, 841, 
        1196, 988, 842, 1197, 989, 843, 1198, 990, 844, 1199, 1067, 1274, 845,
         1068, 1275, 846, 1069, 1276, 847, 617, 848, 1200, 991, 849, 1201, 
        992, 850, 1202, 993, 851, 1203, 994, 852}], 
       Line3DBox[{854, 1070, 1277, 853, 1071, 1278, 855, 1072, 1279, 856, 
        1073, 1280, 857, 1204, 995, 858, 1205, 996, 859, 1206, 1074, 1281, 
        860, 1075, 1282, 861, 1076, 1283, 862, 1077, 1284, 863, 633, 864, 
        1207, 997, 865, 1208, 998, 866, 1209, 999, 867}], 
       Line3DBox[{869, 1078, 1285, 868, 1079, 1286, 870, 1080, 1287, 871, 
        1081, 1288, 872, 1082, 1289, 873, 1210, 1000, 874, 1211, 1083, 1290, 
        875, 1084, 1291, 876, 1085, 1292, 877, 1086, 1293, 878, 1087, 1294, 
        879, 649, 880, 1212, 1001, 881, 1213, 1002, 882}], 
       Line3DBox[{884, 1088, 1295, 883, 1089, 1296, 885, 1090, 1297, 886, 
        1091, 1298, 887, 1092, 1299, 888, 1093, 1300, 889, 1214, 1094, 1301, 
        890, 1095, 1302, 891, 1096, 1303, 892, 1097, 1304, 893, 1098, 1305, 
        894, 1099, 1306, 895, 665, 896, 1215, 1003, 897}], 
       Line3DBox[{911, 1009, 685, 910, 1319, 1110, 909, 1318, 1109, 908, 1317,
         1108, 907, 1316, 1107, 906, 1315, 1106, 905, 1314, 1105, 904, 1313, 
        673, 903, 1312, 1104, 902, 1311, 1103, 901, 1310, 1102, 900, 1309, 
        1101, 899, 1308, 1100, 898, 1111, 1307, 1007, 1008}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{251, 474, 1112, 252, 488, 280, 1221, 503, 295, 1226, 518, 
        310, 1233, 533, 325, 1242, 548, 340, 1253, 563, 1160, 355, 578, 1174, 
        370, 1268, 593, 385, 1272, 608, 400, 1278, 623, 415, 1286, 638, 430, 
        1296, 653, 445, 1308, 668, 460}], 
       Line3DBox[{253, 475, 1113, 254, 489, 1124, 281, 504, 296, 1227, 519, 
        311, 1234, 534, 326, 1243, 549, 341, 1254, 564, 1161, 356, 579, 1175, 
        371, 594, 1186, 386, 1273, 609, 401, 1279, 624, 416, 1287, 639, 431, 
        1297, 654, 446, 1309, 669, 461}], 
       Line3DBox[{255, 476, 1114, 256, 490, 1125, 282, 505, 1135, 297, 520, 
        312, 1235, 535, 327, 1244, 550, 342, 1255, 565, 1162, 357, 580, 1176, 
        372, 595, 1187, 387, 610, 1196, 402, 1280, 625, 417, 1288, 640, 432, 
        1298, 655, 447, 1310, 670, 462}], 
       Line3DBox[{257, 477, 1115, 258, 491, 1126, 283, 506, 1136, 298, 521, 
        1144, 313, 536, 328, 1245, 551, 343, 1256, 566, 1163, 358, 581, 1177, 
        373, 596, 1188, 388, 611, 1197, 403, 626, 1204, 418, 1289, 641, 433, 
        1299, 656, 448, 1311, 671, 463}], 
       Line3DBox[{259, 478, 1116, 260, 492, 1127, 284, 507, 1137, 299, 522, 
        1145, 314, 537, 1151, 329, 552, 344, 1257, 567, 1164, 359, 582, 1178, 
        374, 597, 1189, 389, 612, 1198, 404, 627, 1205, 419, 642, 1210, 434, 
        1300, 657, 449, 1312, 672, 464}], 
       Line3DBox[{261, 479, 1117, 263, 493, 1128, 285, 508, 1138, 300, 523, 
        1146, 315, 538, 1152, 330, 553, 1156, 345, 568, 1165, 360, 583, 1179, 
        375, 598, 1190, 390, 613, 1199, 405, 628, 1206, 420, 643, 1211, 435, 
        658, 1214, 450, 673, 465}], 
       Line3DBox[{265, 481, 1118, 266, 1219, 495, 287, 1223, 510, 302, 1229, 
        525, 317, 1237, 540, 332, 1247, 555, 347, 1259, 570, 1166, 362, 585, 
        377, 1270, 600, 392, 1275, 615, 407, 1282, 630, 422, 1291, 645, 437, 
        1302, 660, 452, 1314, 675, 467}], 
       Line3DBox[{267, 482, 1119, 268, 496, 1129, 288, 1224, 511, 303, 1230, 
        526, 318, 1238, 541, 333, 1248, 556, 348, 1260, 571, 1167, 363, 586, 
        1180, 378, 601, 393, 1276, 616, 408, 1283, 631, 423, 1292, 646, 438, 
        1303, 661, 453, 1315, 676, 468}], 
       Line3DBox[{269, 483, 1120, 270, 497, 1130, 289, 512, 1139, 304, 1231, 
        527, 319, 1239, 542, 334, 1249, 557, 349, 1261, 572, 1168, 364, 587, 
        1181, 379, 602, 1191, 394, 617, 409, 1284, 632, 424, 1293, 647, 439, 
        1304, 662, 454, 1316, 677, 469}], 
       Line3DBox[{271, 484, 1121, 272, 498, 1131, 290, 513, 1140, 305, 528, 
        1147, 320, 1240, 543, 335, 1250, 558, 350, 1262, 573, 1169, 365, 588, 
        1182, 380, 603, 1192, 395, 618, 1200, 410, 633, 425, 1294, 648, 440, 
        1305, 663, 455, 1317, 678, 470}], 
       Line3DBox[{273, 485, 1122, 274, 499, 1132, 291, 514, 1141, 306, 529, 
        1148, 321, 544, 1153, 336, 1251, 559, 351, 1263, 574, 1170, 366, 589, 
        1183, 381, 604, 1193, 396, 619, 1201, 411, 634, 1207, 426, 649, 441, 
        1306, 664, 456, 1318, 679, 471}], 
       Line3DBox[{275, 486, 1123, 276, 500, 1133, 292, 515, 1142, 307, 530, 
        1149, 322, 545, 1154, 337, 560, 1157, 352, 1264, 575, 1171, 367, 590, 
        1184, 382, 605, 1194, 397, 620, 1202, 412, 635, 1208, 427, 650, 1212, 
        442, 665, 457, 1319, 680, 472}], 
       Line3DBox[{277, 682, 1320, 683, 278, 501, 1134, 293, 516, 1143, 308, 
        531, 1150, 323, 546, 1155, 338, 561, 1158, 353, 576, 1172, 1173, 368, 
        591, 1185, 383, 606, 1195, 398, 621, 1203, 413, 636, 1209, 428, 651, 
        1213, 443, 666, 1215, 458, 685, 686, 687}], 
       Line3DBox[{459, 667, 684, 1307, 444, 652, 1295, 429, 637, 1285, 414, 
        622, 1277, 399, 607, 1271, 384, 592, 1267, 369, 577, 1265, 354, 1159, 
        562, 1252, 339, 547, 1241, 324, 532, 1232, 309, 517, 1225, 294, 502, 
        1220, 279, 487, 1217, 250, 473, 681, 688}], 
       Line3DBox[{466, 674, 1313, 451, 659, 1301, 436, 644, 1290, 421, 629, 
        1281, 406, 614, 1274, 391, 599, 1269, 376, 584, 1266, 361, 569, 1258, 
        346, 554, 1246, 331, 539, 1236, 316, 524, 1228, 301, 509, 1222, 286, 
        494, 1218, 264, 480, 1216, 262}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJx0XHlczc33L1lChUjZohBCEhWJQ1KpZMmetRCh7IpkCVlKlpRd1pJKIqXk
KKm07yEJpUT3Xmsb8puZe6fn+d7fk38+L9eYe+b9OXPO+5x5z9Wwd5m1spWM
jMzgNjIycuSZcHzdoMwzhcCfZZVVirXqNRA+0B5MhOTvphdTx2TkwZaXq0rH
HasBy5iJP3BsEciqLkk1eJINI8fr+Hh9qYGJulutC92KYP9cx1HZd56D9kLt
8PrJArjyyWntqLAi0KkZK3jv8hTOChSMSg4KYKCNb+3jvCKQc2o8sE4lFvL2
zTd5HC2Am4Mu6ARWF8Fq2XL3kyNCoKvSlxeHCgWgIbAXTv9aBDLiP3t+LPzb
5miZAK4pZwyn49fVtdlFxmP7ctWXdLzU/Mjnl7IHuT1S9iO337qnSx1db9aR
xylkveiYe8GbrlcKH+T41HYuGEBxnPozgeKJvVXnKVE8OY78//HxE/QMyxvU
8pufg3oMfVrQSgAHe0Y4ly3Kh8GGTrqxmjlw7l4r+YY1AviQ0tfOzz8fEssn
afRST4NJiqVeVxMEoFayv9X7pHwodR9Ank9BzzzTvqGdEAxRK+dJZT48OO+n
LHs4FtwjZ+qsHyeEnq9sLjj+yocmuRTNI9dD4ObT1fMyFgohRWeJwfxWBc04
C5XHDJ+3UgiJdzafp+MV/CrpeNz40JuNt8jamEXn/1CfR+fHJjzD5peyB7k9
7slP5lH7p+XFUPvxvs+KQ9T+jnrtNtH1uq/VpOvF33m729H1dvkr85bi0uW4
F8UHM3VuMHyk8GzG37G1Yyb1y7eXh7H39neSGXtfHEeOK8fzWO4Ln7jFOc3P
tToTmf90bTPji8g3B0qVlGwqd6dB39EjQhRHCmGH7BU5k5gcSJY9Zji9cxK0
7fO21meHEJQVBrx7VpgDAXv6tb4mioWBD3qF2kUIYYajdd+Uqhw4U2WYuVHh
Njy39xQNzxWCjsratQWCnGac98xOGW7wWghOj16q0/H7QqbQ8Xiw8yk2vvdB
eEvnLwofR+fHojAjNn9re8c21J6lXVZRe3DwxmvMHnkbHyG1PzF3ErUfhw13
Yva3+e7vS9e5/dxDul6cY96OrVdZ6+kois/KaU4UHwwOOcPwl/g93wfN/s/3
Od83fL+0tdvF/FLXfMMC+p7dMvux95ukdsOS4rhjRBCzK2fhWWZPcob+nhH5
ac3PjXmH13z1FcIi2SGh/bqnw07n0N1nZiRBpk4Ow8ct8lXdYPN0MN1Y/XOw
eRwM/n3Sums3EWSGGy5TWZkOfaxNl6isvA0dpm9r1DYQQeqfh9kDXNKbcT7w
zG/clUn/bzzy8YfbytTS+cXPOKx4EMrml7IHuT1S9iO3X4I7fw/N+Evhgxwf
KTyb4w+Pmzxu8XjF9znfZ3x/cb/kfsr9U5Dgs5fi2HudGluHimU8s9+4X2Sc
9f6k5udrxb7WCdoiKN174JxuSBLkTIzS9PeJA6XSHfNnrBBBkcZD01kJSSAf
YROxPvQ2RJZvF272EsHL5MidPZ4nNeP8MeVzqukpEdR6PZ1Mx0d6zaPj8XHt
XjZed/aFM3R+s6hkOj92fXKMzS9lD3J72vdK30Xtv+g/ltqP+7uWM/vfLZoy
jq7XvL0PXS9+jIpj633k6tf0juCzdsB5ig/21xQxfKTwbI7/PA/xvMHzxbS0
eyxuPjGzzqZxbvzYrSy+rZ89R4bu86vF2mzfj+kxmO1H7pfcT7l/dvwVz3Bs
9/n4WbruE1n72XqNzsdZGSbENT+PjOhZq3lZBGuS6s0ev42TPG/D0G9hTkpP
CT4Kt07O/xzXjPPPqSFvNbP/33jk43ecT5lK5w3xSaDzY/fafmx+KXuQ2yNl
P3L7eVyTxDnk8U0KH+T4SOHZnH8lebo5b/N8LckrzXmG55cFU5yf07iZsqWE
xcUpo/xZPOT7nO9jvn8lftbsd9zfOI4cJ47PtcGXg+/KhDY/3+OXpVuryHpF
iYEbOoY243y1++pL977/v/HIx+urNJnS+XuZNdL58dytO2x+KXua/V/K/ub4
I4n7PA80x38pfJrzrxSezfyH2815E+dL/HOe53l+55/zvMTzEf+cx1EeP/nn
fN/z/c4/537K/ZN/znHlePLP//f5RXo8So+XzI/S80vsQWl7JPajtP2S9aL0
eiX4oDQ+EjyR4ynhqch5K+errTOKGE8Smr5j/nzk8Q72vjbuW0b9GcP72jBe
cOTAwX/7M0r7c2kvWxY3K2dPYHF3jMD93/6MLfgztuDP2II/Ywv+jNL+LGUP
cnuk7G/2ZwnvQQkPQs5/pPBBjo8Unsjx5DxeOj5LeC1ynsv5rSQ+YwvxGaXj
syTPIc97PN9J4jK2EJ+xhfjcjLNUfMYW4jNKx2cpe5DbI2W/dHxG6fgshQ9y
fKTwbI7PvC6S5hsH58xiPH7Y6DwZyjdm1yg70HzKeSfnoZx/6sy7RPkGdno2
MYTyjQ47i9j+Uv3ymOX1VqYZD2meN9+vx/J745vDbJ1mmUn9GN/w2MvWm24c
y/ysc+S8cBpHD59w+zffaMaZ7/eaq0kszj46vIyOR//rnmy8zd1Ayjfw8aQi
Oj92X36azS9lD3J7rCJKKN/Ak6Ll1H50M/0t5p/r+lC+gTlrbOl6sUOH3Wy9
K2cmUr6Bu3d9pPjglJTRDv/iGyjNN3idKc2fJXUd8jqP13dv52yk/Bm9Ktew
uiRp+RLGJ7NedGC883fRa0/KQ93fz2f8U8LzkPM+zveKHbOZ3yjcetJA83y6
+kHmP9l5o9m+9dAfbE/zUmfFzf/mz8048/gpNR75+Mq4Hz/p/NMnFNP58cDL
y2x+KXuQ2yNlP3L7JXUXSuow5PWXFD7I8ZHCs5k/nz/eNovW7WXjm77TejAt
rJjVL7zO5HUnrzd5XcTrJF4fSXBHyXtoxp/zTs5DOf+UxB3kPJHHH0ncR0ke
aI7/PA9xnHk+kvAelPAg5PwnbKYZrQcxfN8GFuc+dTZn83O/5H7K/VNSd6Gk
DkNef4nittN1In9OWJbF4u3KhTtpPYjVKxI20nqwfZoKw0fS90FJHwh5/4f3
QaT7G7xu53U8r995ncnrTl5v8vcq3d/gPJ7zes7neVxrob+BLfQ3mnGW6m9g
C/0NlO5vSNnTXF9I+hso3d/gOHJcOZ4Vi2ZSXJA/N5r2TfpXfwOl+xu8r8T7
TLy/xMdJ9+skfo+SfdDs/3yftNCvwxb6ddhCvw5b6Nc14yzVr8MW+nXYQr8O
W+jXoXS/TtL3QUkfCHn/RwqfZjw9tg4ZSPHkz/nmyQzPW7GrUxYvK4CC4aOT
6NM6d5TcpZM1gF2vGF01KICXf1xjwpMKYfnE5So95v+/8cjHW1ypN6TjVXXT
6HjMbEhj4zf4qNDxKHmC7AhsRccL9tfT+TFi2K0oOn9pacl/jUc+XmIHSuxC
bo9wSSP7/9uVZ4yh3z81YEp3+rnEDm5Xsz2S70PJ9zd/r+T/o2Q+5PNsXjZp
7+amAvCdPXM/fQYnvIGhC2rAsuG3J/275IlLX65jn0vGYwvjUXp8xqihrkkf
CyBL70Zw6zuF4LPicFD5uBp4UzKT/f344/Qd5N8x/G1v9nmHyEs3yOcYMVRz
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
taJYH8D1AsB1AlyPwnHmOo31Yn0MDBHrZZp1Mg1Wj/Po/K6VFew8/M7Rcjb/
+i4lydSe0G+u7Py2l80RZs8bsT4Pfov1es06val9tULpek933E7Xi2Oe72Dr
3WQyip1X1R9SY+c5y9utYLhNFutf4ZlYD9usg11S/orplbtbKTL9cleNe+w8
iJ+7cL0tP7+I7NsznJ4v3jGSZfrNOJU37JzOc9qwKfR8VyfsONMbTj3ixs5J
y02PMz3fkPDehlQflxy6kp1Tc32DRC/QrHOw2jPclOpLnD+3Z/qjA32vMJ0G
1/dwnLlOhuurJHor5Dqr9v2+29D5P35KYHqE/YMN2fxS9iC353n/aZOp/dNq
rrHz3jfbfZn9+9Yn3aXrnWj6yZ+eTxaOvc/WuzKvGz0/g2Kjnuw88GdK8n/h
1nzuc9LBjum8E9JLmK7Z4X4cO4/j51hcB83Ps7J2JRnQ89ppUYOYfnZdliU7
JxV0/fSFnpe36zOY6U8fNVqxc+qbVxWYPlL4sS/TS5rpGzGdANeLSPQjzboR
58hoptdpf+gv03/FnVvFdDJcL8Vx5jolrleT6NeQ69bkrt7dRee//iyd6UFW
T7Nh80vZg9weGZ9jQmp/kpURO/9vuruM2R8+Nkt8Pu3cg50PO6fqsvU+vdeX
nacOlfvIzjONJmf9F27Icft8X5meg0LIxCymN6/3UGDnoQLxuV2zPl1Wcn7X
9upkdv49zuAm00fXTHzEzqm5fpfrebmON/vBGqY33Tc9YhPVh+oJjZhOg+tv
uF6S63C4/onr+7gOiuvPOM5cJyY1Hvn421PO6NL5T/TUZnqfQm2xDkfKHuT2
SNmP3P6cMwFM/+39N5Cd/1diJFuvFG7YAm7IcSsQn0M33wPg59Gcz/HzQM6f
c8Xnqc33Cfi5Kh/P7ytwHvhErCfg+gLgugI+nuvTeR3EddVcN8310vy8Qfp+
/TKx3rdZ/8t1v7yO5Xph3jfgOiquY+X6KD6e6155P4fr27h+k+vWeH9N+p4+
1x1yf/hfPSHve/I/X6Tnxxbmb77XP+ajlpDa3yPoJNN55eU2/Zf9yO2Xwgdb
wAc5PlL4Ywv4N/8+wFTx/QHwEN8naL5HIPV+kb9fKX/DFvwNW/A3bMHfkPvb
MNUdTFfROkWH3Y8pVn7G5tcQ6waQ37Ph+oE4sT4GJXqZZp0M1+tL++Gu3YZM
X74/1obp068UXGd4cr2dtF9xveN5Kf/helNpP5Ea3+wPQ8TvHaXfu5Q9yO2R
sr/5PU4W3w9ByX0R5PdEpHDDFnBDjlvbWQ1UB4Mqh3zYfSbLWQKmh7kr1m0g
v//E9RvqYn0SSvRKMEOiU1omjm9oKRWfj5xn9wFw4d6D7H7A31F6LB7GieMz
SsdnM3G8xTCp+Mz1u9LxWWp8c3y+Jo7PKB2fpexBbo+U/c3xuUp8Pwdniu/r
IL+nI4UbtoAbctzeTdvE7k2N6avO+MY8tVcsb3KdCucbXK8ybMttyjdwQMxk
F8o3shIGsPy70e0H5Rtoby7L7pe4ptixfP29fVd2/yFdaMXuQ9RGmrD8vnCd
KdOD2n06dJryDYPxpowPFDnEMD1ugdKzcso3lgQ7Mv7A9dDSfEN7hTob/6vq
OR2PLjrr2fhNS+5TvoEFK0/T+bF86yw2v5Q9yO3Z/+0M5RvYb1tXpu+L9djA
7FfUjWL6M9+N+nS9mBPXga23yyUDppe6Oleb8Y0RQTX/hVuzzse9MJ/dN7u1
ryPjzzmJYv7MdT/S/DnJqCaM6tuUqp6dofz59OirjE/+qFOn/BnBwvUW5c87
3dYz/rl8+jF2n+TMgp6MPy8rFfPVQRG5TF87Y+qVYZQ/i/r3Yfy2z8VhlD+j
/haZLpQ/y88KZHyY68ul+bOvQyTTQx893YaOx/naYv789pKI8mfsNC+Kzo+C
36PY/FL2ILfHKAsof8alXkep/ajs6Mns9zvkT/kzXvoSTteLEfNd2Xr3Jyky
/dnaTWqMP0euSfkv3Jr5c9ixGeyeXsyPXe9pPWi0dCirazaIdWMo0ZE168dS
fRbTehAVus0Oo/WgzMbNrD7yGHaP1oNoaL2slNaDpZXXWT1Vq+3E9LIV5aqb
aD34IXc/q7/O+R1neuVvrVMm0nrwkHsSq9e2nUxienGNymwbWg9GXujC6juu
15euB4vL1rPxIZsK6Hh0S+/Oxo9c/YjWg+i8uIzOjwvGvmXzJ95MSGb3hSI6
UHvQK2kDs8d13xJ2X6un40ZqPxY7xDD7FWcIb9P1pgwaQ9eLVkcmsvWmNBX3
ori9+LCK4oY68+UZbl3E911xtfj+K9pI7r3y+438viO/5/herNtDiY6vWb/H
7+Px+3n8Xp6pWB+MX8V6Ydgr0Qnz+078/hO/91Qu1sejRC/frJNXdLVn+vva
IXPY/ZtfF7+x/ga//yDd35gtvp+Dkvs6yO/p9BlxifY38HRJFNPjd3bbxua3
je5E+xuYdGIs00ev8jBi9pzdsIfdfzMYq0TvC2KAQR6zn+tNuf6U6065PpLr
JblOMll8Dxkl95KR30fm90L5PVF+P/TC/ijaf8OwNk3sXqPfsuOsH8V1w9L9
N35PjN8b4/fFuG5euv/mIe6/oXT/jd8b4Xjy/hu/tyPdf3sr7r+hdP9Nyp7m
+2sPxf03lO6/LfRrR/tv+Eoniul26890ZOvlulKuM+X6Ukl/EyX9TrST9Dlt
rPvO0onIB/cmq4pS1xywd34SpD1DAE/rPSaMqsmHrW3H23coSAOrnZZpprcE
MPpEg0FW7wII6iFqd9mT8ISti4MXfBXAqiq1+4KJBXB53+UVb1QeQdyEVSvy
tYQw4aiuZfy8AghWtz8YUhwG7gc/7NhuQeKzRN8IUvpGreM2qwIsCmDind4e
h17H4JxLf4Nf6QohaUxVcc/BBdDL46liuTARe7o3rOwhIwSrY9Xt3zfmQ2CS
T5K85XOsXbutcTXxq6/3Lr0RJuRD6eWmbm+2ZGOwQEOHnk9V6j2Q3eqRD9O2
916ifi8Pr4745k3PU2LXHWB9/6b5Sqx/3COmnPWNd3RJDleZkgvzyj8tXfUj
Hc6G/F14tJUQ3kRd3PZ+I/lcsSBorv8z2Pmt1vvZdCE05n7WuX8qFwK/mJ5o
2/MxbEzr0eXtYSGUqhu+xVu58O1X5qAJzyPAZKm3icedf/SHgRL94S6J/jAu
yfDFsIO5cK9w/7rApYmosXDZ2TASr8Z8AsHmpbmw5umxkCEFqdj228qrl7SF
APN2uAzVyYWIy3MXvVbNxisHDK3puVtFj85DVn3Pgf013qcPH8/DkBnRpfSc
SEerJGpuRA488p3torSlEJ2dLYLouUbUglaVZksyAZRnP8+7kQy7gveoXQgU
gs02e/l15zMhfsubXzKdnsD0j9MNrMuEMK+L6jPnpEyoretqkBQaCRde/3b6
IS+CcxJdn5u0rs8mILunbSbYrwkQ/ZqWirUOpd3oeWvK8OqbD2QyYePsUPug
4Czs1jd2HD0flF9hpYQXM8B/+K1WnVfkYef5bS/S8yyXjOzhFsMyYMjlyssD
ZxWidd3otsFzSb67P/P3iooUGHr9uuITpQQIa/r16dpAEcjNXqQXLJ8KBj37
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
92F5+YJFfgrJ45gd00jzOMbXN7E8PnL/ljJS1+NDs41apK7HlXa3WV3fWsWK
9gHQbkWMd9uej7HhlQnrAzj0bbf9/cZcXJ8TEDLX/xk2mqWyvkGY7izaZ8DV
w0VLVv1Ix7o/6na0z3Do97zWWz3yscvjlXbq9/Lg2rcvrF9Rtce1RJiQjzJt
Fvd6syUbBs43Zv2N9nolCu8b83Fycn/aD4H3W/800H6IcmkD7Z+gj+/1DuXC
REgoVVlF+ydBpyodAywKcIRz+a5Dr0mczo9j/Rbdricpz8H1r9vYEZ6DcquH
MJ7zve/GqfHzCtDBwYP2c1DreJudtJ/jYHo+UjCxAL/pF9P+D346cIP1fzyL
FQ2zehdgKOa2vuyZhNl67qxftLm3YNyomnzsc9bKoUNBGg4MusX6Sw9F6bN1
IvLR+3N9ZalrDvacKLhJ+1FnJDrAXCkd4LCY8n6Dg/MhIWpPkNKLHPBaUHe/
cbIAHA5vCfd9kw9HQ4/8VFqaAb/e5Mkf8xPAy5cdSpcqFIBMVL8t4yuTIdVy
+9uVLwTg80nWqkS3AEw+2z9sZZ0AS0Y/0V2nJIQVmv3vOVgVQFHIuQu9SD29
PML1bgzZX02hfXftIfH3zvKKhX9NguDz96S556b909eSvrc7X2vJ3XtknuiP
jmOsDKKxVZ3XiNNkHlNzRyeHkQVg1tThqtv0BBzdd4aTPvlejT0DVvRRLICu
P+/1P1CdjB0a5yb1IXbaDFqf4VGWD44FM9N62Wfg07shSoZkXcM+eWua3sqH
C8ae9ptf5mAvvZLbAQSH2tXvQpUhFw4vtDg551EGPLbqoXG2TgAzy582DFud
C1c3HlIr1kuBykummT0mCCHfbMIWwaFcGO5ZnB52MAHe/NA8abZNCLtKVL4/
CcyF5ypJZ309omHfygXLB18WQhdNHWPDO7nw0rHOYuKpIPi+5c+dVjH/9LUu
SfW1Utu4TFY/kgu7EvBxnjfJGwcUerzfKoTRW+LMi9bkwpNfh2fdGJOCofec
rE+PF4LCup+jhk7KhTndP5ZGJ2TgmuPFZg21hFfHlz1P65wL/TwbchM65+K3
UKzXvyaAY+dca1xf5sDKi2/KJtzKx5RTXxMoDspFrk+U5mZCl5+KR+ZsS4FT
ZeHLpwYIoWyBr5aWbyb0j5mIjrEJcOn6nImOuSRO7ii7ERFDxp9OV7iRFA0/
Gj/Ojv5F1rU7SqY8NxN6j/qwqtOrIEiK2rZsk8o//S7pe6zxeHSit10mbFcM
WftoVwpqn6w3OOcvhIMXYwrtVTJhz3tlt2kqmXhrqEtXX+InsZZt2mcmZECl
5vjeGpNyMcnu8Va63q9dnK4Psc+ADh8WHnIty8dxM9aZ0/e+3sa7wKMsBYYe
0glcWZkARn1X19hQvUr8uCDzVqlgI+yobC4TA4fLRrmVThVB3I+u/exUSXys
mO1t2z0YLqaYfLZb8U8fTPoeqOHcTibpu1Kg9Ob81h52mZjQZqIdtd+nT/XT
mDEpoDv3u0PmmlxUeat1g76vrKhVc09VJ8PSWZHjVRUL0HWBg7o68Vu/nuN1
Vw5MBFw7UX+nbgxgfbRo3CERvMYLg2UNEiHc/5CZknkwiKybHO2u/dMfk74X
eTFZpmeZdwKEC6/nqB0hvMixxoX6j5zfpRMHpifA5C/zXJaMLMCfHd3z6D7q
+eFacb91MVBcu0d+5dpgMM5atmJKrqi5byZ972/FMkvnBQYkH+TE50VYFWDM
t/G76T7lfTPp393ifbNbEt3ozv/5Xaljxv/9u1vHjP/7d7eOG//3724dN5b+
3S3ev+ou0b+US/QMspJ+WluJ3qH8f/Qwvsb//ftax4z/+/e1jhv/9+9reRtL
/74Wt0ein0WOQ0v9ND6P9O9uFRp4hfQPDMJZGSaPppO4Mtl2q8nPaPLea+f3
+1kRhPKWat/U8jIhY+XbZ6vIvvuQPGOdXN9g9D88vEcA8esT94nrEX+uajcp
f+G0YByVYr/dlPjXnrfKWrOJX70OVw3VcQnG9gLbtzHEL8pKtG5NJP7gF1Nm
9c4zGLOzR0XJ7g+G0lF7XfQEIgif7Wc0ZS2Zv0uySZd1Meh5IjCU+s+GYtOV
r8yCMezz1cwf+okYYhAgu4jM/27zmL6q3YPx1LC9ltNUUzF1t8fTRcSe3Os9
DQpfBmFQ8fPZRbmZOHXfxembif3Rd7/WdDkVhBMTJ+/Uu5OLU9ZF7ZOj+sn4
r6IKE8Lz/9T/3EVw67fhUTHNLzkp3fatz45Gdc2MnUaxmTBh1/yzHiQurVH7
deyNfAz+btg0vk4uFXrZtV8RTvZ7SEjRuSiDGHS6tOfZmEGJELXUq0mV7Lvl
oKg/ZH4MdrEExdnzSd3mkKPrFyUCnydT9S+RdZqPtNuywiUY7po/yqX4ZAU8
s7LXjcHOc531FgxMxLrKkyHGZJ6mLdbh/WRisPXVH1X6rVIxuvpd6hvyvXbj
dzzZmRSN2p2NDl6KycSRvhnVMcRODYXCh+s8ovG9V7ukh4G5+GSdQuEQkkf2
vapq047UKXdUriUuJfuuH3Y895DsO8u/Kfev1yRgnF4XndTyFLi6smPi2z6E
P/+89m2rUiIOefD2sI9SIvzyuBA/y04ETkN/TdAgdUEndDvywSAG+hf/mqxG
7PwZ1/7XaINE7HEl1P3ctGA4NyzDk/rDNTw5bH5lAv7M/t5nU1kKhs8xaT2D
+PPhbbZnZscmYJC36d9uvpn41eNV3WqSF1ZM6P7gPKlrbEvWl304lItjE6un
W5D8eOHnAIc6qwT033rnQ5FuAU7s1m/uehJ/Llwd0xRTnoKapxfZ3q9JgGi8
VkPt/2PuYlAul4qT3PYdlW8fA1k+jS/o+1r3UX/lIeI345cdCZnUNxicv9WW
U3/OHiD3eeq2FBwwXPBbbm4mbvu16bQlyV+tNeOPp+ql4NA5dyK0VudidbcB
jr1IHv/WX2nSqMpknPxkfoadQgGab96k4Eji8P2Zr6N0YjMxv9BR0ys7Gnz1
p/+l/vPkpvMBxbxMnCRYtnrQhyBoe8rfxpH456CLuH/aowxcFfWsbSfIxZ7Z
HfufI/xhQv/87e2WZmBjztrj3m/y0UY/XdaX5KOGmIYAa+LH+nvnh0wMDALR
4erLdP/KNtx4oPAiByP0o9doBeejYYfRZr9IXubx9GdV8XUBiQc8DpTCw/tk
PMR3THck4+GUXyYbz/X5w0cvLY6U9Tbm59fLhnrR74XHbyzCyPfir6d17Htv
9FGmdkJl9/pjxE64N0qlFbVzxryQPWRdUCOb2JqsCwJv+rF1WUji9XRTr5cT
Wnkb35HEtzY39Ck+YK30eRXBB936nGf4XDtnep/gCVDdToPgiSffr2V4fqnJ
NyH4w04XT4o/bDkwh+Hv9Vj7GHlfoHtL5g55X/Dr4l72vm6u8KPvFz4PVaTv
F9Q2ubH3y/OE4N2ohr3EHh6HDXs9WkH8BMpWq1A/wW/9/zA/yRzZVp/4FbgL
ValfYcggxZfUr/bZef0hfgin/y6lfojlGqHMD3e+e72C+C0UZw6rJH4LYaN/
zaF+e7204j7xc/COM6B+Dr1CfzM/91X4GED2BXx6uLqJ7AvoePgz2xcXLZx1
yD6Cp7r31Mk+AvnOg9k+4vns1wgP3RWyx415fund4Vgj2Y9w2CR0F9mP6FaS
zfbjp3E3x5P9C8O3uB8l+xcrZNqY0v27YeXHr2S/w9Mvi4+Q/Y5T4i+x/V6r
aUbjA1grmIwg8QFxoyyLD6vi/9B4ArOc/yaQeAJd67VYPEl56x5N4g+8c4p+
SuIPjNTqy+JPxH5FJPEKdl6dQOMVaAXnsHiVEjqdxjcoHHmWxjfYbFLJ4ttd
IwtrEg9hlUnBSBIPybz+LB6+luRpm9JPSf3Jenme9RPHVTAUx1XkcXVbUP4o
EodhxAkTGoexsncBi8MXdNVp3AbtqLY0buO8Bh8Wt726yfiSOA/HxjYYkziP
8v07sTg/YWYHT5IXoG6eL80LGDFiAcsLbR/LfiF5BFx8vWkegcyzWSyPnDMI
+ETyDlj7vNtB8g58W/SM5Z2XFuGjSZ6CrpZbaJ6CjnHXWJ66tMyI5jVYMNeW
5jXod3cPy2uLlJNpHoTQJ3NoHoQR586yPFh0sbMxyZsQ1OkZzZvweMNllje5
XtfRQm9MKOELXId5XZx/4Yk4/yLPv+4pr0JIvobuSbNpvsaQjEEsX68t3p9H
8jvcXj2Q5nc0v6nC8vsZa1vKB8DX6Ysa4QM45IoJ4wMVMrM0CH8A3+jSr4Q/
oPOQcsYfOsZtDSN8Az71fBNH+AaqHN/L+EaFVJ/NV9Jnay3hVdL226SPoLwR
/bcczie8EZZ07s14Y30L9+iLJDxsusRPZBTEftJNzFcxRcxXkfPVpXHfTxF+
izMHb3Ym/BZMGr0Zv31qPkuV8GGE8XJ5hA/DtMg8xod5n621VJ+N8zzp/fhh
hhzl4ej1ftYUwsMxCFuvpjx8oJ9Ah/B2dJ/QbTTh7QjXUhhvb5gWPo/wfFTX
KKU8H+5tsGY8/6rXtwRSF2BI/bsVpC6A69d7s7rASLnVJFJHoMMF23akjoCZ
On1ZHZHZwj3rSRLe6bXoaLEzsZPHPf3l0X1J/YIvrI/5kPoF35ibsfol7uLJ
G6TeQdv6aV1JvYMvV5myeuf/6ra/l6biMI7jURoUeNroplGb27xQLMhkSzDt
W83WlEUuYRHlVJzUKpPmikQr++GvVQgRaGGoodYurGXk7CIfh5QQZY3NJI7D
VRqsWYHBMCzq+T6yG2H/wLk7nM/rzXkOTfn86CPINjq5jyBrtJJ89Ct8oxs9
BesLWpzoKZZ+MZs8de++cjX6C34WCgr0F7vie0D+Oryun3sNTtQscq+x8+Ey
8pp9MImh78CVuaUKfceelc6Q74Jx7pdjuzn2fYnt5y8uC3clCNKTx9CV8PVq
LbkyGK7vQYdCzzlLEjoUQjl/yKF6eXIquhUUunEvuhUUTVpyq0OWCuhcMErT
uHPBGPSScx376yLoYqjY6Q+hi5lhfI5crMtXjaGjYfSHJ4COZgcfLTl68btP
g+6G6ZzX3N2spOM5uXtocLsBnQ4J5oFCdDqbbasip+t3T+xB14PlengEXc8k
HoFcb45zRxz7D235d3xa696Rhe9h0aku/S7cxSmlUjfvCXN3N82P4F4MZFxu
a8X9mKe9Rv2h2n6b9wqoldzhvQK2vt1AvSJFMPO+AZrcm7JJ3Ee/I/uobzgv
fOA9BPraVbyHwK0MOfWQ9jh3ptHkIWWeyw/lzr3W6o/v2VpFmLrKtqKXvMPA
Q1ngzUZ0ubP4LHWYzcNTFXJ0b2O3Wt2ADnbnK6nb9LaEeOcBh26sswad2ty5
1HkOJIoDT3HvJjRqeBdipzsM1IViLoou20VdmWV19egBk3XFkX/ogwVxhrpT
+qT4pByf02R9xTsVfFY9pk5lWnO8QMQ9ajzT61lp9EJU+o26lk0MiCW4Cxtk
zfZc3ImS+WHqYBHbpf5W3HOCKXFBwH1n+ztB3WzVp3fqNNxtL45WugTccbO+
YupsfXHudv8DcV+AWw==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{319.2830376881103, 127.66847148136559`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{Full, Full, All},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{
   3.381416574323741, -0.0008622422810343373, -0.12657490836223245`},
  ViewVertical->{-0.03740630961088235, 
   9.538399371132177*^-6, -0.9993001390524839}]], "Output",
 CellChangeTimes->{{3.781189027515971*^9, 3.7811890694494133`*^9}, {
  3.781189243782535*^9, 3.7811892505756617`*^9}, {3.7811893157666187`*^9, 
  3.781189335420426*^9}},
 CellLabel->"Out[75]=",ExpressionUUID->"00f66996-ef56-4046-8be9-448002f82731"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{"l1", "+", "l2"}], ")"}]}], "+", 
     RowBox[{"5", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"l1", "+", "l2"}], ")"}], "2"], "-", 
        FractionBox[
         RowBox[{"4", " ", "l1", " ", "l2", " ", "m1"}], 
         RowBox[{"m1", "+", "m2"}]]}]]}]}], "\[Equal]", "0"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"l1", " ", "\[Equal]", " ", "l2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.78118940308416*^9, 3.781189405707529*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"9ed0e4d2-76d6-4d38-81c9-67a8e75badaf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"3", " ", "l2"}], "+", 
   RowBox[{"5", " ", 
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["l2", "2"], " ", "m2"}], 
      RowBox[{"m1", "+", "m2"}]]]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.781189406265452*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"e82e7c9d-41ae-4948-843a-53505b42181c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"%", ",", "m1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7811894128765497`*^9, 3.781189417867264*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"18324287-8e90-44e3-a8cf-10c2d7ea7da1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"m1", "\[Rule]", 
    FractionBox[
     RowBox[{"16", " ", "m2"}], "9"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.781189418311171*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"186ed7dc-cf51-4a4f-ae3a-707414b04560"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Acirc", "=", 
  RowBox[{"(", GridBox[{
     {"2", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], "2", 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "2"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.7812140279120693`*^9, 3.781214058979351*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"838ec26d-1ec2-414b-bcd3-aec646f42d6a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "2", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.78121405950467*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"51a04c59-51db-4f96-8b0c-a8addd0e4c23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "Acirc", "]"}]], "Input",
 CellChangeTimes->{{3.78121406018012*^9, 3.781214080757012*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"74965a4c-f15b-4d19-8db3-bf36f9aae976"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "3", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.781214064102749*^9, 3.781214081240673*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"35db9721-5c40-42cd-8ebf-0d87d4016912"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", 
  RowBox[{"Acirc", "-", 
   RowBox[{"(", GridBox[{
      {"\[Lambda]", "0", "0"},
      {"0", "\[Lambda]", "0"},
      {"0", "0", "\[Lambda]"}
     }], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.781214177907894*^9, 3.781214205643022*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"537be128-84bb-4b12-9fee-f3bce8c08977"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "9"}], " ", "\[Lambda]"}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox["\[Lambda]", "2"]}], "-", 
  SuperscriptBox["\[Lambda]", "3"]}]], "Output",
 CellChangeTimes->{3.781214205981494*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"20d4aeae-3376-4df2-8f50-e58ed32f7a51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "-", "\[Lambda]"}], ")"}], "3"], "-", 
     RowBox[{"3", 
      RowBox[{"(", 
       RowBox[{"2", "-", "\[Lambda]"}], ")"}]}], "-", "2"}], "\[Equal]", 
    "0"}], ",", "\[Lambda]"}], "]"}]], "Input",
 CellChangeTimes->{{3.781214252636511*^9, 3.78121427029091*^9}, {
  3.781214459204865*^9, 3.781214464541214*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"c729d997-f782-4669-8c14-be51de5ff076"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.781214270701632*^9, 3.781214465077812*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"d754ca45-7983-4b65-9bc6-34b10b7b30d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvectors", "[", "Acirc", "]"}]], "Input",
 CellChangeTimes->{{3.781215056716627*^9, 3.78121506237118*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"de0b72d9-f775-4cd1-a1cb-5ca381f3cc22"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.781215062715838*^9, 3.7812167744355173`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"61be6e91-93ec-4434-a850-cc8754cef6d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Orthogonalize", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.781215411412588*^9, 3.781215431419593*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"0d6576b1-c28d-45b3-9eda-73a69687f746"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", "0", ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["6"]]}], ",", 
     SqrtBox[
      FractionBox["2", "3"]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["3"]], ",", 
     FractionBox["1", 
      SqrtBox["3"]], ",", 
     FractionBox["1", 
      SqrtBox["3"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7812154319354963`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"42e2fc8f-3dff-401a-82f6-3b1db3f2680c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "*", "%"}]], "Input",
 CellChangeTimes->{{3.781216184540154*^9, 3.781216185746924*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"50a565e5-e992-4e49-a489-4d165768ffcf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      SqrtBox["2"]}], ",", "0", ",", 
     SqrtBox["2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       FractionBox["2", "3"]]}], ",", 
     RowBox[{"2", " ", 
      SqrtBox[
       FractionBox["2", "3"]]}], ",", 
     RowBox[{"-", 
      SqrtBox[
       FractionBox["2", "3"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", 
      SqrtBox["3"]], ",", 
     FractionBox["2", 
      SqrtBox["3"]], ",", 
     FractionBox["2", 
      SqrtBox["3"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.781216186014958*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"f6695264-02c8-453c-8362-8a100d0f8f65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "v1"}], " ", "-", " ", "v2", " ", "-", " ", "v3"}], 
      " ", "\[Equal]", " ", 
      RowBox[{"3", " ", "v1"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "v2"}], " ", "-", " ", "v1", " ", "-", " ", "v3"}], 
      " ", "\[Equal]", " ", 
      RowBox[{"3", " ", "v2"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "v3"}], " ", "-", " ", "v1", " ", "-", " ", "v2"}], 
      " ", "\[Equal]", " ", 
      RowBox[{"3", " ", "v3"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"v1", ",", " ", "v2", ",", " ", "v3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.781216277228847*^9, 3.781216314538891*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"91d898be-837a-4d48-8358-cac338e5f5cd"],

Cell[BoxData[
 TemplateBox[{
  "Solve","svars",
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"",2,
   11,1,29150806693412424283,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7812163149767447`*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"2390cca0-9f1c-4052-901e-cbe9788f72cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"v3", "\[Rule]", 
    RowBox[{
     RowBox[{"-", "v1"}], "-", "v2"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.781216315002368*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"af1e7ff1-d5b5-46c8-9ee9-a44ab7806ea7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Adeg", "=", 
  RowBox[{"(", GridBox[{
     {"1", 
      RowBox[{"-", 
       SuperscriptBox["\[Epsilon]", "2"]}]},
     {
      RowBox[{"-", "1"}], "1"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.781223358038085*^9, 3.78122337740478*^9}, {
  3.781223409864215*^9, 3.781223410229047*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"86643659-0622-4e34-a2dc-73175497a8f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      SuperscriptBox["\[Epsilon]", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.781223377832885*^9, 3.781223410703763*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"18049c3e-acec-4c59-b680-644693b0e751"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "Adeg", "]"}]], "Input",
 CellChangeTimes->{{3.781223382845602*^9, 3.781223387908263*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"8ba94966-b21e-410f-aa96-8c78a59fd8c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "-", "\[Epsilon]"}], ",", 
   RowBox[{"1", "+", "\[Epsilon]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7812233883447657`*^9, 3.781223415814497*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"96f46d2f-4fe4-4310-8c27-0cd60e437f07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvectors", "[", "Adeg", "]"}]], "Input",
 CellChangeTimes->{{3.7812234477901287`*^9, 3.7812234513323*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"032a6b58-622d-4bf2-b920-3a22c6d85136"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Epsilon]"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.781223451779929*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"bc86d351-df2b-46b9-b3c6-362dca33c8fe"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cp", " ", "=", " ", "1"}], ";", " ", 
  RowBox[{"Cm", " ", "=", " ", "1"}], ";", " ", 
  RowBox[{"php", "=", "0"}], ";", " ", 
  RowBox[{"phm", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.781226463062253*^9, 3.781226493878166*^9}, {
  3.781226810110882*^9, 3.781226810300364*^9}, {3.781227045294937*^9, 
  3.7812270680466967`*^9}, {3.781227266471381*^9, 3.781227268572315*^9}, {
  3.781227312407424*^9, 3.781227326583181*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"87d19fc4-d5c5-4b02-9279-7d64be518080"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cp", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"50", "t"}], " ", "+", " ", "php"}], "]"}]}], " ", "+", 
      RowBox[{"Cm", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"45", "t"}], " ", "+", " ", "phm"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{".2", " ", "Cp", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"50", "t"}], " ", "+", " ", "php"}], "]"}]}], " ", "-", 
      RowBox[{".2", " ", "Cm", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"45", "t"}], " ", "+", " ", "phm"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.781226455782097*^9, 3.7812264584610033`*^9}, {
  3.781226499852272*^9, 3.781226628708721*^9}, {3.7812267212555933`*^9, 
  3.781226754212534*^9}, {3.781226808157642*^9, 3.7812269126042137`*^9}, {
  3.7812269969356813`*^9, 3.7812270321733723`*^9}, {3.78122708395181*^9, 
  3.781227084428658*^9}, {3.781229091759362*^9, 3.781229103668803*^9}, {
  3.781229151464039*^9, 3.7812291605566597`*^9}, {3.781230207431857*^9, 
  3.781230223260721*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"ed8a4a29-303c-4e2d-96e9-be97f542c2f0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
1+MlEbdw1e2CG5lhTGArKOhdv8kUq9X2JGe8pOO1emvXCsrgREWekc8RdFz4
4tH32Z1YNEB2a1oUHevqePQvN8ePxg5f+fSa3u/8/oEhodt4TM8qIfkN/Tz3
RLUSjwc2/ejZ9zHu//k33zWK88fFK+NlEuNpPZW5dRXohmGlK78s37+j429T
H6h30TimqD864QPN/6iYS6kab7GTxybJuGR6v/PSj9bbpOC+7v9M3nyi+805
zPHndxo2OGgd9jqNCYTWBou76l/wVvb3ZOQXJmz2zJbrW5GDQ81KDF59pef/
tCIk/8N3zP3t3/PwbLqeGt/4vwp5+Lr4yspQTOOl+mfjmxc/cKujvNCL70xo
rCZcXf7k4yP1R3WC85hgXhy1w6ihAGfsueYTmE/r8WKyz/PYn3h9kG/R859M
8Bm3MhPdUYj9JhJ5/X8xoeB1kLjvjUI8f/y3hl8xjY/1Q/WTVoX4UvKwm28p
E8TfVMR8o/laIyiU5/Ob5suBFl2Okz+x+rXt7N4VTNA3u5Vz8b8CnFiihx7/
YUKWXdUO7c4fWGyznbNHNRNWCFcXb5bKw56Pn311r6X1FBn1MJXrO57oTZ55
WE/zRe8P8VAyG5/VqNzj2kjjp7rF9IdXOi6JGbt1v5kJdWq/DiSeSMZKnMKp
Lq00Hjt7tBX43+A353aNObXTcf3TCeVzj/HqnBPb73bSeNc6fnKI8Ecua25e
u9PNBD03q469xfHIsDH1761+Gr8gie2But8Qr8HuzmujTMh97mB0N6Qc3fxk
KHV1nAmVkdv29OdXovZVDmbWLCYYzwWFmrVUIR3b4JeXpmi91uGYQ420n5el
N16cYcL3XYQY9bkOycjXiVyYY8LWBm43J6sG5O89fdJygQmJfIyd+v8a0WI/
FWS+xATF38W8v/c1I2vNvVVn2UnIMw8tcD7WgupiT6824yThZW77Kwu5VnRw
maOeyTIStpj2jXBntaIki1DfMzwk5CevvAVcbUg8N7PkNB8J3RObxg7Rfu+5
tpH/1HISfJ5nnPDDrYjlMqdpuJKEAP1B0aQNrci8WcxDX5AEjq9315bva0Fl
+1Tyj68iIeEQL1ckezPyyrg1pyFMQt0r9lKp+43osOLHHfsYJKyQcSjf8qke
caX0XdxGkqDccKzmR3gtytkq/WqdCAkCEuqnUlA1cn53pooUI6HyFTl2L6IS
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
WEi0myvuF61XyvX7Pb4xTJbZn2gqpvm/Y5VE5vMJvMaVN3pVGQXGiuvY2fom
sczu0BGNctpviwokOpamsfzfzcipkoJekVBR/+pZrPAq+0lyFQWC2y7XjVnM
Y5Xjuk09NRSMXGP+iY1dwAe42zeJ11Owam7YUTx0Ef+Xef3OsUYKLJvPmYfs
W8LHrnEVPmqmAATipVUfL+FT0kHMrFYKGthS2oRcl/DZGtnzo+20XuJzz7HJ
LOGLXl8+yXTR9VWejm29tYiv7dfmMO6h/arPm9fqxgK2H2vSe9ZHPxcW7Ngl
NY+dY69FFPyl+cXJl5/uOovdjNiG5v7R85u6eXpv+DT2FvBX2TFMQei2J1N5
1yexf+467wujFIRksSTEVkzgqE2H5SpYtB+s1TAfVB/Eb1vq7Lmnab/JTBBZ
caoXJ/lfzt83S+ezfhAfuaUdf5t9Yh67SPPHzvripPF3nJ8omdzIJgKruJsd
bt1PRiXmyUtCnCLweWUEajhfgRqLqsLv8ohAxE/PC6vPd6MOlwsDSXwiML9B
cXLIbgD93Tm9t2e5CBz6mPx5PHQEjfY89hQTEAG77pUhCXrjaDpUrFZPSAQU
xrPkcipZaEnnw4ZHq0XA8fzqBQvRacTNiW5+JURAfWjdXwupWbQyvTx3hCkC
/2Qj+FU75hBhbb5KRkQE7ihB56ZTC0hMcsLsjJgIxCR2OCncW0TSf9wT/SRE
IH6oVHeP/hLa5EEu5EuKQLX0v/bhqiW0Y1+89pyUCDyxW1iif+h/AB0fMQ==

       "]]},
     Annotation[#, "Charting`Private`Tag$27732#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUWHc8lf8XvySECikqCamkQrISzhNRRpT9talUlFAiKzRIskJGRvbOHhkf
rr1d49p7Zu89fvf3173v15nP+zmfzznn4TB+rfKUHIfDhdPgcP//PYRomkaF
XCRJf3GldmbFF/+V3Gb7YQA4bNOeh/ky2k7ne9Lt9xpw1yYs1vZkUcY6dDCk
2QCOu+o9/5//0DjT881cvw/grB0QeyHUBHmerjmaVvgRsAc/ssdfW6I4bt0I
XJob4PLET1Ln26JSkUV+1chv4Cxf9WjP1Rn1yH7Cx/p5w1A1nebbM5/RNg8d
jwPeF/id7fDNRz2QmwDRKrbwB7C8i2vykPVGv++YUmym/gTqOwNCZ08EIF45
wQcc8cHgM3d/IazhJyp8uB8gHxkKrYfnz4hbh6D7WjUDb4LD4GrqVqPMwS/U
YeB3OcwvAqQL+dJP6kWgjJu8oqOVkTDU+t/hyNJIZCPyo88G/xusCn3bDf/8
RpK3N53pUBRgnC9wP99GIQrQu/i7MBquMwYdMaeJRnVS+Fqh/Bj4WhNU5m4W
jXxlL5vXZceC9u2xlJM/opGWvCejQUYcKHUF7w07RCM2paXcldR4SFHFzZhe
jEZjjzR03JMSQErIlXfuaxRKVi88YI1PhM3Hv95YJfxGVv+xx2REJ0EQRej3
vg+RSFTv833ZyGSgftX5s+98ONo3nJ7t+ZUCXXFaQdGZIajyibLv6+BUeB5W
YSBaGIg8n2cLUQSmQdBesUyYpB9SeXm6J8jvD5TW5IWouHkgOlFAgffSYWjx
08auwge0WGDJMFyZDs4MCjKrrw1QbjExxxqfAS0VBuP+UZ9BujJyP7wwC0S/
pmoI2UfDpXttD//dyobIh81p7AzxQFN7OPpmfjb4yO7lfQtJgjl50TVH4Rwo
EuFaUziaBi0NpvdqsnNArbTDxPtPOmQphQUz3syFklNBKyNSmRDY0jyjm5EL
PqoFZH6kOHYq5JLxfHkw4htIk8qUA3rtgj5LqXnwa8iVzUouFzCNZyO3r+XD
0pAnn456HnB1BQt+ScqH3vh+3DXBfKDSbvjSwl0ANKNvfxwM58N0737XmfgC
ePlj4p+aTgE06t24+vTiX1hyo9w/E1YA6YOPHf9E/4W4zDOVhTEF4G8U2LzF
UQi5E7c5LlkUgM1oDcfdyEKgo96MJO7lg/bTnTdebEXAl0G7NKCYD5KT16u6
fhXBxLNzkzO6ecDxwpDlwtliyDbGH5fnzQWKGT/TV8HFYOeWnTpVlg2TLyuL
8phLAFveOqtzOgvq5jeOkQeWQJ1zlXuXcAakWfAYKTIhCNI9S/lWLA18l3Wz
Av0QRB6mzpyLSITvJ0PES4+WwhO6MrljIjHQmvH5vJBKKUR+1n32tv0X6Ezr
jrP1lkJpXlNYcu4rMNehtVyeLYMxc4OK22qJKGtjXfXZDTxQfHA5QnEiHW3+
GBHus8YDoxc7xSHTLCTO33T60V885H6hmTOMzUUuDQW7lft4oEl7tfK2sABV
PY8dFJMuh5+XT+DLo4oQzWFf/B+3csisVpg9q4KQ8m+HWK6GcuBRfED531Ap
8pd47h5MXwEeQe7sbCtlqLtb1eyYegX0MZH996Ufj9jegdLH4Ap4OJL0/OSv
cmTMePXGZn8FBB7Pccm5WoHi004xveKsBKmWbQH81wo0K0++MWxSCUN0s8KM
2RWIf3KuWyO5EmJuHD2KS6xA1h+7i+oXKkHiEIZZPqtAf89XRmCCVXDv1Xvo
my9H+4Xprjm2VWCc+ihTEcqRtNavpzzFVQBty8Im/+GR+6rb/Qiyaui6LmX/
VLIMNfi8ucokWw06+wbKMIQQw3WDY189qiH7WNR13EgR0qiVX9prqgaN3jdZ
1O4FKOSpcLvViRqoYl04+6o7Bw2SceZNatYAU1LlOcWBDMQVfjRE91cNsMf8
kLaDZPRcbMuBMFQDLCyzk++Uo9CyVYtU4YtacP4sWrN2UwWEjxdd5E+rhUi+
sgt34/3BPjmeOna5FtwLDjUP8MQAxZhTk5d9HVx4D3pDXVkg52yacai0Dm5+
zA90CcwHL1YNf1uKetAwENiM5imG1vw7NnP360GlJuCbSEUpMKtf1zb+Xg97
17VcMwl40F1ikegk1ENZeNIcPq8CIr9TsCueagCFZ8y3CyyqYPzKInmZdgN0
j3qvy25UA09V77hQRAMc9vT46yVbC6+Nq2uSRhsg4Tj9hZvadZC9n5l8nrsR
JoLHAp/w1sNmSLiX/8tGoHbIKppD9SAh4mF5JKMRRnS1rSXpGsC1zVrNaa0R
NkrOiVozNEDVayORlVtN4LybmGHSVA+0dA/OPHdqAuF78C1aqh4eJoju9eGb
AM90666DeR0E3OUaekTVDF83xY8eUq2FnqHj5VUKzWAblB1Mu1wNbI47sbd9
mqGgvHCYW6kKHp+edE9vb4bpLOX2BNMKaNf+l+NH1wJO8XDwXQEP69wGlxt5
W6DpxAWLYzMIblfK00i9aYF23mf8bNY5QN8e1yzyowWaS/8MOF9Kh7ER8oDr
WS3QNVm3IXw3FrxwhedPr7RAKcVXQU8KM/T4OPP4sRME0Mr3q37eFoJE2d4k
UdwkgIOI4IAnTyIauX1VaNGKADWO5qrM1/JRnrzb9rgfgcQ7c3ZndTHy/G8U
9WYSgPCMu5cjuAwZPofPhFYCvMZnZkvxVSAhm1D56mUCZM9cnGWOrEI0XzaO
FzO2gqKDgF3aeA0a8FftyBRoBZoXs3JPt+tQVvSfkASVVpCXt2Hb6WpA7pm0
huFWrcAmslMU6tCE9MqeXfT3awWpyLNis0PNSKClfPprZisILqxepHVpQVSD
59M/tLbCR8/UOy/mW1DfnL219XIrtAo8TBQVIaCM3U4xM8Y2iCu+/sRSm4C+
0ArijATawP2qlLW+JgFpn/Gp1FBpA8LVN8qR1wmI78qsh6JVG9Tq833l7W9B
FKL3H0r5tYFFd0GtlkkL6pKNOSma2QbR5027vv9oRqnquN7rrW2w9TgxZZG+
Cbk+0Y28sNwGoUfWKT7fa0Cab/KfnmZsB8GeJscwsTp0zZXp6nGBdngRuyXP
O1+NyHwtFilU2kH01eHoSpNKRIxoyNm2bAfFous5rol4lJzGbb/o2w63467a
nLJFyLn4EzaR0Q6mK1ZOB/cL0JVe8XrCUjtY3WGLYLmXgBxOpQ4lWHaAaZsc
d9l/f+DRxSNx4b4dMOF8vvx7UC5cEnxq5p/RASN1RoMuRsWwI1XG70Eg4dM9
3Ky7ZdDy6Nz6h6UO0CLSvi65VAmxhu8LrRmI8Ev5ifO9KzVg97rD2ewGEdiY
S6SjdutAyemGrNEjIkjQh3qcDGmEC9+/02paEkFQ8TO72k4zbIb+a1H0JcLK
62yc7FECNCTJBEplEOHu4HE5sS0C/C74rSNKIIJF2+2+66gV3tXssfMuEYF8
kbebRa8NFDr/m7jA0AnCM/eq5QhtwD6Rk3z6Rie0Pjx1yvRMO6ytMlgef9QJ
683D7S4i7VB3yFz4sGUnzHPt/ty+3A4RjHU72z6doJBe9vH3TBu85bhUtpje
CRSRZ2wSXNvgPr/rl4mWTrjc+OBR3FwrnIMBhb7FTmj4TP4o8HorLD8QY2il
7wKzeGNPojQBqnQDidX8XeA59PTTRYEWCDVbDi1+2AXMX2rTJEj3hoWdklGW
RRecuistYA71IG8unkDt0wWEffKe/9/DF4x5FvT+dEHnL2eFryKVQJSjdKSe
7wKmt8UFXA1FIHG6JEjPrBt8Eidd3FzfoVNHUwYzPbrhV2RNvrxZFFrEhVyi
TuqG73/VosZ30lHMlHV25lQ3RJYfXV1jLkVOfY93qKh7YMajMk27pBxptjyS
0rvcA2lHv2Tdx6oRTf71FiqTHvC77rp0Kb8RjSWfZdb73ANmhXZficotqCTi
iH5mTA+8zI9Qp4gmoKAfGzFUFT0wvn/c4GdrK7J0G5/RHe0BtbyXha29bUje
vk0gk7yXdN8ImN4vakdcr8veU3H2gvnxJMpByw60b/ynVPdOL4QQlGqI2x2o
SyOMKtOwF2SNeiob1YkoU/6bEpVzLyRR/7IodyGib5LvA3QjeuGJhxucdSKi
JwLP+jJKeoHO6dzHcHkikrykfoFqoBeUTC7pOU52IJYz0qa6e72gT32mW0m9
Ay0fvZGRwdoHE8brF+gD2lED2flNSvE+MFAQHeNMaEOxa3Sgq9MHmaOB2fI+
rcjp3/bnDLs+wDkeq0pUJiCt/qkGypA+UPyubvCeQLpvCMQTugV9ECSZNpVU
1IDoKiu0M7r6wDvjk+/VZ7VoIj/zN+VmHzDZ8sgTOisRSomc0mHuB1qbRIP1
k3hk5e/wjlKjHyxTeBdLBbORortpsY51P9R8vCTiWhmPLjloUWT490P6JhfT
1TffUPdjQT+dtn5YfSP+cUUgGTI1ObvTl/thkYFaLY46FzwV6NkpGQfgp5jA
++ZHpDnu5mxq+sMBeJxGlHE7WQ1nLvesHrYYgNB/g43GDXWwcqbmto73ACgG
Bjw9pNQEDcdyXdPTBkC/XnBQp7YF4shjag83DcDzAZqTsXKt4LzuS68zNwDh
p5RU3GPaQHv6g2Y63SAIfno3sEck3WMDr8IPXxsE7uwH51QGOuBoq864tsIg
WO33pF/NJ8JEpdy1dNNBMGZ+0udj3AmlBSJvDnsMwnY2K+tsbyeEpF78q504
CFeZOiaOX+iCt79PkKXXDMICZaXPLZEuUAogu394ahBmad7eP8HSBf4VNvdS
Dw3BN/9M7pzKTnAumZ/WPDEEXqtBurFYJ7zKf+pFfmEIusPd1Tq/EoFX7hE7
meAQnDOR/Dbh2QGL3eKZB3eHoEu+PFLzv3bINOW+u68+BPz+74hkpD7xducE
cddkCARjnjjf0SaAsOfBsx2bIdBa9qwZvNoMG6wzW1vuQ6Dq9CguS6Ue7CTx
5zaShsDTjs35SgcexJtT/6wVDsGmk5Kp1bci2DMIvrPaMASmOXd9m9iywNnF
4unS/BDgOC/irmk/Ql8q2FJnBIbByjVZ3/Z+ObqvTgPT0sMQ9vUs56uSanRk
Yq1lSm0Y7kZ30xJ36lHdu2HjyafDcL/s0Mr8WjPypGpcHX83DDF5o3EKBAJS
Csr/MuY2DC5xhWzCDm2I/koMy2jQMJQw2xhbbLSj1gLvpOHEYdjsY127AkT0
Q95efOjvMBj3Dd9lfNiJ1HpNmgbqh0Hf7aOq0eUudOqlimF/3zB4dYZRDuK7
UNeuxHLv3DAIKIfT/WPvRiHfr3zq2R+G9g5/WRusG+mynTzVfXwEgmZmk9g4
utG5P7iETvYRyG4+FMxY3oUGYPYW8cYIkOf6BHOR/Ee2dNa3S41ATNzQN7xS
JzI2KtdrUx2Blsg16ZXbRHRhOW2B8GQExL6F/X601I7GXENcWqxHgHXxyzVK
qzYUd+LLieYvIzDIf10GlRHQ8xjL2MafI+D/Q3pXubYZ8QjpiTQkjMDp1Kcv
CkvqUaqGoE5t3QgoetCqCQ3jkfnk+bnq3hHYvlwqmXK/CPHb0n6omh0BmbDh
iZ3PmSg7eCSq/NgonBnTezjtagN/+3ymi1VGQVkhTcbrQQU4vHJwKHo8Cpl0
AbmmbTUgsf/sWOHbUXhMUdZ0mrUR9r1UIws+jwKTo26jmRdp7joPAvmBozB0
c3S99mkruKbzVOTGj8Jq2sjW5+PtcPfOKY2c/FEQrAjst3DrAMpWsqmsWlJ8
WqvirloiVBvPvc/sGYWrl0J4/do6wX2lizZjZhR2mdqVcVFdIP+pIuzP7ijM
Jl55ffZmN9CdTOdLOzoGyfo3Bd997oam2NCyFLYxwN0svXMniNRXhN1Uk/nG
gHjui8wDUp95VG01noiNAX26lwXtQRcwaunbJDwaA09dHk1PtS5on5I7Em88
BostSrcdX3XCQjC3zEerMbgtwz8vZEQEGgUqFwPXMRjpttN5y9UBF3fHi277
jUEM94mx+YI2wFIrNpmjxiDEzYGhlKsVdPSjBVczSP68+nMMnrfAu+OuFi1l
Y8DzNcNemKERki1hyn14DNKenDl8ZbACqjjZuJ4ujYFltoagv1MpDLXtGtwh
G4fyfevW/rU8OCX8t3OLfRwatpTUj/gGgOu2YLWp4TgMPH5ZM+CLUFjyiUP3
LMbhDHPiVU7uCpSvuyx5wXkcnAP0njhq16DWowS7A+9xyB7FTk9oNKC5kj+5
vRHjoD28eliPpgVRW3gt5/0Zh1X3N0pLlQTEyfGK1x+NA3Nslfgb7TYk0apg
atE8DmrkZ1YdKtqR1keeOMXBcfj0wL6akoyI3ggeGeFeGAeiqWTdq6OdyGt8
8tzhg3H4pnr4w/vJTpQYWPXf8LEJ2G2nCjb83oUq7sUGFLNNwKdM5cqGvS40
uPmREMw7ARY6DW/6RbrRdqLx0XeSE0CZZBRy5XY3YtK5I6eiRJL3GpmXUnUj
Pjr2z7z6E8A/K3ziSngXki/eL6UxnwBLe3UwOuhET8z7dyccJ2AZN9HTc60T
fThfJFr+fQJaxXvDbLmJKKQl5G1E2ASI8b3I+brajnJc3qfbp06AsfuWXcWP
NtQioDWrWTwBmx4N97EjrWhmVJhbsHECjrCZ2ZlrtSDKgJNP6PtJ/juqH12k
aUQcsqsRs7MTYOS68/ztpVokvtHaW7NL0s/j1Dc5Voks//NRdWGdBGOughGz
+nzUd45WellnEhIC3Cqf7sXBRtM/pyazSXjlHuUwZ50NjM41f5PsJyFJ8a3P
nFgxXL8Rv/7l2yTsLnNEavfj4f7IZ4HHoZNQpcFjb71E2q9+PDGH5EnYqZou
wBHqwOmudNLZwkkQC5XH/XnTBEFrHBMbdZOkfXP+9OBUC2TF4TjbeyYhxTyR
lYK0hzRpDuqlT09CxCXxS0dIc/4UdUmw5/Yk/EVFz49SdsChv786ntNMQcVq
Y6kfLWkuNrNnkDkzBbQW2bOuQ0S4xar9gINnCoS/nuu++bET1BpFv+7dmoIP
t+O2TZc74bUTc2W33BQ4DmmlGlzvAg++dVzuf1PgufE9oOhmF9jZyF2dMJ2C
lgA5KpODTniBfqmfcpgCpbVUCz6vTtCiWvwg+30K5F8MbrwZJsJ9Zemkd+FT
wNBD3XZppwNEfwa2x/2ZgmLZj6mN/e3APfhvn1g6BTvn5Pzfe7YBy2WJK1St
pPz5fziW0LQC1WsfVZHRKbjjyvIxUbcF1nNHHZ+tTkHQlHub2VHSHr0vnPDz
8D/YlfG64nq2Fqq8+nc3Lv+DkmErmjrvUviUxhOX//If5NN+WXW09UJv1x1b
phxJ+oLxgj4Xk9BjScI2i/c/2CSn3GHnyUUqX7guykX+g3tz4y8o90uQVJON
8vuMf5CjwDJ7qqgcCZyqf5+I/wc61L8+xZdVI059tpjutn9gqMtNl/q5HjHG
WTYdGf8HodsbVB37TYhsvmLz1vo/oPKEMUVGAloUYrlgSjUNvENMlck2rWjI
0exBCMs0ZL5g+8mXQqrnyhKbuivTYGKCeA+ltqPSo4xR22LTUBqd8q7HpgOl
qz9t4FGchlHNmqwNGiKKCMtf19abhnVlQSW+p0TSeabl+GZOsl9yZJ7+TERO
1w0UCj9MQ1JXy5FLr4jI3DrTesZnGu6qXXO2PktEesWHI89GTYNXQdTMrm8H
Ujz8X51C1jRo18Qcfd3ajsQfpKzaV0xDr414OdVgG7oWcMCW0jEN5x90Wnz+
24pY+1Xk+iam4elsEwfHcwKiuxj3hm5zGsR0zMZoOpvRzsutMPEjMzCRRFXg
7tuAprMVa16emQGfYI7jQdS1qGc3YvnX1Rk4TvflWY5MJfrrKXtv78EMrHby
MXFZ/0W2KT8Wi/1mQGtOpmfkQjg8X504Mx89A/yG0eeg7Q9oiovJsOXMwAMG
/NdmxnyQ/fT9tVLVDFTH75zdXUAg3DAU7NQ5A2KJ66WlueVwiUmwIm1qBryR
61Uz8Wo4qes2P7A1A+c76bZ1neuAIqaH5TjtLPzXP+L9x64RVmeuSwPrLPhE
f0jkYmyBsZsur15fnwXBmSk9m9sEaLNv/xkhOQtDh4gfEoRbAV9+Gd+sPAuX
fDxPfydrg0xa+9kDw1lI4eN/Yh/SBlGqTaf4rWbBdL6VRwnXDn6hHHcMP87C
qlBpnQlpD3cdfWvm4z8L2Sw8Tan87WB5tSagNHYWGi+f5/TbaYOxp2POkbmz
oMvSNqMT2AYakbiXztWzcPgWh9QkKV5ND6umYdcsnDRCVymxVhA7eUsK+zcL
6bbmppsqBEhRVr/Ovj0LKkbuK08kWoDNw5IFRzsHKnSGAzEUTeBT8f3Q0Nk5
cDutFSchXw/kB4nz6NocdAQJG82q1MDbW1XdERJzUMIjEOpL2scn3oxUfFCa
g5XkEwoujWVQN3UmFCzmoPofVhZkkQN+rd/uoaw5MGRyiRxai0AURxMEIirm
oMHQPYL9URp6d6/i3IeOOcCcNzWKWXPRlMsQtcHEHOx5tLPL1BYh7aLdFcmN
OVhs3qjm8i5DDessg2zU81At81PV5ksFkrwhVLfPMg8yeQZDJdLVKN3sUc7A
lXnQ8bIpx5fWIs64V5ElYvMQaNt4Y2ejHvkPff0WrkDCt038wsYaEeXZuHdO
uvOQ+F9ec5xrM7JVxxvpv5qH3YTtGstnLWjae0BR0mkeBE/PcduPtiDdum0R
Nu95GHL48StVkICaKJgv7EeQ7JU2x7O1CQiDm8cG0ueB+13D9SR1Asp8r7xV
XDYPbU9oYhkvERBXttlYWOs8vPUZYepvaEGB827NjqPz4LPX/FRfgdTfr8T8
1VudhyCaWJUQ2WZk97g0VuLwAjxy9X5um9qIZsP6fM6dWgBB9/+yuVvqkX7X
pv3epQVQePI870x2LWphPPmsX2QBeIFBTNGgGkk9uKFSfH8BRky+vRHtqkDZ
bg8kwv5bgJQIJdaqi3h0Cf+C29F0AWLMvoi+CC9BNCJR++KeC1De3y+9EJ+J
2thPJBc1LwD3IX7x7cNBIKvDF/hraAESFArYq5fiIT9AwcVhaQGOZAjFKJZk
wMmpm8K8ZIswsXHk+KZ0Higdxl8NP7IIVeyxD1ccisCN8yHHMcZFoL7VP/4r
rRRKYeCU0xkSZpdQnZrFw5buS7p5zkXof2RLeL1aAQJ222T6VxchIPWRzmhp
FZj9dN9ovLkI1oV0p4OUaiAm+9SchPgiPF6VS/QOqYV+QsxI6t1F+FF4wtcx
qg5OLQh0nXuwCOrDd+rqntSDMl1Z43f1RXjBavXy51A9uF9RLt/TWwTFmn+W
f082QJlsf/4rk0Vgi/gbjigaYPuxWVq/+SIIV5oFjKbVgyHDim3Ru0Uoaqrv
M+Ssh8oSO+lQp0WwXPp0PFqvDnhekh+z+7II+K+iYdce14LPaY8uLa9FuEYT
bD8vVAPrVQzRIoGLcCja7QC6q0D3bfCrU+GLEGxONtHxsBLwHByia7Ekfwyn
YvIjy+FycwJ5e+oihOv7nRIjnS9PB/7GzJxFmBR8r9GRg2D5Sv5P3+JFeD4+
Ls4aVggln6qvKTcuQu21zIX59UxQE5vQqJtdhNI6jx/VNubwd/IVR+LqImA4
MSat8m/ofMDajNsuSa5H82b5QgT6JOWYa0KxBJHmErMt/+LR9AKFiwzdEjgk
RbTdnPyDHoZ5KnAxLQHLpycRVMVZKFee6dQh1iU4MTPUVS6Xh1g3Q4eGLyyB
Vb8RC+2Pv8gl9kJy6dUlmGK5jSP4FaMJlWTriJtLQBXlkTTOUYoUcTcxp9tL
EH+K2634YRnKTP1Loye9BEscU5mn1fCIRUeq47bCEjyOSTb35ilHTtR1EWdU
l8AUyZzhaCtHozmPTLe0l0Dx6L94yQcV6P7jbsEu4yWY+OZBUxlUgdLojQ5y
TZdA9+zNmN2cCsRUMlUbYLUE3b5+hYGxFei9mYX/W7slKJB9QZ70vAINsGzq
q7ougdJzF9E0XAW6W/XhioDHEqRZrGy+e12Okt5QrdL7kfJjUiy7nodH9Bze
JQvBS3BquVtaoacMvWs69bXp9xIE3Zpm9uktRb324aqpiUvgLnwyf8seIezK
JTbPjCW46UCGfhwpRnHE1CnTgiWo1z/ZWmTyF1ndKHbkrl0CQdxpdYOUbEQ9
2RsfPUXC9e+SUs0ikbn/YyvXRZJ/MeqQE7f8UdudGXGjzSVwdgoKHGf6gMJ/
bRPYqJchYe/zlrCwD1DIu/7aO74MLZyflRo8QsF048izPuZlUPsv/1j65WgQ
Ujm9G3x5GbT2Pb+wz6RAyEFklS3fMlB/scPdCEsHXCq3r6bIMhQ5pNjsemWC
iXa6jjAsw2EZ24rFe9nQQCV66eS9ZdhVfnA+uTIHBHLQ4orSMggtPblvSpkH
P43vFbZqLMMluS6F40fyYfd48+cM/WWw93eIZm3MB+NijYc+JiR9bgWUpVIA
ArksjKdfLwN8l5juDCsA8j89bb9tloFOkjaTPaoAWuN/BfA4LwNNz1YotXEB
REXqa2a5L8Plf2dLyobywSqY/bS47zLMPydglznzQcpvpKcieBkqneIupvLk
AeO3mF8PopYh6Sz5d6WDHBj5aKJPTFqGlPKZPLvYbMh04GY3yFoG8RigJLuQ
Ba7W08OThcvwyHfm5q5jBnA+M3+61bAMT6JoTEzrk8FY/t1L1oVlSBedEcsu
CwIBaVHe2I1lqLGjpFfk8wVy8e2F67gVwDJbQokZH6FVsCgjl3oFnL2ixVKC
TCDqutMbYFgBnEHKKJuDObK6hAnVnF4BQ4lDFs92PyKp8+QbDzlXgH6i6tiG
mjdiZKnI7+ZZAdu9gJjrNf5ohP6LnfHNFUhnXznm9iAYZR65Lz5zewUiMzF3
7GYYciWn2X9zlyRP4rRREItEKjv1aFdxBZ7k8pnGuv1GnKvfXT6rr4C296uS
epcotDyrLH1MfwWEUXYuPU80wo8zHP5psgKy2s/s5l2jkd9AW9X51ytAwRHn
vu4djYw7A9wTbFZg93tARLF6NBJo0ZS/4bwCFe0mJhXdUYi89jTdX/cVuKba
KKDHGYVay3obpXxXQPX+IwVv4d8o6m+Yd33wChx99+b45rlIZJVl8EgtagX0
f9v8UysLQ1IpHCf6k1bg/tmjwWeOhaKRsNjA+cIVWBTad4iXCkCZgc+0bCpW
IMWa7cyIoh9y9b5yBtdI4pOf8yC30gupuM/0uneQ+O54dOjOla+I0yU1jGFg
BXxW736IGfmIlt+/NgiZIOlnkrunnXVCeKsbHBcWVqD0JfsDXndr5Ge2MpK8
QbJvNXh40fwlMn6SEyOIWwWcPbP0z1BDJKBnY1JMTcIUavuHVJURucYtblkG
Eha0rujjE0CtSjv/mk6TMK71itBnYknUveJkTU4SZm8TiNrlRFbYh1dDPCQs
XIlTyZNFUrfu8L24ScJnxhu8+7URo8ChpaXbq4DV6K5/VHiORngqM+3ursLQ
1711O8o3KPOC29tDD1bB0Hav9q2wPXJllRP2VF+FRRVzykoZV6RyknaTSX8V
Hp400QkwdUOcxxoLwkxWgf7MowWPeU+0TOltf+n1KqxOvHaj0fZF+IOHEn9s
VkH8A9Pb1gf+6PFSe2mp+yrYqq+uVlwMQYZ2Ppr5Pqvg+fh7wdm/v5DuIcX5
P0Gr0F8x8XuCMwL950n1OT5yFXSqLhzhToxEGifLz0YkrMKkZcYR67DfSCXc
KTMwfRXCuVgeLzyLQsqXxeS88lfhz8fCKm/yaKSYvjb4uXQVbn7/c732WTS6
fyvjnWPNKnR9mpAP94tGMviXR61bViGqnOdzjlM0klLgjnnZtQpcOIZbZtzR
SLJ9VOzJ0Cqw3fKiGvGMQrf1Igg6U6ugGEu9Q5/0G4lOaD9XXVwl1cMXlWan
SCT4+tSB/OYqiO5s+RaeDEc3NgkBUrg1SM+/YtYTFoJ4Xb5fE6NeA8M63ta7
wYGIh0au/Ab9GnB/c3/Oe9QPXf5BoX2FZQ2wfrGrxmQeiIu1dJGdfQ2GdILX
j644IvZYezcW7jXA4U+cCcVroXO8Imz0/GsQSR4q/oHxDZzJW86mEl2D0p/8
wntNX+BE7YuR9XskewUjfOnjYKBXufh+XnkNYvJ3n1A/iAS63qHjE5prsKv0
z0B1Phoo5zQlOp6tgXm3Ip71bDKQvzvR3vB6DVK0A2h7fNPgYL/JtMJmDbIM
DtnkL6fDrpsHWdGHNVh4b3Mk7XMmbNLLBmW5rYG+nlJ2+G4WrAaT8SV7r4G0
NrWSk0oOLHEWV0b9XIPlKcccK9dcmE+21Q2JWIO0zz5FI255MC0ouOIbvwZc
vreTPunnw2Txwtevf9YgZEaONAoVwJhsMrtL3hpkM+65MFsUwFCzSZ4tWgOL
PtMR+5gC6NfiVLKoXoM6R/EsetJ93zPcP/aseQ1WKWoyuzULgGgabG/QuQaj
c3z1r9vyoW1FjVFzcA2OP777gfp4PrQ40CcqTa6B/fn7HfY0edBwuAFkF9YA
Lr1OvF+VA7VebkSJjTXYXppQ/ymdDVXM0q+EDtZgFl5GiX3KBHzk/qHrVOtg
Xt65lOaRDiVX/oZwHV8HxV9XH/Flp0BhpvUNVuZ1WHwo/dN6Nh6yK2b1aS+v
A24uYfJ2aAhkPEhYI+cjyUeoc+uue0Ea8bHntvA6YBWhBq7VzyF+qqfgn+w6
TLF7i0xPBKAYy8CHw0rrkJ39teyR1m8Uuf1osktjHdzFC24x4ONRCF0tU43J
OtT4Jz9Tu5mJAgM+JSPzdbjxZYp49k4O+sGGSeW9I+X7QW3zhkA+8uTPex33
ZR0ub6lGukcUozqBzglrr3UAembTcFwpohba0JMJXIeXurEKX0+WIVkR5g6m
8HWoV2oNNKXFo0+3RBTHYtfhcHd4ocEgHuFva5Znpa4DUfzPZKVXOcJJ2oh9
zFmH/MuiTneYSfsW9jNDpXgdgtLVKSrfVSB7qTxuzsp1WJHfNf+ZXIHy73ZG
LDWsQ6X8Zul/2RVoXXbjVFn7OjhJj07R+lQgQTlmL5++dThk4N9CL1mBrBRE
DhuOrYOctIbvjZJylP5A04Fvdh0ID0/hI+jL0byyzcr+yjpo/Kglrgvh0TWV
n6ZNO+vQyf7MQ5yvDJmq5Q2HHdqA8k6O8NIdhBI0OrVe0W7A4nropzf3SPOm
1kaz+IkNOJHLqkAn+xdx6TDfozu7AR72LIW1u7nISE+kpJeTZP98eTvWMguF
G2gKJfNswEvbJf+fGn9Qn5FNip3ABnx6LbN0wjgeaZnkhZyW2iD158CnGJUH
CnzeyfBPjoRHHvoOiFlBu+mGe/6jDdi8Vnhu1iQQHr4WsdE02oDdy7IGzpdT
wctSc/7Siw34qxO0d3AoCxre2Dxdt9gAfEkYj5V+HtyzzVMNcN74//faxxJJ
CD7ZddY9cd+A3Pfd2QwVZYB32Lgj6LMBwc1zMWX+5YD7wFxwKGgDoo5438mT
qgRJFxH+togNoEtpTs+rrQKHj5rxUfEb4DaTttR0sQb+frZhs/qzAUVmW03/
qdbCptvPgDt5GxDOeVTsuHIdCHvk0TGgDZAKOL5Ofaoe3np2fhyq2oCGekfH
+th6yPTa2P7TtAGSdz2PPtith0UfZqsPxA24KuxTscPcANd/iPxTGtiAyPfh
ePxGPZgGaBqyTWxAjGeyxLHQekj4adM5N7cBo9klDk1k9TAR/FOpeG0D2GRu
pr+/Vgdcv/IqPfdI+XJ8jaBjrQXj8E5x3cObkCk4epmmtRoiIzeyrh7dhK+Z
ZF/fP6yCgSjmqztMm8AdiLmMBlcAa6xIVB3rJjyJGbmtlIEH7XjN0yFcmyDb
/odZNKQUghJtfF5c24QPCvJhnBlFcCItz4lanCRX7BkpasqEh+mda53Sm6A1
UXDUlzIZvDI3XsYrbELRC3qRuBORQJMnoiOrswn8tzSH0656IPLSPJFPdpsQ
bXX3seyhvyjpKGPcnusmVHhz2W2PIaSi85LJ5tsmmEabGtRV4NF2QpXr4o9N
uMfV57JtUYmi19mXXvzahHhDyfc1C9VI8a69wWjMJgz2Z7U+EKtDq74djbqp
myD+2XrgpHwD+jXIJ07MIclvKVXwnW5Cd697JCmXbEL4f0avIaoZzdqNsdRW
bUL2k78+shYtyL9G0k2qeRP8v34vPTLVgsRPBa8Vdm6CpcLAbqUwAY0/Xnks
NLQJSiEKMeI6BOSV8aA1bWoTXixfpg1SIyDhg3iMe2kTbl+pLzXnJKABRfI/
v7c2wcFbDl9Z0YK+hOieO0u+BRZPrvkxiLcg3qncb/40WzA8I2vwkrEZEYUY
to+e2IILY/wdtDqNyOmj2XO3s1tAgzHxOKnXo8uESiKOawtOst/gYaCsRS1s
7DJ217aA106jqMeyCtm+tMtaEdwCeVm2nNTwclRDxeczIbMFb+9tmAql/EUW
6l/3DZS2INlUOOXkYBZiiR592a2xBRMSZnjB8ET0QjJIruHZFjjv5RgmgSPQ
WJMdyvy6BWNf+zk/XkSQidexvOq3BfvVTvo1VOWgTZ87GBOyBeD+wElGvQrI
9emV2KK34GYg49JXq1pITjYt+pm8BbadoieVNBtAbauChyF7C9iJd6qqd5pg
V/Z8sEfRFjzQfplpkNICMf7vqSgqt4CDz7+akEUAxZE2a8fGLfBXr0584NsK
q3y8Y+sdW1DV80ddQaoNfjm6q1gMbIGgeY1bWkUb3K0fKf03sQW6y6P7Dafa
YY5Fgu/xwhZ4GmXGvBFph0CTn2F9G1sQ5d/sOX2xHSSzl2g1cNsgsE0s3hhu
gwkyRbtm6m3YDqYtHDJrAy/luKn7DNvAOqReY1rRCsJhOE386W14YxM53j1L
gIFp7crbnNsge3fZZX6iBb6I5tzM4dkG/u9bbeUvmoHvy/Eo3pvbMF6nvozP
bICuthf0Cbe3weIOFR/Dn1pw5qhw4ri7DQS5+gtZT6ugpchWh0l9G/b3uwzk
pEvAlqat9rveNtA8anStscgFdq3rolQm2zC1IdSUnZ4CFivDTNvvtoE+urKG
ptUVMfAoNA0GbUPFJbaiq6gMTVBFMNREkvITrR1K069Ef8eX1dITtiFS37H4
SUcN8i6XDQpK34a3jxO5P5xtQE9+h/Q6529D1VubJ95XmtGtD/NsL0pJ+lP6
3gq7LeiYnpTxo5pt4Pk9JUt3pxWNigXG3mrZBuyzFZ7RsA3ls0xPcXSR4gc/
ScvVaEff1yWu0QxtQxiOuyaGswMZt/u+Xp7cBrqzgjZjZR1IOHM8s2dhG3oW
XKP7BIiI1ufWOn5jG1ooI4s13xLR0Kvvt5IPtuFG2735L5+JKFth2OEH1Q74
fX7xlMKEiL5eESq1P74DI88f4NtPEpE+1ddDT5h3gC04yudZQAe6Od4nq3h+
B7QfSXcFjrcj6nJ+D8HLO0Ce64diqdpRf+SnRla+Hfh89ZWU5F4rynTqoj8s
sgMKQvlk5jUE5KZ7TW1Ocgfaick3osxakK6Y888O2R1QcxrWk2lrRIfXL7PF
aexAzCSTvv/hatTTZm/kpb8DPGobhHPy5SgtoznmnckOhJWsy98oK0Far2yu
3ntHyi/sSC2TfwpKGasSnQrYAS3tk1l/l7LABX/GoSVsB5oyZlU3/isCjUhz
lB+7AzQnBdsbZPFw1QlP/jt1B0p+MVHfl6gCnO4p2a85O3DgYdSQQFUHHbdM
v1oW74BbqEWAa1gjJDGXNPxXuQNRAUkdL+xbwGmNgV6qcQcGI61DaClbQbXt
qSpPxw6sRuufv0qqd+6MgkDG/h2gDnhbHxrfDrteR3u2x0j56rddc8vvAMJL
o3OjszvQt2Px5U0oEeLkcwzrV3fAUUgiUE6pE+y5j8Rk7e4A94vjX/5r7oSH
lHqToRS7gDmk7+if64KLY+k8n+h2oVZGQvKTSBdsl1GYv2TahSHXCy+ekOTN
EVoZaqy74EHNFE9Hso9xTFkV59qFhXIzy13FTnivgxO9eG0XYp9WtnIFEUHp
lpr9UcFdiNMJSZ3I6IALzAkla7d3oYHyGA39r3bYXN0hG5DeBeWlaxZdWm3Q
0KosU6WwCw7CxzT6pgnwOz3aPU11Fx6+1U5mVm+Bd14b9YE6u7D+/f1ZJNQI
8i8Vjn94vAuhyerPcj/UwurllQDlN7swjM3zz5iXwf0IqehFv13g/6iZcePs
Y+RW09LvGroL2sL8EodnYlDVkj7LyZhduDbCLMAjmY1k7tp/v5VD8j8o+bD/
Zzn69OpITX3xLoStfMs9OFGDKgJ/kutX7UKSQY5pkXoDOlR6UWKxaRdiwvRj
j1xpQVL/smxcO3ehTPDpruYBAbkwSmUyDe3Cqt4PK/LENlR6u2U2bmoXyO2c
b2RydCDcU/3Lt5ZI+WiX4r89JSLwmjWq39oFxy7Bu7csO5FTnt0vPfI9kEqf
l12504VKhqg7F2j2YF+rE3Pv6EJ7R34yuJ7YA7J/xx2NebqR+M2Likyse3C6
qdvOE7qRvW7WlziuPZDkWknLYupGfz/fKRO9vgevlr5EXEnqQttpzTt1Qnsg
95ZNcxTXhW516QnrSZL0E7X4bM50IluyWYsF2T0Q+/tpk2WrA+Xz2CW7KO9B
5V83N/+IdrShSj1xQmsPthyT8mQZ2pCwYyB7nOEeEFT3l5hUCMg6jktH9MUe
3PjVFVHV0ISymzMD6iz3QLvDYIwxrg7d5GymWXDdA+Ltm6efBJQh/mqqNZHY
PViU+9uf+dIPXi8G8NWl7sHUhHyypWkqpJ3mMtXN3QMmOG9DkZIP119ig87V
e9BaL92mN14JLwOaTp9o2YO6qiNeU4Z1kFKiqxbbtQf5kqa7t0OaYGZy2ktk
mMRf8sorGWkC8DC8r639twcSlPQr40fb4IUYFYXu8h5YzVOMvEhoh4THAZLz
23tgoRpunHuMCFOeF947H9oHWsrUY8ISnXA5NyOLkW4fngtRiY7wd4HJIMzH
MO0DnVBQsfxkF8RRN3GLnNuHv/aHdX7pd8P4Dd3HtRf3QeXhc+PYgG7g0pkO
0+HdB8mI0raub93w+JNt15zwPhycp61TvtMNUamUJ5xhH9JWQaw2twtGiP4P
GO/vQ2vVKEXCXCdw4C64xzzch+0PogYLk0QwvJKBF/5vH7acLMIkEjogUgX2
aoz2wePqJ7PKG+0waN8oomO6DzUNxl9k3FuBLVbHas5qH1LrOWgP/rSAXtO/
lA/2+yBntDetptMIvzZsJhk+7QP14bl2Il0tnJH31xUO2IfXDJSZx5wQMC80
yH7I24fVVjG7u9d+oyBfZPQP7QO3btd+gUUmYhHMdFCt2YebfibfJs8WoSBi
zM/iln3grDt6fQ/hEcv7n5mXu/dBIjInfUeqGgWd9Wj0Hd4HZc5vm1Pf6tHp
EoepnX/7cGvf++Qjn2YUYvj6kMkyyf/DUS7haAI6c8iYrWV7H3rPBX8PVWlD
IbFqt8QOHQB9J/Xtu63t6Oz9e2oxtAfAxZXZ5sdGRL+mb70+xnQAuB3OgxeC
nYj1+zUPW9YDaJNQX73J0IV+8Z2PHeE6APNdgaypzC50rpWhVPH6AWwlnO5h
ZOlG4W8penOFDoCSpZC2jXS+2Jg31tglD+DPol7/8BWSvOAf/TdZkj9yITkf
Yhc6r9t3dU3pADKU78ZUyXahyP0mWQPNAwieOHKW3KETsf8uM6o1OIB6O2Lh
Q1siipTOdrj5/AC8jZ+cVpTsQBwTcT/DLA7AXRr/g5HQhqLcgzOp3pPsz1P/
B4KtiPOqZ6OlywEw33QRGCb1v6hGp6nerwcQeGHCbGizAV2wsDwk63cA+xhx
+hNpnuDK0bh1JvoA1h1DXqsSEboEHLH4igPo4Q+fL+8LhrjhE6XXGg9gbERW
WeBYOlz6RNkb2HEAvz4N3TSzKYC4S1truIED6HxmTL/0oAwu187Qm00cgLCc
QWByZiUkmA1c7Zg/gCa5AhOJwVrgPkaQhQ2SP+pSOt/aRkhILzdKPDiA5Ow1
crbsFvC/olNyhAKHHQ+Ka5P/rxXa7drrJalxmJEMUJm0tAFTw4PuN3Q47CS1
qfXOyQ5QO1c9kUCPw2b0QjdPXCZCgDm22s+Ew0x4XV+Ik3UCERWQnTiNw+5f
N1D4FtUJpxhuHr9/DocxUZOxxh7pAg3jFFZHDhy2+/KXBBLqgsCsizyZF3GY
B0H27e9LXUCkiBCZvILD/o7arMb2kew1WGRYeXFY27fAQ/lanaAR76vySACH
lTII8D36RYSfmzSGX4Rx2BrnyQvWiR3QJffpVaEYDlNjJV5JcW0HltA9u0VJ
HGat2m+yy9MGWrPv3C9K47DsSsq+4VgCBEksBmjfw2FfOMkiPeabocvrRbS3
Ag770R6oPSbbACxDI+kVyjjM8ZzX1Cn9Ggh27ajn1cJhXTQ8rGvDCEKq/5Id
eoHDFA1cY7WUfNHiUPr7hZc4TCq21ZvRLxHd245b6rXAYVpO10aZz+Sg1Ws/
hrNtcdg9+2+8Xp/wSF7263+/HXBYi5lAaK1UFfpt8IHw3RmHCTLZats01qJN
W2s5u0+keB7lznfONSIlP7MyE3cc5snsEphysgXFJBvdUvXEYQ6DQxp4WwLa
qdDMAB9Svh/buU/ltCKVgQdXrvnjMGFx1TGBmjaUsCH9myUIh0X+ET3Y/9OO
9unFTh/+hcPyJURTS007kDoPv+9SBA47U6rDw7HRgVKkLx0ZiMZhk6eqrvCp
ERG5HqtLXTwOo3yn98TQhYi03jFu5SbjMJ7fq3f9nIjojze1ZfQfHJZBdM44
okhElIn7U95ZOEz8x+Cy5XQH0sWvGjrk4bAo1YiSHu0OlNk73fW8kPR8cVzP
c8Lb0ZG1oYfqCIdVsOlhhLw2ZHiss+ZOOQ6bGNy4ppnQinIvN2K81TjsCKHe
pcKKgOjulOefqSfJzyVxj59uQY+1C/ipmnGYbUOSfMidRkT/PZZ9iIjD9mtr
vcjyqtCzuNCghh4c5mw6mil0vRyVIF/6ggESfr0SxYlDyGzZEec3gcPonasI
/RZ/EJ72ra3TNA6bukhNQ5kRgVgumi6azuMwHCNZL0/AbVSlqTEkvY7DrI5T
J81HpgGrpaIW/zYOexp0d/l0fS688ZBqYd3HYWzdIemUR0qAvZi3dO0wGXbZ
p3Tnc20lvCNyiY4cIcMEzsgURQzXQOPCmfSmo2RYzASdbyCqB64jDNyFDGSY
UtpofZJeE9hxUkXGnyTD+I5R82jptEDL7T1m/9Nk2NcnsbZ0jwlwWX3F2/kc
GWZ460TgvnQrOJn/o3rFQYZxTUl3++6Szrfb4If/LpJhKxkswR+/tZH2lI4N
mStkmCr5W+W5hTZw+Vv/WuA6GWY0FD0vc6WdtI+VTbLdIMNER52eGZP2Q965
PANaITJMLUTP0PpMO3yiTOvcECXDrP5NsB1ra4Pe8zHKY+JkWJGqWcIp4zYQ
uBVS3YKRYctpMmyEmlZwV/GB4rtk2G/Vx3rt1K0wYPYlL/E+GfZhJ+0fFRcB
hD478AUqkvjx/8UXwdoCnuFW8a4PyUjnYVeJe7oRRvKen3+tRoaF7l9rljKs
B1GC/k8dLTKsXv68ic3vGvCeVjt+X5cMc1Q+xHMquxLEz905YH9Cyr/BMGq9
pQTu67ZbGT8nw+6K99QqReSBWuizieiXJH8VX2WCpdPB7LRX4yVrMizS4ws7
Tbg1vNPiuPP8PRmWcGt0BHcrCLn+zM5OdCTDXgrWjZ9KSkIhJ3tDr30hw8Zd
Bb+zihSiODXz4+YeZJjf6sci6CpFmT/IPv7xIsOO89JLfB8h1Vur//qiHxkm
a8uvIJdVhWoZuE0FfpL4eqKrMiNdi9ofFva/CSXDWJ1Sp8O96tGQt9KjnAgy
LL/EmOuRVyOabRquWI8mw7Iw7aJCyWa0edRaVDSBDPv2zYxeRKkFUTygTnmf
QoYpiKycNm1tQfSeoecL08mw8+SvDM5dJSDWet4fu9lkWNCUVM2UJgFdpsFT
ShaQYWxqJ6M7tAhIQE7d7kMxGWZr9sNYj5eAJN2n5krLyLC/G/Wiz7pbkHy1
vRF5FRn2Y3Q/+K5OC9KgPN4hXUeGSf0LfPqfWTMylom6/7mJ9L6svpW+6mhE
5p+EiqpaybBw/L51wlY9siuv4aPuJNVjdbGPT38t+kyuGy3XS4bV3DVrvuNW
jXzuLJz6NkjK72Ihl85eBfrl7OrRMEqGMT2xPT4ri0fZ+wmWyrMk/r7jF/vH
8lGphPi4zyIZ5r5/y3qvOhM1ODRrta6S+HuLJPXZE9Ho9hqo75FhOM4U2n0h
fjR/62tWIBk5FrnfffabYRBs27Je7jpMjj33U9LnFU0Axg2pYzrHyLEv1pbz
ig55wCZMdPnFSI5FFd8LECguAh7rF2v9p8ixdQl5hwhCKQhn7z4/f5YcK4+J
PhPOUA53Vrz7DM+TY4cv+ej7nq4ERYELD6MukGM3B3mJzONVoGWZWz56mRzr
sf5UYm9RA0/S5UQuXiPHoq/ftf2bXwsWC31JJvzkWLuu0RGPwjpw4LVgSxAk
x9Tz7aN0berB/dUhv3+i5FidQDqX8Uw9+KcEHr4qQY5pbNUlujE3QMTMlfcv
75Bj1xKET1nv1kMST/Fsqgw5ZqoqVeYeWg+5Lx4aLsiRnr/kqQxhvQ7wCaNt
/ErkGIjveB1mqIOmyXf3rFTIseaVl3ft52qg5xJNYZYGOcbjdCj+rE81jD8N
413TJscIAarHNfcqYTGGP0rYgByzY0q7yixWAbuj5SdtH5Nj2NupK+kKeKC+
oPm14Bk5lq77YLNFpBSYjKd3t81IfLzcCxynLoKrQ/Rjjm/JMcqTWSYa6Zmg
NMmOf2dLjnnSK1/7oJECFvP8ka8dyDGLSXGKUqFoyN59qGv0iRzDNWUJt902
BOIhIzFtd3KMn4XK8M8Pb7RJY8mi6kmOUUjzZCj+iETip33b7/qT4jMe3j/u
kI702X9nSgSR+NF9ek1TNhs5X87wEf5Fet/fatwLCHkoirfMnC+SHNP5HUSl
z1yIKoQIitwx5Fjf7JmoqwwlaEJ8mIcjgRzjbX8pO61biqjvLlGfSSHHxNwf
pb3+UoZ4FMgmGdPJMbY+/8OaH/FIUYWhkjabHEsx6np+R6Ucmf/HEU2RT47J
MNWb3lkuRz6GN1z2Ckl8XNxU7TWuQJnP7hisI3KsK8tYmSKmArWbP5JYKCfl
s1D3lT23Aq1bG52dqibHPCp3FXAhFYjF0XJrqJ4ca72weKbvYQUS++TS2d1M
jkWY1U4r95Uj3W++Oa1t5NiOz9Qbdcly5OT3+0d9JzmWk36lUOI9HkUGZ1hW
9JLeP6PkUKJ3GcJHlikXD5Lqq8df9uOnUjQWT7ieO0rim/Ke3kROCaL8M0z7
Z5L8fxRdeTyU3xcWgzHMmBlLEiVtQrIlSd1DJSRbRJIQJamkQolK9hCyZ9+3
ypI1XPu+74TKN5JUElqofu/vz/M5995zzvM8577n/vXC2ce/8oqkK7FEybeP
mZ9Y4doH6o2Am+XYoYGREfOdFfw8pF8LRxTh4PYtXmE/WEH9Upy/hHs+zu+T
s360ygoOtM9iD7Jz8NJbg03ubGyg7PHOhqvpKRactVq7xckGC1W1M7kywVj5
6/Wxq9xswGJ+YtfeNRt8909opCUfG2QlDN59fDACJZBSbp5ezwY8ddOlU/uS
UA13oaHhRjbQlDb/U+CZjqaYdbLHN7PBPBo2Hr6Zg0jCfbQjW9mgR9ypkcH+
Au3YMjWvupMNCuYCjDIjCpCmxGLbXik26P95uvKMYxGy38OaLbOHDfY0/OCZ
5C1GgUpM350KbBA1tPM1j1MJen5Q3FZsHxvga+nkaxGlqOeI/OENB9gg8mh3
gcLtMrR4XH0LExHrt8jZyoqWI/6Thv8oh9lgUcszf+JBOVIys55gO8YG+S3v
mYZZ5cjUyunVmjYbaCzJ2R0IK0d37DxjlnUJfGKn3g+plaO4a2EuXwzZIOPo
06oP5WWo2jnF+MMpNvh57HF03p9S9Na9UOGtGRtsssAf++mliNW7jjFqwQYW
3EFnr/0oRtsC+772WhP49Uq5zBS/RBpPpjrbLrDBbpUtAbP6RcgudjG33p4N
+K/CPovOAvQsi2lX7MQGYz99HIT+5iGvQazG5sIGEo//vbGSy0bmrFc2Grix
wRLvBdVw3XREMW/umn/IBnb/tBXPLMeid343s1T82KAlddqP6+gTVFa8xdMv
kA3ub/Vjt4ryRRd47+7dFkHwqx1zJeSqFT6ouovXKYbgx3Is5xDjAea/NDSL
4wk9SC0dg4ZAPB/xsI6aQtg7Jpfg2RNcXycbdyaD4DttTuLSuWgc+3XiVnYO
G/hlqP8JdozDTiKP9H48Z4MytP64+utErKWlvOtoERuk8QVymOgmYzHnadYn
pWzgk/TbWtMsBf9ICRt/+4oNxksesUQyU3FXNyqRqWEDh5dNyRG3U3HG2vzj
uw1scCj/9LXasFTsviv2UlsLG+xLXxedap2KjU4dOyzUyQYjymWu1V9SsPTD
JZELvWzQJ1qcff1gCmbLT14pGmQDtOPqqXHjZDw2rtuzbowNNoew6lWhJFzA
tZatN0nkez88JIUjAfspZT+Mn2KDlx6UgHOGT/G+ELZ9+z+xgXSeerOsRwSm
VeXTfb+ygayLwWD6gzA88/Hs3MB3NghxXI1t2PwYVwlyN4j/ZAMxesGLESd/
HH64LN5xjcD7UtFK0UYvfNnR1qWahQQ14+uF9a56YPV4pgEPOwlYdtgmXa++
hYXbsKQZF+HXih7+muOAv604kLKohN0tm/q5yBK3bBWeXGYQ64mpvveUHk7S
by49LEjYOoNnx77IYRf3m6GhwoTNclQhn9FXrZuz5fKbTYQd7rlNV2Ib3j7c
dWT3VsJmBDEUQ47hNba7m9x2kuD+5iqn0dwzeEB2188WKRJAuHei6Vc7nHt2
qFdQloifRxv2druBPQMe5tooEn5Jri3MPjdsVirrXahMAn3jq57dmZ5Y7v2E
BctBEtA9T6l9e+uLyYxHyrpqJNDcxHP4nGsQfnNQmRl3lASW91oZzZmhuMR+
+tNHLcJPLeD/kRKOg6PCGvfpksBONuFvcVwUtm1Aid6GJJjRZZW6+zAWq36b
d+0/RQKVpfBzAUfjMf+mWMMtZ0gQYn6sSa43EX/SPiZ97RwJrkibQDAlGde5
LLFXnSfBLgf6nDZLCo5JS35DsSPBUGCn82xtCnbs1S03dSCBuEB7oqBmKtb8
uxqW4UiCUnOl2gOBqXizVLbD0k0SjD+qU3zil4pXTE5pqN8mwQJDWFBLmdCr
F5tYiDsJHOo9yE+iUnB6Qf6viQckGPDfmdCYmozvTp7tl/IhQYfnVZ4LZ5Lw
0rGD8bYBJChT3eX4JzAeOxSIXEwMJs57JTqeUhuD3wuvyY6GkUD28Z4LG09H
4DNer38zo0ggZqT1W84sBPd9rmjQeUr4KwbbpOO8sbZJbLBPIgneBkmrKq+7
gVUkT4v/ziRB0tgBcWXdB6jwifK8Qh4JHLW3kkjVj5Hkn/UlV/KJ81b1G5yM
o5Bwz5DWuzISuB4/aD91MhWF7S/h21hFAvKGaXqFZCaipEZMGNWSYEq4b3F2
MQf9umV0vaWVBDuE5SQTmAXI8Y3CAdYuEvCvzFmIvipEs5p87Kp9JHCpknfR
PvwSWRYudt0aIkF52DYBifRiNLKxL/rFGAmk3TNWV8dKkL53gfXHSQJfOZFV
6zelqOVLiPTW/0iwacx3v82zMgSmjivmH0igihyiHkI5KqvVq4n8ROB5MGOp
L7wcyUrtCej5SgJmE2Mja2Y5ygqnGVGWSCCjsk3oys1yJPb3s+iRnyRIFM7p
k1gtQ1EXOz+4r5GApu/xnKpShmi9eQWlLOzQ2WQgUCNbinxUAt2+kdiJ+cqm
tuRNMfqbevmoFBc7DJUYPDuk+RI5U4/z2lLZIWGxJeyuQyH64iw5msBgh7GN
P2cv6+WjC2+5UkcE2IGsGl1c8jEXTWp9dGAKs4OYC/VSZ10GOlXUoqSzifCT
byeOKyajLpEsFh9xdvhZZCAnGx2JNHx82/AOdtB3arTZY+qF9p7WsFDYww4j
2ZTAm2whOK9uu8QVBXawVNm6muwdj7dJsy9m7GOHuEM9xgdC0jH/v3pvYWAH
6x0CV0MeFuBAu1Q9oyPs4FCnXPK88SUm9XluCNZkh+0jMf6fZkvxUpras3UG
7DBzYDbqx7Mq7EDb4nLAmB1SzspLs24m5hEXFrVbp9mByh7W/PVoLTZ/94by
4iw7BEytcL89Vof7tfHArBU7jMp9+6m6pR5rv0xIEL/ADoWd7dVtXfW4TtTD
ztyeHYLsmsMLTxDzku9Z+cir7KAk55MW+JSYvxZU17qd2OFHfe+cHTFvSZqJ
NHG5sIOQ8JWFobgGnFK/+viwGzuEqvvCPLFfePfr0+732GFOP9Zbq7Ueh0VW
bC19yA69F0n7N/HWYwpL7OcFX3aIN78yKClWhz0v3S6VDGQHjkTy/do/Nfh3
n+kDmxACL/XXagEnMb6uqnw8IZwddA6LdJ04UYlZrobfexzNDm/35GcdkSrH
wYkLRffj2EHmqMEwZ10xzmHNFjmfxg4sUc/1vezysLIiu4FRFjtI63R1bDuY
hptsrbyP5rGDqSTzOq97FJ5q2fBl50t2cCRNbF2u80WOv2+Jbyhjh/v+WdO/
VuLRX6m+U5RKduh4/aJjlZqFNj4OwPP17MApdLrrytpLlFMz832imeAvyOTk
BqNypLyoLtHdTsR78rep1acKGRmvhhT0s8PNypLawpw6NOVj0pgyzA5l8XnG
fNcakGNZ0a8nr9mhdu5A9H/UJvT3I6+M9xt2SBO0mZ73bEaBGx2snf9jh3vu
ka7H2lqQ8ImWyIsf2MGemy/Q5m0ryvLY1m76iR0kQ0zb1te1IaX8+/+0vrJD
2ItTvxId2lHju3GFA9/ZoWk1ueX5RDsy4ttvJ/2DwN+m9Nk1vg40dSQiTnSV
HVwOnnsVxNOBHJ2/9dD+scO/DbfOK7e0o7+ZJ9hZ2DhAkaWSf6dGOwoczd7/
jYMDXEMXsp76tCFhbo6rUxQOiOT/EXM+gMhH1Tqln8YBA7j9x7BhC1K6Wj3U
wOSAB03lG8ffNaGGRGHuEkEOaGI9LvR6fyMy7HVGmcIcIPDUZLb+bD16y9p/
I3oTB/StPrEmGdSiq4p7svzFOcD3weh39j3VaM320fidHRxw+kJrrszlchQQ
9YHuIMkBIn++J7NZvkSZvxNv68pzwOwJ/9MvVFKRkvTaM6TEATUJJwu73z1G
DWdNp2RVOIj3r2Uj6283/LaGfpxPnQPsHv+tHMvNwVcXHe6RNDjgZe7ai3+C
RXhta2vRshYHXPIIEDxaU4aFfB+IjBhwQB71sd7hjlqcUTah32rMAbwu8Q91
TRqw4tx+74rTHDBnLn84p6oJ122MLM89ywHVp6WFUn+1YP0Ti5/jrDjg/jq1
j/3s7XjSQ1c82JYDTlF4l+QnOrBDfs6pe5c4wIynTmiTWxf+/Y7jkeMVDihr
v3X6wutu7M93Hltd5wBaW5DybvceLHQUfze8xQEB49UKdnM9OMN5o8SR2xxg
Oc/Nvl6xFytmuZjvdecAl7bZDcqne3HdaH/IjgccoCQiYidE2Prcso3rvTmg
C7U1GCv04knVwF9kfw5oUOcLePuhBztcnd39O5ADGmmL3mvOPfh34hHrTyEc
0D+mcdazrhsf+nEwTC6CyGfz7FqZdBd+oLuvziWGA/D5oOXcox24IV12sSqe
A2p/nfe5wGjD5D+7xEkpHCDxYVNoc3gzPm601VA7g+BDomfaebABB+eKeIbk
EPHeXrUcGa3FAma8UyJFHOChFZ+8NaIEmxaQmedLCX5P8mKljS9wHJlVPfsV
B8xINQQ7xSRh8dKl5L0NHDDO5qOYYhmLZPnHrHQHOcDtdIvLwc+16Mbl/tDw
UQ6IT+We79JrRCV1HbVjExxwfp/iRapXC/q9oemb2BQHTF2SfG/8oB0dvI63
XJzhgCO7os/fR13ofkuZwbM5Dsg9nizmdqYHNWwufPD9CwdcU42LO+/Yizhd
cgv2f+eA6X0a1y3O9CHtrrR3935wQEfofcWSDf0oeHsCo2mVA26n5ezamt2P
eu9GqfGwcELD19P8fZwDiH8g5LohiRPaUsNmLikOIFOpgORoMicoXjfeT5cZ
QE89H/ZO8nCC+qjjA4elfjQ5enfddgYnaJ9rWc727Ufics5ylwU44fajnM2u
s33I1u+aVcEGTggM0mVQhPpQ1hu70B+inCBvLK7OL9SL5pWsaw+Kc0KKoYFE
2GA32hN85tvDHZzQybzFzNreiZymjba0SXLCt0we28wdbahEVdeAvocTJIpk
e9LeNKFfT449OKXACadM+YvcTOvRfXWVd1MHOEFIX955y+lSVB+jwNgFnLDo
bCzVav8ccXyTVrt2hBNmWX1Fdjk9RUGJm5NXdTjBVH9+6Ryk4Z4VoV41A074
Eea09j26EPPrMtf5GXOCJfn0Zp5vFTh2jWTFb8EJfl6mkvU3G/Hkyb8hZtac
wBdntGe7bCvekvujJukCJ2x8MbzcWtCBbVi/LczYc4IOWf+E1UI3zjo9J7b7
Gie05P+xiLveiz/l/6d/4wYnlAT/9NhV24dlyBP3y12I/dy2I4f+68dO54by
/7lxQtqiytPCgQFcXNL99uh9TvjkeWJXf9gg/kltpQd6ccK98eSqqxuHsKpt
HfT5ccLVmPreUYchfK/ylaNQECdMnkyVWfIewnV8xUkWoZwQnfU9RvrCEOa4
/LwnLYITNIWD+R9Sh7BWXSbLpxhOeP9KLMX/7iAO3JAsK5fASbx/90aefzmA
exxjLV1SOOGQkO+F+pJ+LBlCX72ZwQkGGmJzWU/78MMXPhFOOZxAufbDXexU
Lx7vWtvj+JwT1vnbJIX2dmOlL05tVwo5YetP0xv7n3XgEOpHm8slBB/y0vOj
R1vxnPS5f3YVnFCYuratMKURx18+rmhTxwm2obVCLqGv8EpAbZdVEyeEN11M
HDlahPVz9l0618YJXcuBwq8C0zHp49YEsz5OiCOvtG3YHovsL6xxGkxxwkzH
qFzzrgbU4O2UojvDCZeG00zTBVqQaPqsqs4cJwgHPsi162lHzg0Ww1pfCH6P
KrvFGnSjnv8Grh9b5ITtx1+LJ2j2Ikm24zxHVzhhi1Y79XN9H/ISr81Q/03k
mzH55cT6ATSptk8N/nICWF6PyEGDaJ/Vs9cHWclQyRz9pKUyhELub3U+wEGG
7GtFF4dIw2guMYa+n0KGhb6diefjh9ERzJurRCPDyrayZSfWEZQw6X1UkUmG
AHzE+If8CPr5Z/WNnCAZytZT5kxkRpCBqNOdPcJk6BiKHru+NIxyVGf5d28i
g3I0/49o72FEMrd4ISlOBn3Ps2ejpoaQhduAlsQOMrjySTDzeIZQaaz2++2S
ZEhTvRjqxz6I6BU1HltlyDAy2mp2orsf2Y8qbdgiTwaOY5YPvB36UMPPvKJN
SmQImas/tuVtD9oktFVXRIUMpapRWW/MulDvKd6H69XJEO2+prylpQlJOnuL
CmiQof2oYLlMbh3yilgtZWqT4dknrcbEhkqkPPBhnmpIhvgWa6ObbekowaDm
FMmaDGvhk4fWxZfjn45K39ZdIBPz16/z+5VrsWFI3qN/l8jQ7b3QlejRiPNe
iO/4c4UMEZVKqruiWzF7d3TN7+tk+E07HZjt1oktvtDO/LxFhrdSvAsKIT24
jOq9vHybDHP13bs3oD7M3L36+Ls7GWZTXluVNfVjB53rkt8eEPUuBU3Hbh3E
TZc/NHzxJoN6+IsbmYZDePOjs+fm/clweSz7yC6DYeya0//rYxAZxoV+HR8S
GcF9rVrhH0LJcD/dwm+gaARLf8Qy0xFksDx80ayafxT7kJVap2LIsP0rz3D6
oVH8dmfe+bfxZBBw86atlxvF+4+J/51IJoNpd57ahvkRrJja5tecTvARKfp+
640RLPPPia8gmwxnJkklBk3DWOLMxoTYZ2Tw+hAm/m9miPj+1Et4FZDBZhcn
+/LQIBbhcyi6UkzwhTf+tIkewILX+A+ZlBP8l0/Xvt/dj+ntlS1QRYal4f5p
u9hezL3T9qRkLVH/jcyeu8T3leMhdZKvkQzGGkMpnDwdmOVNsd2fFjIIbXD9
rb6hBS9Fcnj09JDBsJxrQVAN4wmOrCznt2TwZJWs5p0JRyPW+gqW78nANZ2B
pd/nob7qn1Vas2TIyex9PxhUipqctfpFFsgQpJJg8i6kAdX0fTvLsUSGhsqy
OPWKFlQhEzv79QcZOHsyvv140YFeBqjfGF0lw8Gz894tij3oxczcn7p/ZBia
9nQP/tqLctSf+OWxcQE5qjkl3qsfpSUc4Ivk5IJWdccPEQsDKOH3f/H3uLmA
xB5deFV2CEWfCpS4xMsFh5ZvXXZXG0ZhhYpFhnxckO+Us99tywgKpE0cVF3P
BTzqT7/4d40gH3vvlu0buaAlXJKqfGwUPWjafZJ3Mxf43GX58DBgFN0VH5r4
KU7E54pvmYgaRc4eHnZTO7hAZdl5z65ro8hxbMf3dkku0HzjyVlFH0X2St3u
xTJckDMf99XafQTZhLmQE+W5ADVc8TEuGUYWXzY/8VPiggGDe/UHq4aQqXaL
qJMKF3BKaFnvCR9EJzMcs84c4oKda6wX0w4OIF3WDQpH1blAau+6ZpfKPqRp
UVslo8EF0Y8QvOHrRaqCzP51ulzwV8Jcp6KYmNedKs5+MiDspcibTWlNSLbL
enbAmAuMhT7sj7KpQ9t9iv5knuWCL/V6MRtWCpHY1Bm/UCsueOKddzs1LBUJ
HyLxudlygd3M/oA+BStEWzGS0L1C5Msu6rb0pgCTDf8U7rvOBT/lbKJrpyow
6/P0g1tuccEtFXUxo8Fa/MN2xXDpLhfIpEkNcIm14cXahImJ+1ywKSRXWnO5
E8+LHrNr9uKC2ykbDIUae/DM7a+L+X5ckDQ4mxx/uQ+/HYxyjw0k8l3XPlw1
14/H5IDsFcIFPQZhcyZoEA8EzYZdCecCa3btJxnE967rY4ioSTQX0OvTxTUs
hnHr0f1ZEMcF1Fscnvu3jWDXZg+Ze0lc0NEtun21ZgRLaDW8rEoj9KLvuYdF
bBQPt3EdWMsi/E/5eG4B0c86erUqz7ggJG9/2lbxUazUFX7sdgGhBz2XjBuN
I3hab6yztJgLRJ4h1UtSIzi8d7PRSjkXXE78K59iPIyPnLQdU6zmgvtM1SQD
jSG8NJBjeaOOC3btTOdRYRnEqacWZgqauOChod/eDJ9+bDiy98pCGxcIPphz
sZzoxaxmbt9lurkg7EDtaha5Bxe+rrl9pZ8L3n3hdTIW7sBWZzlY8oa54G5U
7Mzkm2ZcYxnKs+stF5z33y/YF1WFHaeGwi6+J/A9YNuQxXyJN9uIbMiY5QIH
nxpFz/o07HExc/vWb1ywni6X2HY4Bcl8nM+1WibqVeDlnagvRBP28vJJv7gA
dF1s7stWItWrVYdEWSkgfUPimBdHM5r/ytp4hoMCPJrSdDuJdvT0uubxWAoF
TpxJdX7F1o20vwf1jtAocEVWjOJ/rBf9vtlvsp6PAhOx3r0f3vah7BWhSeP1
FHh2/2noJm1iHnW1sAnfSIGcmGODnfcGEfl36lzfZgr81Ao2Eb5HfM/cPjoy
tlHgbERCX9HRYXThj8wPPQkKlDyXtxvrHUaC9266B0tToJrNJ9JafAQ1slSw
dcpSwK10Or9UaQTd9Pznz72XAhd+lA2N00bQNtJRuvZ+CgQG1F50yB1G/d4B
kX4HKdAmr/wzgjqMPDl7RJrVKNCyqNYuvG8IyfsLpLJrUODgH5ZJTclBNEU5
s+uINgWitaVDlz72o9DApBeeuhQw3R7Lev12HwLazN5aQwp8s3ST8h3vQQuP
pSr/naIA33bVkmGZLpTEuK5+6AwFjOu7DC6dbUN6T0pa7p6jwJ7pgOUo3Sb0
PFJt8NdFCqx9L13LPvoKWQj5nlF2oEBN1VP/d/sKETW2452zI1HvI/8GGVoK
cog3+fLdlQKeuqtx5K4ULLI5/qa8OwUYT1yLjjkX4vakqd+ODyjgZ7Vz7L3O
KyyZdoXziz8FlHydat6uNeKx7UVB0sEUoOu+n4rsb8X+mT/5LodR4N7mcvnT
tp1Yedeh2OxIClzTNnNoNerBszkPxWZjKaBTlXXxUEcvjpJuzdiRSIGT5+8f
jxboxxrPabttUykgYNBwfHz3AF7ZY1SUmkkBc/9EtsfMQZxeELN/KpcC4btL
NlbUDmL71TOSIy8oACyVvmkKQ1j26KaNXUUU2GGtdPnHzSG8EvyWu6GUAopR
g/XniXm3ciRlrfwVwedeTXkO2yHsKW77+QUm9DAhLX+BfwhrOuycTK+nQOih
+7Y3wwcxreRj19NmQp/Rt376zgzg/n+5OLSdAkKGudvO8AzgaK2r+b7dFFi4
nTDOQe7HFk9kk937KfB6+8acP6978baJxdAbwxTYqSLRwf6oB8/tKPa89JoC
agObjtrKduF8R5cb594Q9esc/VxBbcfOFfttjP+jwOcOZ5sDxc14nW71UbVP
FLBfd5D/wYMa3BR1X2nfVwokiWcLLjiU48B36jt3f6fAylDrtoLcAix0q5m8
YZUCssv/ulWaPfBktf8v2j8KiDH2trNVRqE0ss4ciY0bNN9m25VY5aI9cT3t
CxRuOKIjN6mcXomWpsMqZ2jcIHJuL/7vdS2q2GP8bJzJDTtO/4t/pNyI7t9e
n9AnyA12lqceB1i1II360eAWYW6oZem9YKTfjniocfeqN3HD7lrL1Q9/O1Hf
KQvHl+Lc4PXsWvNnhR4UnSRmlbODG7SV+z4oHO5FZ+emDJIkuUH2ZetzZak+
JK6Yrh4pww3HxprPac71oVn3iwqB8tywwWfZnOdeP3revGubpxKR30ame9Bs
P7rJmOd3VeGGLWFMv707BpDKmefsVw9xg0S9/0j3vgHEku64cl6dGwQNhrf4
iw6gpi/yH05rcIO8J/fZL8P96JHy8rCeNjd4fzV5O3exH+l7lrYc1SXwmK3L
aOzqQ4Idt8sPGHJDj2tytyitD40LqObIneIGFUnBczM7e1HKub+xO8244c27
m9pWm3qQXXbNI1ELbnB7MlOuMNuJZL573uWz5gaBhDlSlUk7KvfhtPh3iRv2
biqvGnnaiDx6WnWXr3DDqfv6vxvd69AR4UD06To3TAdil/q71ajnGX3L8G1u
kEuM4ktezEeRP/oYne7cUGOu90uNOw2Zq0Ww1j/gBrE0Vs2LT/zQh4EN75/7
cwMzbHQ5/GQ6zts0PpAWxA0F26WoNOMC7GSX0Bgbyg1mHujIsfZSrFxoWRIS
wQ3Le15YdP6twn9XxTN9YrjhVZ031fhbLW44Oh11N54bFDPtA82KG3DA40w/
p2RuOFQRFzV0tBnrj166bZfODUmnt9dlxrdiga3S9hbZ3EC7cFNYqawdh4Q9
OpX9jBsshCak+Eo6MYX1k/pSATc0+IxzL1p3Y+/r2ntQCTcEZ5y6+eJsD2Z5
l70xoIIbbNwjTGwne7CbPhd5sJobcjy+lzfL9+IVbLe0uZ4b+gYdFW6b9eLr
e1re2jdzw8x7texQ4148n7Czs7idG8Lv+A/FbevFF2m+5Sw93DD0TSo9qqUH
T7nPpB8f4IabAa8s59V78NnPR8MiR7jBSJU1+bVkNx4xT/d4N84NbW2/Q1K8
OvHJDtJl6Xfc0GrW6asX3Y67DtiYuExzQ3yptGre5VaslVt/uO4jN2SrCbBu
YG/GDcJbZalfCL1mbjx653IDRgGeIqaL3MCZ4jS4LaMWV/x6R05d4Yb3LD73
wm5X4fyRpHfK/7ih/mSR1XrVAiylydL1kI0HhML3kY+/T8cZpecqujh5oEVV
3rPdOwzHRW56YkPnAbBhDQo6nojWc3jce8HPA5bJP57GPMtFYbcmLv8W4oGu
wutaRilFiDqtanpUlAdc120JQzvLkZ9R3JGQLTygKpb26aBpNWJrWJV9vZ0H
9F/7aHiF1yIPhTOiOySJeCqvvqDmevQrpYLrugwPaKRpxFvjRnSTKbzySp4H
yEOxPlmuzejrg9tTHPt44Fivp7vn1xZk/22ky+AADyRvNuIU3dKGpi2VX8Uh
HqiKNbKw5W5Hlj1RmR8O80Dwzs9mPM/a0Wv044m8Jg+saIqq+7J3oFMvTt13
1yH2+9x0pwl0oN5NJQ4t+jxg8jBQI3a8HekEC5zmM+YB070BxhNn21Hzn5tH
LU7zwLyXR+bBp21I/cqAXPZZHlg+6efcHtWKqsYVNi1Z8cBvT11PJZMWpKzz
hIIu8IDB54r22okmVPRqccXfngekZBrn9so2Ihkpw/8GrvLAVucAib6T9Wgr
hVFp78IDd9XerJvSrkYJtx2zit14YPvPhoZzuBwJfewOZ7nPA69FXT4McxQj
WkvwlUg/HiAtH+ka8MlA/vu+nH4XyAMsn9/xrR2PQaTMExrSoQRf23rr01Kd
0W9vns11MQQfZ+zXFxxIwreWL3NTE3hgoEY37aB2Nl6waf9hksIDOsJz/z4t
5ePLA5LvUzIIfnauhqyyFuOZwwE9n3N44OG8x39zjWXYquhjpfILHtiyM4Gk
t7cSj4trZT8sItZXKTk1a2FsEpYV0VXKA++mP/T7/K3BfevInhsqeeB5041c
lu11+MuzGAv9Gh7IWqqdcmDWYy4zqQO+DTzwtzfojXF7Pd7GUbW+uoUHTrSR
G/7qNmAo1F1a6uCB6Vdym1XiG7C5xdseqV4e8KFGVF0sacAuFKdn1oM8IGO/
he360wYcVsIWEDPKA5K5FRP1Jxrwc+uICz0TPKBLf39ep7set9F2HuacIuI9
11K6Il6PpyvKNh+a4YHMbwLVK1p1mOWi9trNOR74o91vI6pVS7xnx0dyv/DA
1A3+6atba7AyvlI8tcgDx0ev5wSVV2Gjy/9CN/zggWe4eJP3YgV+VC9+3Pcf
D3i4HXfdM/YSZ1x7ubOajQqnhOvT2J4W4LqNGqRlTioERu6NNAvMw79vXKqy
plNBc++nfCXWBCwothoTw08FO98H/wZ9Q7BcR6BzjxAVanTpnQ9U7bHdtvw9
h7ZQ4W2kRgGFMxJ59ajx3NpOBbL5jZx980ko8W7/bO4uKhhlHlFUcstAFRK2
jVO7qWCupn/XKC0XDQ2sJG+Qp0Ks2MmPl2Ty0eJ9Pw99JSr8VBTLqTxBzG+7
hc/4qlAhJXv7Yz3pl0hiNHdf9SEqiF8R0BZrLkZHvA/yL6tTgXkCD7CIlCJL
ue4FqWNUuOAhEB29qwy5TVh2Wh+nwlLTPZHzX8tQpP9idoweFcLEPhrkXSlH
hXu9fHpOUoGyc8ArIL0cdb0TOM9pSqzfYSAyFF2OPgZlokPmVAhmjqlv1i5H
JJX9IrcsqWBd2ZGcXFmGxGbafubaUMHvgr250lIpUg0zH5yyo4LLkTduR5ZL
kMmhLwUbrlAh3L9nXX5DMXKauxesf50KvsfUx5ovvkTBkYzLvreocLFQY1b+
fSHxfk89Vn2bCm4feuzHUQFq/KK4bdmdCtKC5xfwuhdoTcN0wtqHCjD53rUs
KhMJff9YHhNABdMU/dTQhlSkkOgW2RNM+PuP5cDrRGT/I0HvUBQVZJWvqcw3
hiCfVFnpW08J/raOv7Djf4iS9erIeYlUuJ8hfX75iw0ayZyu3ZBFBRb5wXuJ
VC+8dNIlQT+PCpZ1daV26o8xLwuXm28+FaJ9H8hE5odjybxYk+qXVAjZOv3b
WyoGa5hKKy6XEX6Xu7LfKPHYmlRNl66iQl6/6xr/9iTska/32bqWCnflDJ7c
uJGMY83ftcY0UsHrywfeBMcUXEy+kdHTSuht15h7g2gqnrn74HN1JxU82w5f
23E7FQt9e6z4rJcKAVb7fkc8ScXatgluTwepIHKrsNrDMRXfHc2r8x8l4jv5
lPzmS8XPT7zicp0gzjPON671TMFva1v1L7yjwkyvCVWgLhkzlUaijKapULlL
6PKL4SR8JGdmUv0jFZT4rbeaPknEzpuWt8t9poKMgkjktGo8zgpju7L5GxUW
h2w/qZXHYm43sdXVnwReFz6ZnrKMwKpfZdTn1gj955HW/qSH4avnD/qPsNAA
CjsDvn14jPuOm60vJtPg/k5Z07Jib0yqsbNI5aGB7OGTe7kEH2AlRZf0UDoN
LJ9/te1quo3tsrzn7/ET+30OtiVbOuFYkXCFq0I0qFHk25KnYIc7QlLumIvQ
gMVrs7W1kjn+Syqo1RYjbMeJ/9YHaWPZ25i8fxthD1iOplbLYKvPnXo7JQj7
PmfWB5++6jCr8UgBacLueFNTs1cMNwzOTbDJEnbFdv8dpofxitavbYsKhB1k
XrH07hSWqOZ0eLuPiB921/hjqQ02kxcs6jpAg7eC30vvqjniwIxtvysRke9T
975YPRdcLayglnuY2L/reWrsxXt4IVjNL+YYsT9VPu6nvBcWZ9Pv9j1O7Fdf
t96U4Y+NXCwEnfVoYGom38i2PxiXnXNLMzShwYjes3N6nuF4rt//E5yhQXip
wsqAShQW0YyW33OOBpGKAw2O0zFYtzLjtuh5GtDyW92Tbsbhe7LFNdwXaZA2
UWE0NZaA89PqOX/b08D1CvXRde8kPCXUpzt7lQaf3D6vH3JLxvxBbyOGnGjg
dc8r1E47BWus+zre4EyDo4EOn058SsGut/5sLbpDg5mBX6kbT6finI/cl5M9
iPqeG3HNB6fi8bPChY89aZARvrD7ul8qpvVJ/HL3oUGKTogBh3oqBo194BBA
A8mg7764LAU7VRz1NQumgRlnn73LXDJOkzHq0gyjgc7Sm+yxwSQ8lGItsC+S
BmX5F1OmlhIwef118+2xNJjFnzSPFzzFKo/upfIl0ECCce1DyH9R2OFf0Ny6
FAJfd5Xc7SFPcPyNOLmFdBosrNOaCb8ThLs+5LhOZhP5fv+xh3fGE7OYl+OO
Z4QeX/waZx29gm2ODJ3ILib8L6x6XsQ9QNICdHvrRhrQ09XKp4xTEN+LV3np
rTRwtCvh37AvA/3WvPh1tpPAl3J51IsnB72bYspL99FgikfP36r1GWq5W33z
2hANrO95frbKz0cvBO1LC8cI/mJjU95ZF6LIfIHfy5M0GNINkO9bLkLu2rWq
+/+jgUfqu4l154uRzXuHe3c/EHyE5oneTytBxz2E6vAnGhziSQsqfFmK5IUa
SGwLNJgMFVS6FFyGNhReO6axRAOya/LiN+lyxKKzMcD/Jw2KcgteSgaWow/T
TR0dazRILblyPiyLuO/vOfHS1/GCiZjoJtN75ahkwybDk+y84C5smGNHK0fx
Ra3hkVy8oNr99/VtozLkdeLW8CiVF7KcJNv5DEqRwwcxYVEmL+RcECmIIpWg
kw86zC0FeUExxu3EEceXSGWja2KqMC+UUdYq9kUWoi3FW6dmNvGCeO3zlKu3
8xFZr3ub5FZeYLka7f/gQB76Onvn4pWdvODKE5pbzJuJhjx35ORL8QLPl21X
Lt9JRlUiffPf9/CC/mz/GWk68b4tcd+zT5EXZL8ktKgKexPfl4GXVaqEfUpo
aargMaYZPsRtJ3jhfXSrbnlkAV7+JMNKM+SFO2lT+ZffvMTj3mNHDE7xwo/P
o7a25DJcv9nHN9yMF87oT1/cRX6Fc8rl2oYteCFv5dv8jcEqHHpygmfjeV74
T013Y65CDXb97KdncZEXog1rfmaZ1eJzvophyZd54YIb38fyM3VYY8vbgffX
eOGtqPNjJYV6vPvVo/USN3mhLXnz/OBEPeY33md22ZUXvIZqYspMG/Dql6m4
53d5wfK8Mf1GcgOe8gt+8+0+L/jbV7cLEvNVq7iK+F5vXijm19unEtGA8yun
bVz9eeH2w0j1fwcbcNSp0MxXQbxQ8FbGVyi/HnssqM79DeWFSb4dnzo+1WHb
gFlp9UheqP6Y+eIX8d7T2RZ+zTuWFzSW3rxhNtRghWpU2JLAC+lXeeWOtFRj
YdNPS9ypvBCUf0XbN/sVXrcYuU8vkxemFL3nDsuX4dlH6nfCcnlhtvLmxOSl
l7gEx/wTeskLScX/PbOhZ+H400fVzcsI27nyVxpXAvb6vuCVWMkLIRm3Cx3C
fLDhTk3KjkYCn2a7QgPXp+hr8Aq/whAvPJEq/TMrVoHmFzbV7R7jhf59tqFG
xtVozvDYNYlJwt8mq78gVYs+vLwmsnWKF4ZJC7ravPXovWB0q+gML9w68Czv
c3cDmnKtcRaa4wW5FHXvE5ea0Jux2a18X3ihpuz9kR3DzWhcldFLXST4fGVV
5SfQisYS9nuQV3hBuU4w+r1YGxphsZZi+80L+ez+XMyVNjRoHTDy5w8vFNYw
npmFtaNL1qPqayx0ENvU6fjgezuye3Il5hcrHdwH1txa13egCw3rFlZIdLh4
WGtt9U87sl2O0FjioEP4h4oWh/R2ZLNDMv4bmQ7xJe/b/1DbkbVJ9fcvFDp0
7L6/a4tyG7LyM9Se56FDsV6m4Ni2VmRZPpP0kUYHavtbi8rBZmQxd+fHDJ0O
ii/0nszpNKGzG3l13zPp8J/Gw/fMoAZkrpOa9o6fDjHBETn2MXXIzH3f6qQg
HZznnVOybtUg0zfnskaF6WBD7ojYaFGKTtGX/g6J0EFj5lxpi1QhMlbzMx7Y
RAf+iMfW+feykWFqPmu3OB1qDlbpOsc4oxMX151tkKRDKG0siDRZjHWiI4pq
pQk8ried1/F6hbVbd1GwDB2GXN34bt2rwVq/qywrZekwnwMuPmL1WFPKsLRc
ng7CO7wub05sxBrmM9RSReL8awkGasvN+GjQHZuXSnQ4YzulqSzaho9U014V
KNNhjpufmc3owOpfUxgvVOiwe+iRVkJnJ1YT22eXp0qHO24Ph8N1ujEYtFdn
H6LD91Odrw4f7cGHPM8JZAIdnLpR/FptDz5Y9P1ymjrhz7hw459wL1Z971uX
fIQO53l0Q7bq9WIVAZENiRp0CGRZTgo524v3a+Rfi9Mk4sldt6s92ouVXY40
xWjTYcczep03Zy/elzUiEqVDhyNjO9+zpfZgpVGHG+G6dKDrzU+WCfVgRcq6
tlB9Ovgnr2Yt9HVhhQMRYo8NCfy6mH1D0p1Y3mGXS6ARsb/cZ1hUvR3Lxld1
+p+ig/TnYGcrwVa8p8tgm68pHeSH3ftHnjVhmX/Td7zM6NAb/fGELrUBS8ve
6X1gTuDVem9BQKUWS1nRJO5Z0CGIZrmZ/WYllqhXGrxtTYe+7pxvQgov8FZf
3z3X7OkQ3MKjVLGYiZyGFD2sHegQ+329kWZzIarZPtVhfJUOxur/9p69W44s
GlTtVZ0IfGKebl0nV4+e8c2V7blJh7fGZz1FDjShNesozq3OdLD7p5UXJtKK
jhceOSXoSgfHE8P0D13tKHbdYhrXHToUPtoUvHy8C33UT/y+5kaHHs9bqizH
epByko76gjsd3q23+Tp5rBf5fv0V8t89OjSoFH+T29GHhg5lvhl6QIdNL7Rp
Y2/60PZgI5m2h3SgHBiaZb3Rj25OrHOv8qZDzmGFhzsn+1G99Iv2fF86lDzU
ExUUG0DMu+bCaf502Hbzj+33fQPIqp3rUtQjQg8W95ZUtw+gfOHS0oAgQq8t
4qT2D/3o3yUbDo/HdGBfnnDovdePdMsZxtdD6WBY7jf45nMfiifjVJsnRLzq
VdF38n1o3sRh0SSCsMU2rBPW70UHMjeoHY8i8v3mtrCDqC9gpenxoRg68EQE
mC0qdKHRozcn5Z7S4bbweY2MiHYkEbFl9/Z4Oig/jdzgV9aCmhTutnEn0+G1
eWss43QdEni4a8O/FDocvf/LSbK5Ctn0DV1cTKNDVUPBQEtoCWK9Lsc+mkWH
Fo//TjvwJiCDmsmTHTl0YJntYJHP1MZJvIEpOI8OpsHN55w/JuJDz2dQRj6B
x/NeH80LpTjoz5PgmEI64DHLSzLz1XhcR20i8CWhhwCbGslN9fjOp6d3bpTR
YWQ5wGzv31bcqqLVeqGCDkuxoiobd3ZioYCV9WaVdDigyWMQwt2DL46mXjhR
TejXHk6Pne/FJRIGxVBDB/OQeG/rmD7M7vqXTbGODr90I1pss/uxUXOu4c4G
OgzceR5wJXQApwqeThZuIu43t6eWxnqDeNGWY4HaQuR/I0xQ/90gVisuOrSu
jQ6eibzs80eHcAjJKmipnQ7aaXlpgneH8JuTtPEPncR9GmNouvnhEJZJfSX5
upsOluGVF8rNhrD7ot3trl46XJhct+kP6xDuUBNsqe0n9CvyXNTu7iDeGFov
WDxIhxTppsbx5gFs/9bRNmuYDrsGV9qSZvpx+Z5NL5+OEvmvci2ajfVh8r12
1sev6UCSilvhTe/FJl2uBp4TdCgwmkrZpNWDM0R3JN16Q/SLihI4h3XiZYf+
L3bvCH2mcTD79Yn7rfL+QfP/CL7z4sO+9jfhKbPXY+ofiH5Q5z7WGVCNeQ6a
ZFp+pMMTm6Fa1cFivHdz/w2PT8R98PlzMLM6G/v918ZT8ZUON3/4dDaPRqDC
Ro3R4W9E/4/dbXXVf4bGM+vSl7/T4WHBHo0tNaVoj0PFIbmfxH1Br9Z4ntqA
THWVuPV+0yGaNU9SubEFecoWDjus0SHR6bFw47MOlMeUSQv4S/Cp2cWXt6sH
DS1lO2axMIDVYURIa6gXsQxvP9jEyoC1/9Q32Jr2o13lyVzvSQwog3+zjLwB
ZPhUdGgdJwPm4sRJfZ2D6K57TMpmLgZ4xj9tT64YQhnnBK4d5GbAePha+L9r
w6hbLfTAGSoDLpUUuyx+GkY/t1LJt3kZcC76SCPv7hEkzuE/EMlgQNLsftF7
8iNIZ5aU/JKPAQEBbow/q8PoVtv9K30CDFA82W047j+MEvLW9i+sZ0DwOlcr
9okh1BLsykETZkDz9tu1SyuDaNFxqU9KhAH0uuni0tEBtPGkY6LWJgYs+F0I
+ODbj47snb98UYwBJ/gnb6WS+tDV9XbK3uIMkL5VsM3/ZA+K/vUfKXUbAyjH
rv8y+daB6l6f663ZwYBJVhNLwW8tSCDJxH5NkgHu1jPJGco16JBnv5LwbgZE
NlXYlkiVIjsbPTblPQwg7Y+6f14nF1VKHIu7ocAg3ltPM1fWR+EZSr1d6F4i
H1mu7eM/n2Pez4f2vtjHALfw39E9zHJsXaDUNXeAAUFY/i2lphEHPimMJR9i
wFfFaZoVfxsuviVzcQcw4NeT8ciXkl140iRH4Yg6A24cqNxpttaDySo7WKyP
MGBXX4vkuYo+LC+S0nFPgwErn5VOrWkP4DN/RWPiNRngkz/+UyFnEHu9jbF9
pc2AO/L/LT0YGMLP6wTkR3UY0HfZfPh90zAeSQv9u6LLgMLEp9nTHiN4nS+1
nd+AAY59/RcTfo9gyUv+UfInGVDJ/MyNlUex0XF2G31jBvR/3bg5lLA9dj+Q
vWrCAH4B75Zfv0ZwFu+ftUenGVBNoZ+84z6C+765tmafYcDzslsSexqG8Wr/
UkTzWSL+Od/Dnd1DeFuJo/X0OQb8lojanJAyiHWj52XYrBlwm94mcwcNYNc7
dqtiNgyYan/3vja7D6eYv28+dIHAM6jwovF0D+44ZBlubseAk6XT3wU+E/0q
Nm55x54BSp+LHDUbWrHmdP+v4qsMkGsQWyioqMHuUsFuLxwZYCfqd5zNtwwX
Xtf8k+XEAJ1hBUn7+ud4499Kljhngn/16Usji/5I/4iLZ4QrA3JGG1ozt2Qj
rwA50uM7DHjc8U6bpa0YfRHM4PT0YEBHz3YVx556tPWspb/bfaL+K74537hb
kGmqMPctTwbY/zCw0+DvQIEfBwKvejHgZ3D8UN7bblS75zHNzocBDAcwcXrZ
i1ZuaYVY+TGgVlcnOMmwH0lWsjHPBDDgguLGLvPmAXSOtfqJUSDRL+p2xXd5
h1C4pquAbjADXr57WaYkMYxag+WjjoUwYILbT12CdwT9HZgXUgtjwPzJxG9m
dSNIfmNmrEo4A8ZuXfmoCaPoopWViGIkAyDOQOqt7yiKy9yYsDuaAaWe6795
RY+ins+Dm3fGMqBE1YeNz2kUsSuGJIvFMcCpiESZ5B9FKne0twonMODgSkpf
/oMRdK2GlM6XxIBHf8TC28uHURoH3kFNYcDNO72731UPoRGd21kcaQzIeHrz
Mt+TQUR9oiDJksEAGdVTxl+UB5D66OfcX5kM0GYTirIu6kPOm7N2f88m9B0d
wYXZe9HbXBG5mWdEPTOvh6U925DA4lDhmxcMWB3JrH5g04S0lUMVRwsYcGvV
fqva+jpU1MCu3FFM7Fe7OKi/sxDNUmrKG0sZoKulqeRYn4xEDO4cwOVE/R27
1p7onMU+E18OFVYxQECy6twOjiL8amt2TS4m7qtadRluoUq8cOm8enotcV9e
b3+TeasOb8sXbUioZ0Bga+bSrZImfHpl+Gh0IwOeJHR90Whsw8GqYc2hzQzw
EFDltIrpwnWeOlqPWon60vyPaQj04h8tHO1e7QyIjbg2FVbWh6V5a3U8Ohmw
WDH6QlBhAFsZu3W5dDPgvxerg7kPBnHk073613sZkPfoCk9Q8hBue/e1176f
AaNxdwPPhAzjfztzTtoMEueZKGzapjOCFa/aDJ4dJvRtqrTvfP8Itnu5ycRk
lAHn32WJk7eP4vjfIyP6rxkgnOIk9f//d/XBEzPtCQbYHHRuCCD8nL4nxg+/
YYDaa5+8JwMjWLWT0+LgOwZY/9tNM9UdwY58dW+U/iPuly/h8YzwYZx++q6V
7DQDhL6IldtnDuGxRKX/dn1ggEaV55M7AYOYNrNgs/UjwX+5sGMN0d+HpXNn
RD4R+kpLXBNt68OuTrZ2gp8ZIK/9caBHuhf7Hf9yUeUrA8h6llYH/bpw1DaX
ixbfiPuIjkI/Xm7DJUN+FzKWGWAmdLXF370Wf1fJs1H6y4D3qqd+oKZgxMq/
18aMhQkBEvZnHDRyEfNz1XkPViaUxD1YOHOkFMkmdls3cTDhD2rO5B5sQOBq
aj1HZoKq8+j8brFWpGfwzorGzYSZn/njERKdyELS3kqeyoScZAGljU496Crb
d8tTvEwIEls58GFbH3Ifd7O8w2DCXKfx6r2sfhRYTLJM4GPCutKHF+V/DaC4
4KBzdQJMqAtTCO7hG0K5FwXPzaxnghh3jln58hCqgEQLijATgk+5z0zGDaO2
DRIWMiJMqBGL1WznHEGji/lnDTcxIWFCeTh17wiabd9/1lmMCc33fAYld4yg
n2l15rHiTJDwnPPHo8OI0+O4efU2JrzZwlJtbjCMBE0GzkztYMLkPY9nEcFD
aIfs2TMcu4j1xpZXQol+3Ms1YyYpReRDjRghnR9AR6aumunuZoL5VlM+KZZ+
ZPTqx2mnPUw4EPOlvPJqLzoffv90pBwT1kw/pLfbdiOnK1ynKxSYwJXIpXYr
pR15aoSZTu5lQnfO4vip+GaU9DPVZIcKE1R2GfTcXahCk+bNxiXqTHAMsngo
9PUp/rxX33jsCBOE/z1hsZXMx2u0UaO/Gkzw6L8ft2t7OeaZtTIS12KCJu+H
jOq5Gryxdu6kxnEmJN5Pd+plNmLJ2Bsn7U8w4eVVgUFnllascmPNMFiP4GPM
N/d3dgfW0vE2LDRgwt5V7TQ5th5sup1mOHSSCdvKmobrfXqx3d9Ig9/GTKiw
YO9gjPdhl+HNBptMmdBGZ3ot/evHPvlZ+upmBF5KlGfNXwdwpL+c/gVzJmSG
pzdcyx7E6dYVegEWTKjczz1oITWEXx44rPfckgnS1069iro5hBv4O3T7rJmw
UMm7+MJrCPd/NtJdsWGCNXSMd58ZwlNNEyeELxL1JQtGFvwm5unECycOXWKC
vcnzIwnWg3jd7a861peZkHF93Tr7iAFMN3TV8bnChDun7ptcjejHYlLrdHKu
Efy4sLg+tO3De0gBx7uuE/rZ1rr9J7kXH5pgHl+8wYS3YTv/0jm7sW7JU21B
Zya4J125nFnYju2+W/8TcCX8/+25Im3egh/KSr4UuMOEWzPFF9YPNuCynDJR
AQ8mvPsaqNydW4HFEwcX+HyYkH+58fFI7xOkOh6XzufHhDyrQvwqJhuZbLAx
4wtgwuj4Mhf/3Zco8MliPTOYCU9d9nfuCq5FGT3lrswQJjw+qD40udKAaqkP
djPDmMD4stHQQ6oFjWtrTjHCmcCuYf5SfXs7WvHljWJEMsHq6XDT8kQnojcO
HWdEM4H0s/TN3509SIo1gYURy4R+Gderigd6kQayLabHMaHY+1S5G/E+tbwr
bU9PYMLfl7I7mbN96E759030JEIff0eKIjz6UcRKRT9vChPs2qwucH7sR/kK
nn68acT66up3HTsGUJuj1kHeDCbY1CRQC4j36ftn9EVaFhHf9+7wfxsH0L+5
4QxaDhMMWn9Tf/X3I2GJxDO0PCZkK+abzVj2I0XbC3Tac8I/5m/J0tCHdFN2
N1LzmXCs6zXHj7+96NKbpdvUQibwrDFXe/h6kZdIpQz1JROUjCpvzpB6UMLp
h//xlDCBw+x6WEl2JyqL1I7mKWPCbYv5V7LUdtTfzzjBU8GEsLOtTH+VFkTW
TSrhrmbC9M5oIWFaHXJSr/KnNDGh58haRGZSMgq853WI0kL0+1XqPpOeuyiz
8vh3rjaCz/PDgUtZ4Xhcacycq4sJj/JyfpmUFuKVG8kMrh5CD98NCxP2lGNG
gV0TuY8J/KfFRn5YYqwh9WMPeYjgt+Tv9tCzjdjSrvo95wihx8kzn3bNNGO3
dO8YzjEmxM/8/dqg0IYjp3R0OceZ8NOdrbJbrQPnb+Zn45xkAoimShrydOE2
89elHG+ZIGTRz7XyuBtPx6Q4cEwxoW+XUiyHbQ9mGb60heM9E5JfrlGPj/dg
YX65IfYZAp+LAWc37+7FigY/A9hnif6SvrMib9KL9YIxYp8j+guORwSZ9WL7
dp8l0jyhr6RJ0+D/VXSl8VR+XTRzqUz33ue5pEwVoVQIFWcrheakzENoJEmS
hFQSkhBCknkm88wxz/MslVQk+UuGMlXv895v5/ecYe+111r7nE9XqRN7rD6R
zD4lACFXGnkmpjpw5CGGKfu0AISqKJQn3e/ARQ/eCbDPCAARduOnxqd2TL2A
69nmKH89ljD3y7UNT61cdWH7JQB8P9YfRm9bsIH+0W2Lvym9Es+HL3I045oc
mb6pRWp+qBCv4UoDDrs6Kff2jwAIeEj7NZ6vwex1lA/8E4DKqIQcmaFKbCuW
7l3LQoOfBcNFhE051hi49jmTgwaZffVHt5zOwW/kT/gncNEgKezIhqLdqVjo
2Q7ViDU0GDDcfjdc/zWePvQj5PF6GnTYHuQZZnuKjKLbD7ry0sDumeSfEscY
VLfyZtqenwbu5qt+h59PRy9z7I6YMmjgFVksGPG3EHHynv59hqQBo//fB6Kq
DNld3RWnLUiD/IzDPrChEg3V8p9GG2hwkPGqOXJbNTosNvNHYSMNWq9aOR1a
XYuyXLpSpEVoIPzNfbEhpw4JD2TriYrRYEy8d53Ktgb0WP45OyFBA2ut121b
LjaiGb+bWWu30ODk98nA2MtNyGTijCmLJA22cCd5H5drRg2HFNb+lqKBpHiQ
tGZRM9odTS+clKbBp68XruznbEGvVuasPsnSYFP9ZK450YJW6/fyD+yggUIQ
e73NRDOyz8krb91Jg6YjWcdfPmxG73lCrKt304DYq+8U97kJaV11ZBYp0OCZ
qItj4bomlFN7rjZjDw1SsjN+O7E0ok1iSvZxyjQoHPct/1lTj7xcSJHwvTQo
z3xm6G9Yh2b7fzc/20+Du6P7Nm2oq0Gm8gNOj9RocOJg/eXEtdXUe7Zwy12g
wfR0qNEzuUoUeejOvYsaNGBPzyE+axejNdEGssaHaRC5JVtdelU+clhRGTyt
RQPnqEsiUWFZSDtnabfqMRqMn2HKDe6PRnOiLmM0XQrf+fGApPlobOZi/HzN
ORqYr/7LeW57Cm7q3w//9GgQbmC4ZMyWhRXkN/43Z0CD1f0cTuJFufi135+w
CSMa3DYb5+jcWYi5J94f/mhC5ZvWfeqbZQl2OFQ+22tG8Y11/GjssXI8HBUZ
1Xye4tO6GNUV+wp8ZMXteKUlDWbNtKT7gitxnp7ZUv4FGizWC+tue1qFRXNQ
YtolGszRXDhS9KrxEx5R3ZgrNNgTJLjJaa4a/7qyiiXUmgbZchqHRCxr8Pna
j+lPr9Eg6u/JTSGxNbhFtNLw4XUavIvy8tifX4P3uERz3blBg5BTOn0DL2tw
dP/9XNubNGg5om0QdLYGj9XuHPa7RYMDt27Gew9WY9nc4TVvbtMgw4TTiNxR
jW/E+Cm036HBjA4bp9C5Kpzvr2r24y4NuhdlrPp0K/GK26Q3rxsNrrPIaE1t
r8Dq117myrlT6yezdJObynCL9uIaOw8aHOmPTtVYVYgFlJMU/D1pYLtSGC8+
mIv1tuqZZXrRwO/2nvlHgVn4E2te7rQvDTze2yX+DIvHCyV2ZjeCKfyKD4gL
d3ogtRQRn4AXlP5261Z3fAlBD0PbcrPCKH3mOCX/Ph+NGjxdhztf0mCd6MGR
3fMJiOeWLPfMK6oe+xIji0TS0BnLIQWBKIrfp7nUdK0zUehpH7PdMTSo8rLs
0PPKRh+Qio9OHA34m1IEBSxzkcSO8Vz7BBqc3itxzHMhD10WfjEcmEQDiez6
gueHC1AG92HunBQapN6QT/51tBDNLswpdKfRoKzRM+vw6iKk/DXWbDaDBsNx
kZdm7hYht14dH1oWDarDjxcrJxWh6mqWPPkcGmgvq86IPCtCq7Mzh8/k0eDL
pnSvq/JF6ESUGbdDAVX/pT1/vUMLUZAfj2JQEQ2MZ40/PasqQIMuZWa5JTRI
a9ZQ35ifjzZZ2/j0lFH1Zz+VdcopD1kZbMibwzSYmAhWzeHJRcmaTcP0Khrs
VJux2XwvG00p3uFWrKH0wrs3sbY9E90R6De71UDxq3vMv+tsCipf5ekT3ETF
M5f36pZHAmL/oZCX10KDY7M1Ry0SYpBfcyD3rw4aVBy7mGQ9EYx6itQViW5K
r5P3duWM+iLBpGmzPb3U97undQ8tuaA4jxN5joPU2ELDO/i4E56w/zMcMkTV
zyOEW0TEC8udT+MueE8DrclAp9JHAdjhpJFi/zBVbyG7r3lXQ3CxKrf57xEa
hK7hm0jPC8f/ZIp8yC808P8Q3HPMPBJrCF3OUxqj8AjlUjHKicI+q8mPeuM0
sNEWNq7+HI3bf9VyO03QwNRAjOdzZQymjzoohk7SQEMvbfTqyVhs2C1hXjhF
A9aeMH7pZ7H4dWWXz8A0DS5GvP6x4hGLv7y5n7cwQ/WL2oIDhYqxWDpy50fm
PA1iNM4Y8CfG4Ou+w9wqv2lAUwp0eTgcjXOd/RQNFik/VhpdIz8WhZcuq5rf
WaZBcXip2qtHr/HGPwFGN5zpMC/ZFjcdko+0Ph0veuFCh43fj1yJSy1ADvVr
yHI3Olicm+xjehei12m1Dl/c6ZDpKlR3W7oINQXc7+J+SIdL555k33tShOYd
VXfuekSHbBkFy2CKX6LGi0/1HtPhS+GX4W63InRUPe+7qzcdAuZ0nYXWFSHH
rTe0457QoetFah7zZCGKXrs9sekpHf6U2b/X0yxALdPj7D+f0WHK9KHEgfk8
tNAbZ0EG0kF/IUhC0pDSR4l5hWoQHV6qlmerOmVTfBXeZBVCh4Gcvd9idDKR
86OBuz6hdHBY2Vuc9jYVxV8NGswMp4OynLbQpfAE1HHylFJ/BB3oEuu5On9E
oWWFdcF/IungJLzEntgejLYKNcxIRFP5puvrCR98gFy+oAy7eDqcMvij8DA4
ACc2Lq99kUgHUT+drnMGr3FXRsGVsmQ6eJTlRg2GJuBtd+S2cGfQoeLIjhtO
YtlY1/T7g52ZdBDfOsSst8nD7gcTP57LpgO3m/e9zSGFOFXKUs01lw7P+cU2
v3tegvvWi0TE5tOhOFVm6Y5xOWaZfbvYWEiHmYqT2TdvVmDZgRC96WI6ZNUM
9hyk/FyvTCePKKPDT23vmuRnVfhBDA9NFVP45z9tXzStxumPm+wsK+kQ/kI4
evJfNR6w8WzzrqbweWtUm3K9BrPpHJDNrKWD6fovwv2pNXiH0l/vvno6aBt2
CYdm12AD4eKvK410YGVcL3n9oAZ7sDgekmihQ8SbT5O7NtTgzLFdsdptdDiv
efjFNpdqPNT83yq7Djq8dfX4thxfhTmzkk1DuuiQIjvNXhxWiXeHXCgt7aHO
vy0xxWdQgU3uigl97qNDecF212ctZdjL/P3tNYN0WHlTKu3kVYxzDoX1yg3R
4ViiUHDRZD7+IH1W/tx7Oly8mT10iCUHK8y3TMWM0AEU8S6Oijhs9tbrWONn
Ooz3efFqLYdgH6yR8mOUDu5fmDv5h23xR+/SC/snqDFLi1h8QTRae92p2mKS
Duz3iFnz8FS0R1dBzHuKDnyPVjaeyc5GTzelveudocNT2Z22CeKlqJDt8t6V
OTq0SPp5FmtXoC/jEqHiv+mg5tdFrz9fhXjbhue1FukQPSlzUudMDdqb8/LM
9WU6JE3TGx8y69CFUL2s4D90qNtR7PsptR75u9J4S/9R9bk4GH1hdSMqsWi3
+cTCgE/oW9jDbU1oTPNJ02p2BqwLipyBtc3I4qi56BZOBrQst0bOJVL3oxOK
juqrGbDp8OP+IpYWpK/D3WLCzQB2rfSzkdT9qufssJjzOgZcP19CMxptRqcM
cm+H8DAg/yaboOG1ZtRs7N2azccAS6GS+8UZTeiwualEuwADIrwf5eikNKIq
S/k73+kMmGYbz84834DULq1u5yIZsD6O9Tmzvw4VXX2/ebMgAyYEZ/64r69F
CrbZzrCBAdL/GQ4+XV2NMm887jDeyICjpuW83i0VSOaW8dY7IgzglYpg5pSW
ogSnXS7BYgwoo4/8nvYsQK/uDUm2bWFAaULKdT33JMR8mOk6IcmA1WKhxXqS
YSjI81E3pzQDVrn37V16qYl8nsrdQzsYEGXe7MF1LQlzBrD3Gu1kgG6lTUGo
RTa+HzQo7bSbARL8ZPPuW4XY6eXDvsw9DDhwtupfEVcVnovUl21VZkA0a4ef
ZmkNvh6z/cG3vQxo8n1E5B6qxxPxrAMcqgxYcjS9xv+qEV9M7t8ujhhwdyb8
+ruSZvwpLe2hmjoDcmzec/BGtGKTzPuDhgcZUBvEJHcpt+OBnHNytw8xYIwD
bcg91IF1C2QePddkgJ/Ew+mqhg7cUbxq6I02A0y96/l8JDrx0fLenS1HGVDc
Ir8vU7cT11WmeI4fZwD9dbb1AaNOfKD2HtVqGSDEKWZesKcTlzfo7hbTYcCR
tH+0mbEOrNKyzUtVl8LnZ9y2gzYdOLf973uDcwwI/Glwq8uvHe/s7pZ31Kfq
K+fAFJ1txWl9Sd6BhtR6/PvYq9UtWPKt63CGMQPuC5bFanU34pj3OorNphQ/
DMz+juvV400jkk++mjNgDrcfYouoweFfVj6yWTJgMVdlY1t8JWaMd+4RvcCA
b2FXDTQXSvG6H3c/6V9hwMzNgDuR2RnYa+aU8i1rKn8Ovk3+xlGY7dcWv4Br
DKjoOq02nWiNl1baVZpuMEAhdNekwPtU5Lgq/tnYTYp/Il1elzXy0E8251FW
Rwa8zDwq99mxFI1zbw7Y58yA/neWq07Ta5EVz+KYngsDVPVkilUPNKBh/rb9
Dm4MuKj8IWXfvmZkyIgN9Hen9HJbrc7ydyvqYzqNpz2g8HfsSk1V6kCnhY+r
NXpQ+4m+ndl2ohO1iIgHjXoywMO2sU98fxfSkvj9jcWbAcclwtUn/3ah6q0t
aNMTCk8rDoeDQd3oiN/wEeIpA2zX2Yctz3WjjvmZszzPGHBm+1KqjUwP0jPh
PM8ZwIDhnll6+54e9KFG0OZvIAN6njvIFhI9yEp2++1fQRQ+43vaNjR3o+/P
4cFUCKU355FNx3W7kf3ymadjoQzgGQl3+5vdhRYsLoV+CGfAjqmURBjvRG5N
zrF9EQywEqtbdJ/vQBy7/TLaIhlAe7w0vr6oHfmGRRfVRTEgI/1I04haKxJg
yaspj2FAqFN5hNn9JhR6uaE9P47iW6GxOIdnPRLpGHqbkcAAMSXfqo86NUj2
NevPyBQGJPFrfv2Fi1E2J7ESkkbpf8Am8opJDlKx3cb1LIPiHzlu/807ER1W
PbXxXjYDzBuUkjov+OHWOEup27mUvkOOe4tqJ2Lddbflr+czID7k5/m26zn4
/NArbbNiBvzHOuBicaISjx/I0tUrZcDt1uTVgVM12DalxuxkOQM2ivspq19q
wPP8A1c1KxggpXlJ6k1mM3a58/0WqmJAa1pEumN1G2Yd+euuVMOAd1WXnp5s
6cDeWgK+cnUM4L9mxuijd2G+zC0vJBsYYPxuzPGccjcOIVViRJqo/BK6mzcr
9GDhe8fSyRYq/qarnOMcvTh2zKyQt40BfP3nvV+n9mLpEzeruToYYH+oni1J
og9n5nm2/euk+DZAPsI2fVhpY/jg724GcL+8jVd79uFyj/QvP3oZcEyq7fr6
631YY7Lix9d+BqhlW45iyT7cfKZnaXiQAfp6PnF3M3uxTslXjoEhyq/jB8U4
uHvxgPgyX8d7BmjIegR7KfZgMx8e4YZhBnyV1R1/odCNx36KSVaMUP7g9rFM
ck0XtjFQ3F34mcov2iv6SV4Hnq3QUs0cpfYLulXyyakNO0sZayV9pfyyvW99
gXozXuV//UzUNwaol0z57Gmpx56/H5iGfqf0sq2xL1CkBq83C7ni/x8D2jgl
G10PVmChHWX33H9S6y9XODbty8SKLdxp5osMEI9gjigPZKFS+U0F+ssMcGJX
WuQ9UIwOvNxVdeoPA1ImiqU3q1WiRtZDrVr/qHp/4Om8tbcWnbqqPwAsBBT5
CHLC+kbU12n9WZmNgLulN++QGS3IROXe1E4OAqTG3wQ7c3egL1GBi1JcBEwb
RcpuftWJrq5OYBdbQ4CZCCp5uLYbNbN6PT24loBVZ5I8uGx6kOyfK8TF9QRo
bWp9ejW8F/n9Pvrai5eAxbVlSXef96EfP7dLpfITkLlKO99Ptx+dmuTNaqUR
UHdEgsVjqB9lj/1UmWYQcOrAikLb1gFEG+muEmASsLLz80dHxQHkMJR3VFGI
AE2rmdtiXAOot/dFj54wAUI3dtWvi+hHezrumDhvImD844shgfk+9KLJaCxC
lICrf7bpJdL60EKN6nUsToBbn5pyz2IPMsAiCyObCfBd4BFSTOlGxUUs99kl
CbjPkrY4LdmFhHM/r5HcRoBS+SW/bMcO5JpRG6gtQ0BP5Ji/mmIr+pCUuMFm
OwEDYpuZ4TsbEcR6x/nJEaCgs8Pz2rcaxBp6PL9bnoDlTt5ZI9cC5Hm/d9Bk
PwG2r3dkbPqbgb/eLbBwVyPAue/I61jpIqzlGPY9BgjQq0u0c6P0mWJ316H2
AAFzoaQ323AtXmtt8uerBgH6GnLHlfY1YZsLyJNbk4AothTNKb023GYmxrtd
m4C2sB1ixxidWM6QLfTkUQLc2Z/0p/d0YX/dUVH74wSwxTvFvbjQg3+eqE8O
OklAs9P13oVqSg/aybsLThPw3CrsBJrsw7kHn5QMniHA2nJ52nyoHzPUrmms
nCVgDPMkfvYbwI7KJ1s36RMwKXya9Qv7IB7YveucuiEBa4XY9IX2D2KV7bRh
S2MCpAt2nPwgP4jDJecveZoSYP+G0Sc1OYCXxfqnk8wJcIg9cifowgA2Fi66
02xBwOdN34WMo/txOfGSdcqK4oNh8jr96D4swu/6hO8SAcpzj58vXurF7mvN
6PJXCNDOP/ZRY6Ebf+JQf3XWmoqHpeBJ49kufHCVxFanawR4cFxODvPowHFL
7G/Cr1PzRZX57gm0Yo75MaWyGwRUdrywt+pswBd/NFQM36T4JsC6HHCqBm/7
4tu12YnK5wtjSuVuHvb5YGuk6UzV+/KyugNPIp4cOPXligsV3/MJqVjV2zij
lf4rw52Atxqzz3hTsxFvwy+3zgcEsE69m0l9WIrsqga45jwIMLL3nZZcW406
S4v9iccEkJHBokbx9Wh3QYSgijcBnm+0h6vYW9DzLLcYoycEnBCu2ybB24Hm
Us1l3J4SULgs5Vg+24nOJRzIjXpGwIPHa55YpXajgqjNqtUBBPTyVTsU7upF
m/9p3K18TgDYV+6Xs+1D/iYXinAwAQVmgtw+d/rRSsmj32UvKP7JJFs5nR5A
l4USFEvDCPAr3Va4YW4A9TjV3Sx+SeHlJ+ex1nwQqfePZRW+ouqvV/1QP2gQ
ZShyTee/JqB41rbWz38QCQVJ7siLJoDPnuVNvu4g8pzRtMmJJcDOuXxCd2QA
zZy6nJIVT4B4gITaFaUBZPrGa/xNIhXfl8/HbPT7UfP65K0ZyQT8Oitz/Njh
PqRs02iVlkoAc/lV7mW2XhTX9C0mJZ0A04x3X30DuxHfNu6RpDcEWHgELXz7
1YlcHkuLJGYRcDwA3HkVOtD46BGT+BwCAgOenqx/2YLOali/jM0jIFRnYkgh
oAHtYEkjo4oIMNwZMS/XjNGw83a+sEoCRLxN62MbgvGxweMnXlQTcCt++z+W
+HRcqGTrG1xLAGe52AU1vkLsP5exOrCRAP66Xv3H32rwik77Yf9mAhr6Hxn7
MRvxlawfHn6tBPjHL7vb8rbiPl6+at92Ag59umJUZtGBD9juZHnSSUBMzBjH
McEunNFyCnl3E/ApwrwhMbEbb5C54fq4l9LHvsAL16n+5OUdUPKonwCXjuLD
sWp9eO5r1uLDQcr/Bju409T7sfnhLqUHQwQcubxd2px/ALfEzdxyf0/A3nVa
MavTBrAyGy3XbZgAlTsnX1vxDeL48/IzLiME5BTnb0hTHcQCFWd23v1MgM0t
GbsASq9umxxs74xS/DjX1aE+M4AnXILSbn+l/K+AUWDlPIDPDeVO3PpGQLZi
lYpQaz+uUumVcvhO8b36hd7C9z4sFzp/0f4/Aj5a9u3lGuzFEb8Y8XY/CHC6
FulWGtKDV5/d89n2J7X/X6X785Ld2CHnnNi1WcofOG93TD/rxCP8t82s5yk9
8Yy7PY1rx8VtBUOXFglYWP4ZM/q9Hm/dPiB4cZnqN2szit7iahz4ZEHP6g8B
315dVBruLcfWWio95iwk6LMp/2DkJeOBBAMBMzaS8quLVSaPn2INDudTJhwk
rIruX1GbDEbCVcUtBmtI0BGYaLLzLkBeokPc+mtJiNOBDUzxCjTvtqx1bj0J
T5c562UMalDbvv21OvwknBou8tm0swX5FN5aPkwjwYHNYLoqvR1pKr7ZtY9B
Aivbq0Whm52IPXv8khxJgoTpVlvrb12oYod4pIQgCfx81yJ7qfuqa6pRD7mB
BA/TS3F5+r1or1Qw97qNJMy8zTpTd6wP/Yprg1UiJOw5M9K5hb8f5Yitvj0n
SsLAoM1Zg7h+ZBepnj4uTkJ+dgrbKY4BJLvh7ud3m0nYfuzIuJX8APr2Ilew
cysJ72LesJrvGEAJ9KmTtVIkPNcJvuT4qx9ZBEh6FkmTUPPU5La2bz8S4Tlf
mi5LAvuos8zodB965xM+E72DhKHGM/fKtvShUK4eqZCdJHi9mVlKke1FZz3W
m/nsJqFFN/fSGFcPdf/VDHZTIEFk90whW3EXanN1b7bfQ4KlgLHC5KFO9GSp
iOWSMgkbV0W0vTFpR1q3Z5WM9lL4iPb/8J1uRuxzsrYn95MgI6pZM3W0Abn9
9/qtEpCwL7Uo/JxLBdp7dZBP9gAJIWOjHvdqCtHvMQFNUQ0S7min0yOtMpHd
x0c5q7VIEK39GOLVaoEtu619B0+SwFGl/zK+sgKLnoqvaj1Ngssn1oxJ/xr8
ruXDQuUZEpKNROqf7WzAYdpMufyzJDjyeQiSYc34XN3pCyl6FD6blT54Ufdf
gYNPXkYakOA0YzZS0tOB23FNZ6ARCV81Geu8xLuw7/6/XI9NSLCzye0O0OrG
WkVKanfNSDh858KacI0ezLHnhsP18yRcKGjoL6P34qrslBRLSxK4f7JZOhf0
Yje5Lx/1LpBw+Sgj+I1MH96XtpE8domEB8kH+WPs+vCClN5xuELCzb9WR1f+
/39+8f4PFayp+p4NrWyz7sM3xJuKpK6RMMxY0H8m3od3vGabFr5O5aOTNkxS
9+uJDapb+W+QEC8aXRjL2YsTQx2NOW6SwHlvPr9lTw+2YmQGLjqQkPBmYedj
1W4sGvit4T9HEm4Nq+hu3NiF3/NI/BtxIqFKpLZ220AHDn9irNjnTEKsydE9
Ep/bMO1Re3S5GwknlH8bJ4Y24A6WNQPZ7iQIagWtNd5Wi33dDvAkPqDiK1Dx
TAqsxJxOec7PPEnIZd/TdGBjLl64+vKMuR8Jfea+0nlF8eiZcyzXPX8SPso3
xezhyUFbfVJLXgWSYG0h5DfIUoLKw3KulwaRIE6jTW3TqURnk0skhkJIcB3s
lQ38WYMmC6v7F0Mpvsz5Fdmfa0AeDc1PmC8pfrMs55U4NaMNA91I6RUJeVd+
eNJOt6Hsr0OzZ19T+vW7K+xg04G0f39OdIgmYe6UvBV61Ik+ck4aPY8lwdjO
m+5u14WciDne7HgSdjvO/FaX7Ua8W1eqOxJJKHljc3BdQTdKUGR3+pFM+c8J
uPaFtwepHVony5NGQrC7WclJSv+9uvSPshkkKPvFPD4j3YNsrISDjmaSUGjq
tM9hshuxOWzWuppNQhjPL64c124U/lB2xSuXBEatnYXPcBfa/VwhMzGfhIan
M6e+0bpQY8x+q7pCik9z74O2b+xE5tkazNFiym/4B71VVtrRQuWxFrYyEubD
8nsKb7aiZ5267uKY4lP5uutdiU1o64ixgnolpUejpo9CUfWobNpq3Kya8psA
b7V0qxqku+pahFstCRWiDy0ZfyvQQxFX9tJGEg6od15/kJCDPpq86tnTRenj
5u0rlV2x+Pa1eK+zPSS85GRGP+fLwjyu6fsd+khwDuB1TVwuwAm+edOBAyRU
3/M2fhtWjlUjyuKy3lJ+Ynj+c8q1KtyTWqvf8Y4E/OzR/RT9WmxT0rruxwcS
Jny7tmzmasBszb0V60dIuHSITXvJvgmHv33vIPuZhG1LuTX1IS1418So1NFR
EmTT7g19v9aGGxb/e3flKwlcOazbgubasfmaX/5e30gw6jbf/el5B/7N/KuR
+J2Kd5/2XDprJ/aT4lys/Y+EBek3TusOd+KtyjzUg5OEV7IPmltMOnGZJnGe
bYaEX0tCaPuRTqyrt4khPkdC+ImnCYNrO/H3i1sb4RcJnrFpTuOxHfiB4w5X
swWqX0R9Gu2jdWAhzz273JYoPvloDXGVtOGsYLXRiBWKH69zOM5ytmKt+MNh
JX8p/i00R+fxNOOPuSeOv13FBOfMfVdHBxvw7ZpzLIusTHjpNMQuY1uHeXpM
80gOJiiekj5+uKsax3++eGUPFxO41756brK+Eu+ftd14dg0TbLMc1/YcL8XW
AvceBa5nworkokW/VCZuOPX67HqCCcLrTT5Ibo5GV2tGy7mYTNCysr6nIp+G
1ivLSrEKMeGu9LBmtl0Oyky1D1jZwIT+e7Xnd/kWIh2RoqVfG5kg9dYnMvJ8
GZoL/Gf5U4QJ3jI9f1/NVqAQzsOt38WYkCkfYcjDXY2UnX33jEkw4amRyY0N
0zVo6L+u1x+3MKG7x9tdJaYOuZ0XXDMkyYRZHe6HxhsbkGivmX3vNibUjLc9
/mPaiKq0EobaZZiQpi1bv+lCE7IqndRo2s6Eg47cN07saEacO+UzauSYsCrt
186komaUHHuHxLuY0GS/53IvZws6Rla4F8kzYbfFX9F1RAua8uGcyFFkguiz
0Yp1483I/++xMxlKFF6//R5ucmtG8vbPS5NUKPxnDzdyv21CfaODW2L3UeeV
z2mSfxuRk4Hos1eqTAjzVZH7N9mAhFovLrxATAi9/0nnezKlJ0g/H6jOhJ1b
vttdUa5D5rmzTb4HmZCxVS7FIoJ6P0rtVXh8iAkuCs8O87+tQnEv3V/d12RC
/oWcD/PzFUiTt57TRZsJNN+b60O/lSHfX2cG7Y5T59mmnlYyzUOM2mtuhmeZ
YJ7xc6rZzAcVKud+1dWj8l9cdTef9yY2TFs6ddKAOt96+882oxAc+fyxhIYJ
E+Y6vK9Y/kzFwNXmq2bGhJSOzbZrPmfhz870X8rnmRChzmOe/jwPe04Zmslb
MiFwkWy4yFaEpSyiG7ZfYIL21dHqHJlS3NT7dZfUJSYce/AgsJsT42vaO16K
X2GCp/o92/H6CsxX5sC+0ZoJ02q7lzRGKnH2zpJr5DUmdHTIuAy1VmHdOJZ+
/utMuBx0+YejbzX+TWrBuhtMqN1msl1HuIbqN37JnDeZEDQj2UW61uD9/3oE
WG4xYdkxnTGSUYM/2G9wWXakxkoSUfLZNfj+2PnReSeKz7JzFn8f1+DNhkkn
pp2ZEDCicD94Vw2ua50qmHBhwt4/HGfTM6vxZXVFsVE3JhSuHIrW5arG3Hl3
fYbdmfDIs3HVlFIVTpOqmh18wAT+nIV4qUOV+GTEapMeD6q+8hL3FnZV4Bne
k3Vtnkyo49yTsoGtHAc9DJZr9GJC+5jOfKhtCR64Ks5a7ssENd1r/9Tq87CF
yv7ExCAK36ZzZaVxMfjKf63z70Ko/faPrwlnvsB20WYaAmFMcB/2UGaTfoDv
rXk44vKKql/hrt9X2gOQZxl9Z/ZrJgyk4S3ociTyu5Hg9jWaCcb4k8gR8XgU
vEW5VTiO0seoi2tNbAqKGGzcoJPABBvDtxIdqW9Q7FOjq4+TmOCnZ5tUTmaj
FPX/CktTmPDnScV/HwVyUfa8G9dMGhPcjoxU1VTnoaJkvnOSb5iQqzf9dliy
AFWYxMQZZzFhwj/3SLJqIWrgV5gNyGFCWVBrzwv2ItReW6ten0fxWbaYc6Nr
Eeq7o+e/UsCEnrv9Gq+SitD77d8+7Cpmgn3d4qSVdxH6MuK8/VIphcd10Ypw
8SI0GbzOJaKcCTd+/2iWcypEs9qRTZ0VFP8Cf9Fa/QrQ0h85Qa5qJmyUVVDH
1vmINbvy0v5aKp+vb2M/0vPQmotn8m/UM+FBR3b/ff8cxCc0yp7YyITofZOm
p0ezENnmeOZdMxOqvW56HxDKRJserI7hb2OC/r7lf19t0tD2CRnk0sUEO8NP
2vEP4pBCZNnTrB4m6N7lW3XBJQrt1zn5bqyPCXwHDhaJLIWiI8X2d04PMcF/
6BdBCD1Ep23ZGzzfM6HCbLfegK0F0hcPIUqHKX/xpR24SNhj8z7JCz9HKP5f
PSArnP8IX/Ipytn6hQlOtiUvq2P8sa3aUVbjMSZ8XDhpltQejB1n3p0KGGdC
VJNRoYNeOHZNsH1dN0GN44INy3ZHYg/DVVPLk0zq/Zh72TUjCj/hCdy/6wcT
tu7yFD04EY0DqySeXPxJ8W/kefuh1hgc7pg3+HKWCW2vnN85GcTiaGlNqc55
JsRoNiPhwFic9GHAkXOBCY0jrEKJd2NxZuDV2n1LTLjIdZyRsSEWFxxeod1Y
ofrL2K+VWqcYXL701CLhLxPExkZWWYZH49oMkayhVYIgc5Zja55XFG6xyPrH
xyYIqyxY3rGHReIe4uCJwxyCEHIh5Onf9y/xUFNPxF0uQchvVcw6OhuKP7ld
/J65RhB08/aFCE4G44ndCypjawWhIktQ2WUoEC+Eb+g/xScI/t5X1g61e+N/
J9K3eAoIgru9t1XuSQ/MyYYcSuiC8DE17KSQnxteX9BRNU1Q602tw3fE3cJ0
awv+rYLU/E7F3p9bbPAGkTkzow3Ud6d9Zl+4zLF496MM/41UvGckN7pXHMPS
j8k/tSLUmJ3FoferLN61L/noshg1pn4VztZl/wNnun7I
       "]]},
     Annotation[#, "Charting`Private`Tag$27732#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-1.9727921911779478`, 1.9999999999627989`}}, {{
     0, 6.283185307179586}, {-1.9727921911779478`, 1.9999999999627989`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7812265786794653`*^9, 3.781226585817869*^9}, 
   3.78122662947556*^9, 3.781226725581914*^9, {3.781226812711093*^9, 
   3.7812269130373*^9}, {3.781227032816533*^9, 3.781227084865151*^9}, 
   3.781227270793737*^9, {3.781227320822754*^9, 3.781227328704917*^9}, 
   3.781229111410524*^9, {3.781229152443266*^9, 3.7812291610194397`*^9}, {
   3.781230209752449*^9, 3.7812302236555767`*^9}},
 CellLabel->"Out[62]=",ExpressionUUID->"73f67a34-083c-4f1e-8f7d-0e20aa276502"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"om", " ", "+", " ", "ep"}], ")"}], "t"}], "]"}], "-", 
   RowBox[{"Cos", "[", 
    RowBox[{"om", " ", "t"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.781227936116364*^9, 3.781227966187213*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"2882c582-6382-4212-a3b2-85488e51b832"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Cos", "[", 
    RowBox[{"om", " ", "t"}], "]"}]}], "+", 
  RowBox[{"Cos", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"ep", "+", "om"}], ")"}], " ", "t"}], "]"}]}]], "Output",
 CellChangeTimes->{3.781227966996167*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"6197b65e-e60a-45d7-8ca3-c489d4884f99"]
}, Open  ]]
},
WindowSize->{808, 708},
WindowMargins->{{Automatic, 28}, {Automatic, 4}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 537, 14, 45, "Input",ExpressionUUID->"92b2234b-49e4-4215-90b4-427d07351564"],
Cell[1120, 38, 485, 14, 55, "Output",ExpressionUUID->"ed02c072-0142-49d2-8002-7eb34855ce53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1642, 57, 528, 13, 45, "Input",ExpressionUUID->"d854ae9e-d3a5-4adb-a828-b5e011a080ce"],
Cell[2173, 72, 452, 13, 55, "Output",ExpressionUUID->"1bb6a422-6e88-4ba2-abe4-7877633bb96d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2662, 90, 706, 19, 52, "Input",ExpressionUUID->"4c41f4cc-240b-4750-b1e6-1fc1ac433553"],
Cell[3371, 111, 505, 13, 53, "Output",ExpressionUUID->"c88acff2-a4f8-4a9d-8d09-e3627d27e5b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3913, 129, 577, 16, 50, "Input",ExpressionUUID->"1d79d3b2-7bb0-4623-bc2d-fb139da84cd2"],
Cell[4493, 147, 618, 17, 56, "Output",ExpressionUUID->"a9780bc4-b90e-401a-b23e-7e66d84b9b85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5148, 169, 661, 18, 52, "Input",ExpressionUUID->"ada75109-0ca2-42b7-aecd-a7206de7738d"],
Cell[5812, 189, 431, 12, 53, "Output",ExpressionUUID->"6afee624-7427-47bf-8367-c36c42bfa5f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6280, 206, 576, 16, 50, "Input",ExpressionUUID->"4226178c-c306-400e-8d1d-d18eb6b08387"],
Cell[6859, 224, 571, 16, 56, "Output",ExpressionUUID->"a49e67fe-15c4-494d-982a-f374f49777c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7467, 245, 514, 15, 30, "Input",ExpressionUUID->"acddc7f9-0555-4867-a2fc-94de5b36846f"],
Cell[7984, 262, 442, 14, 37, "Output",ExpressionUUID->"4d514592-326a-42da-b6bf-47f228af6132"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8463, 281, 211, 3, 30, "Input",ExpressionUUID->"fb7d11ff-e647-4541-b376-d9d407cb6540"],
Cell[8677, 286, 366, 11, 34, "Output",ExpressionUUID->"61f92037-cd88-49c2-9095-5968c936d1fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9080, 302, 323, 7, 30, "Input",ExpressionUUID->"301eef08-1ba0-4689-990f-13388ba0cc5d"],
Cell[9406, 311, 236, 5, 34, "Output",ExpressionUUID->"f4ff88f4-0b2e-478a-a5b5-fc76fa4fb90b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9679, 321, 323, 7, 30, "Input",ExpressionUUID->"9c72a75d-a6c8-4109-8d3e-5b0e8eab2ef8"],
Cell[10005, 330, 217, 4, 34, "Output",ExpressionUUID->"a9553645-28ff-4df3-a095-e6daa0a97b56"]
}, Open  ]],
Cell[10237, 337, 177, 2, 30, "Input",ExpressionUUID->"f0a0be2e-0ad5-4708-b547-9e9facdd070e"],
Cell[CellGroupData[{
Cell[10439, 343, 1050, 25, 69, "Input",ExpressionUUID->"29fe6d9c-6682-4d63-b05b-f4dcfdc8e7e6"],
Cell[11492, 370, 982, 25, 72, "Output",ExpressionUUID->"43fecfc6-50d7-4404-bef1-0dcb9e9bc424"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12511, 400, 284, 5, 30, "Input",ExpressionUUID->"6fef863d-9e3c-48ba-8068-a39a8cf7ca90"],
Cell[12798, 407, 582, 14, 34, "Output",ExpressionUUID->"f71b3e8f-f53e-4e28-8749-2a534f129956"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13417, 426, 236, 4, 30, "Input",ExpressionUUID->"b76b3ce0-24d5-4b2c-822c-3853d5953905"],
Cell[13656, 432, 465, 10, 34, "Output",ExpressionUUID->"a9106ef3-40e4-49fa-9e9f-6316c2a94a21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14158, 447, 368, 8, 30, "Input",ExpressionUUID->"f03505c0-68d3-462b-afde-ec8256768f95"],
Cell[14529, 457, 482, 12, 34, "Output",ExpressionUUID->"e3abb582-4ab8-4e16-ac85-2ee8a19892aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15048, 474, 371, 8, 30, "Input",ExpressionUUID->"67bf0f34-d698-485f-9826-0b16f2cf9704"],
Cell[15422, 484, 435, 10, 34, "Output",ExpressionUUID->"0a3016c0-ad21-40be-82dc-c78d5004fc0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15894, 499, 299, 7, 30, "Input",ExpressionUUID->"4cd2f8e1-b5c4-436d-b188-60aa0f41e7cb"],
Cell[16196, 508, 304, 6, 34, "Output",ExpressionUUID->"528f3d8a-7985-4dd5-a9aa-4fe473583a8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16537, 519, 303, 7, 30, "Input",ExpressionUUID->"ede86bfd-cdaa-4981-921c-3a731d3f8bbb"],
Cell[16843, 528, 304, 6, 34, "Output",ExpressionUUID->"6838cf61-8b5e-4bb1-b44c-e4b874662073"]
}, Open  ]],
Cell[17162, 537, 1081, 26, 69, "Input",ExpressionUUID->"02584ab3-df56-4288-9daf-d10bb0eb8809"],
Cell[CellGroupData[{
Cell[18268, 567, 399, 10, 30, "Input",ExpressionUUID->"5ddad58a-c485-47df-8e54-596e9b1b3779"],
Cell[18670, 579, 1511, 43, 88, "Output",ExpressionUUID->"5a3874e8-bf29-42b3-890f-3a88e063d691"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20218, 627, 424, 9, 30, "Input",ExpressionUUID->"f8e88569-9356-4b95-90f7-30c8c2ff2c64"],
Cell[20645, 638, 5703, 139, 126, "Output",ExpressionUUID->"85b1b68a-af04-4108-9087-974322a5dfe5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26385, 782, 1529, 41, 125, "Input",ExpressionUUID->"d1b6cf52-2f1c-4c73-8c6a-521631f48e0d"],
Cell[27917, 825, 1046, 28, 74, "Output",ExpressionUUID->"674bf7ef-a94d-4ed2-a360-7c84fd3a9139"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29000, 858, 668, 17, 33, "Input",ExpressionUUID->"0d699512-0702-4d3a-b02a-6b6ebfd8fd32"],
Cell[29671, 877, 570, 13, 52, "Output",ExpressionUUID->"ba5b3eaa-0860-41e4-93c8-ff91558785d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30278, 895, 537, 12, 33, "Input",ExpressionUUID->"4337ec0e-4710-4e5c-b593-e1ffb36db0b6"],
Cell[30818, 909, 380, 10, 52, "Output",ExpressionUUID->"0de6aa58-2048-44f4-99e2-2ce8c2ebcba5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31235, 924, 874, 23, 77, "Input",ExpressionUUID->"7f8e6d09-dc6d-42fc-a2b7-7f2d1f8c0b32"],
Cell[32112, 949, 537, 12, 34, "Output",ExpressionUUID->"be44b1ce-0f44-46be-9b2c-95e11bbbbfd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32686, 966, 991, 26, 52, "Input",ExpressionUUID->"96a5eaf0-c1d1-4f1c-951d-ac35968a5179"],
Cell[33680, 994, 176, 2, 34, "Output",ExpressionUUID->"1cb00701-18a5-408c-81db-73a09a48c256"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33893, 1001, 917, 21, 77, "Input",ExpressionUUID->"93b2bc2b-f580-4260-903f-98566fbd5a44"],
Cell[34813, 1024, 462, 10, 34, "Output",ExpressionUUID->"13a0d494-fade-487e-ac51-44f1a728333b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35312, 1039, 918, 24, 52, "Input",ExpressionUUID->"b79b78e6-7155-4992-929a-d772f964ab9e"],
Cell[36233, 1065, 174, 2, 34, "Output",ExpressionUUID->"fa0552db-6525-47e7-bde6-66b03ce806f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36444, 1072, 1116, 29, 56, "Input",ExpressionUUID->"e188f398-1b28-41e0-86ce-43abd2ac7eec"],
Cell[37563, 1103, 899, 23, 51, "Output",ExpressionUUID->"8dea8af7-d1dd-47cf-adbc-8c73f5f3e5f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38499, 1131, 954, 31, 63, "Input",ExpressionUUID->"59658ed8-304e-45cf-98b5-b9be0ce0faf9"],
Cell[39456, 1164, 890, 30, 51, "Output",ExpressionUUID->"05394023-46db-4415-acfd-bafa3154f043"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40383, 1199, 210, 3, 30, "Input",ExpressionUUID->"08bda8f1-0f53-4c59-bf5d-4d80d54e415a"],
Cell[40596, 1204, 3780, 106, 207, "Output",ExpressionUUID->"46080149-259b-4b1c-b55e-143d75e97824"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44413, 1315, 444, 13, 47, "Input",ExpressionUUID->"8e687685-f823-4094-84e4-eda7d317f06c"],
Cell[44860, 1330, 421, 13, 51, "Output",ExpressionUUID->"5b57f107-22c8-47a5-b2c4-e4095cc3a8e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45318, 1348, 295, 5, 30, "Input",ExpressionUUID->"8ce75880-1f32-4fe2-9354-55a356162cc5"],
Cell[45616, 1355, 1172, 38, 69, "Output",ExpressionUUID->"2f518801-def7-4d19-bf2a-3a460f8ceb7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46825, 1398, 1164, 35, 110, "Input",ExpressionUUID->"d911b27b-d6a7-49e9-bcde-e45a395e6e5b"],
Cell[47992, 1435, 879, 29, 80, "Output",ExpressionUUID->"b38029be-6207-4e75-abdc-3cfef094e122"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48908, 1469, 441, 11, 30, "Input",ExpressionUUID->"b2b57400-dc93-4bbd-a9f1-1a3df2b2ef4b"],
Cell[49352, 1482, 408, 10, 51, "Output",ExpressionUUID->"ade0b790-ee1c-4487-9b53-e8c5de41e53d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49797, 1497, 658, 16, 48, "Input",ExpressionUUID->"7dddf4d9-5713-4f6b-aade-8b201390c911"],
Cell[50458, 1515, 1111, 33, 64, "Output",ExpressionUUID->"8b30b828-d19d-40a9-94a4-b578eff069e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51606, 1553, 993, 28, 105, "Input",ExpressionUUID->"9f55ef89-2134-4f21-ab03-5102e1655ceb"],
Cell[52602, 1583, 429, 13, 70, "Output",ExpressionUUID->"5387eae1-35dd-4845-a9cb-e59381be15c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53068, 1601, 685, 20, 74, "Input",ExpressionUUID->"7b8e3a6d-6fad-4f4e-abe8-6723bddf2a97"],
Cell[53756, 1623, 633, 18, 78, "Output",ExpressionUUID->"ba825412-412a-4bc6-8b12-bfc565ca3ce0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54426, 1646, 872, 25, 74, "Input",ExpressionUUID->"fef5e48c-14c1-4222-b300-d1df0dd6f52b"],
Cell[55301, 1673, 535, 16, 58, "Output",ExpressionUUID->"d28fd2af-b038-4b9f-8e51-b470993ba72a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55873, 1694, 738, 20, 68, "Input",ExpressionUUID->"d5c43e76-efa2-4856-a2e0-bc367f69b540"],
Cell[56614, 1716, 400, 12, 42, "Output",ExpressionUUID->"d7b0e9c1-03fc-4482-8ae2-eb4b1d90be92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57051, 1733, 234, 4, 30, "Input",ExpressionUUID->"85326e1f-d26d-47d6-bb31-ac5a66d4d33a"],
Cell[57288, 1739, 742, 22, 51, "Output",ExpressionUUID->"b9fd908c-178a-44b1-a291-29603c118db7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58067, 1766, 684, 18, 30, "Input",ExpressionUUID->"06069d0f-5b29-46cd-aaad-7e820307d705"],
Cell[58754, 1786, 64904, 1067, 145, "Output",ExpressionUUID->"00f66996-ef56-4046-8be9-448002f82731"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123695, 2858, 735, 20, 68, "Input",ExpressionUUID->"9ed0e4d2-76d6-4d38-81c9-67a8e75badaf"],
Cell[124433, 2880, 375, 11, 71, "Output",ExpressionUUID->"e82e7c9d-41ae-4948-843a-53505b42181c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124845, 2896, 229, 4, 30, "Input",ExpressionUUID->"18324287-8e90-44e3-a8cf-10c2d7ea7da1"],
Cell[125077, 2902, 276, 7, 51, "Output",ExpressionUUID->"186ed7dc-cf51-4a4f-ae3a-707414b04560"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125390, 2914, 432, 14, 61, "Input",ExpressionUUID->"838ec26d-1ec2-414b-bcd3-aec646f42d6a"],
Cell[125825, 2930, 505, 16, 34, "Output",ExpressionUUID->"51a04c59-51db-4f96-8b0c-a8addd0e4c23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126367, 2951, 211, 3, 30, "Input",ExpressionUUID->"74965a4c-f15b-4d19-8db3-bf36f9aae976"],
Cell[126581, 2956, 227, 4, 34, "Output",ExpressionUUID->"35db9721-5c40-42cd-8ebf-0d87d4016912"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126845, 2965, 357, 9, 61, "Input",ExpressionUUID->"537be128-84bb-4b12-9fee-f3bce8c08977"],
Cell[127205, 2976, 318, 8, 34, "Output",ExpressionUUID->"20d4aeae-3376-4df2-8f50-e58ed32f7a51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127560, 2989, 526, 14, 33, "Input",ExpressionUUID->"c729d997-f782-4669-8c14-be51de5ff076"],
Cell[128089, 3005, 414, 10, 34, "Output",ExpressionUUID->"d754ca45-7983-4b65-9bc6-34b10b7b30d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128540, 3020, 213, 3, 30, "Input",ExpressionUUID->"de0b72d9-f775-4cd1-a1cb-5ca381f3cc22"],
Cell[128756, 3025, 447, 12, 34, "Output",ExpressionUUID->"61be6e91-93ec-4434-a850-cc8754cef6d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129240, 3042, 210, 3, 30, "Input",ExpressionUUID->"0d6576b1-c28d-45b3-9eda-73a69687f746"],
Cell[129453, 3047, 771, 29, 60, "Output",ExpressionUUID->"42e2fc8f-3dff-401a-82f6-3b1db3f2680c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130261, 3081, 194, 3, 30, "Input",ExpressionUUID->"50a565e5-e992-4e49-a489-4d165768ffcf"],
Cell[130458, 3086, 747, 28, 60, "Output",ExpressionUUID->"f6695264-02c8-453c-8362-8a100d0f8f65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131242, 3119, 870, 23, 52, "Input",ExpressionUUID->"91d898be-837a-4d48-8358-cac338e5f5cd"],
Cell[132115, 3144, 354, 9, 24, "Message",ExpressionUUID->"2390cca0-9f1c-4052-901e-cbe9788f72cd"],
Cell[132472, 3155, 273, 7, 34, "Output",ExpressionUUID->"af1e7ff1-d5b5-46c8-9ee9-a44ab7806ea7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132782, 3167, 396, 11, 47, "Input",ExpressionUUID->"86643659-0622-4e34-a2dc-73175497a8f0"],
Cell[133181, 3180, 393, 11, 37, "Output",ExpressionUUID->"18049c3e-acec-4c59-b680-644693b0e751"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133611, 3196, 212, 3, 30, "Input",ExpressionUUID->"8ba94966-b21e-410f-aa96-8c78a59fd8c3"],
Cell[133826, 3201, 286, 6, 34, "Output",ExpressionUUID->"96f46d2f-4fe4-4310-8c27-0cd60e437f07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134149, 3212, 213, 3, 30, "Input",ExpressionUUID->"032a6b58-622d-4bf2-b920-3a22c6d85136"],
Cell[134365, 3217, 331, 9, 34, "Output",ExpressionUUID->"bc86d351-df2b-46b9-b3c6-362dca33c8fe"]
}, Open  ]],
Cell[134711, 3229, 547, 10, 30, "Input",ExpressionUUID->"87d19fc4-d5c5-4b02-9279-7d64be518080"],
Cell[CellGroupData[{
Cell[135283, 3243, 1366, 33, 52, "Input",ExpressionUUID->"ed8a4a29-303c-4e2d-96e9-be97f542c2f0"],
Cell[136652, 3278, 114727, 1902, 270, "Output",ExpressionUUID->"73f67a34-083c-4f1e-8f7d-0e20aa276502"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251416, 5185, 402, 10, 30, "Input",ExpressionUUID->"2882c582-6382-4212-a3b2-85488e51b832"],
Cell[251821, 5197, 353, 10, 34, "Output",ExpressionUUID->"6197b65e-e60a-45d7-8ca3-c489d4884f99"]
}, Open  ]]
}
]
*)

